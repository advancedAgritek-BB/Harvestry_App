{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Light;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Harvestry ERP\
Feature Requirements Package (FRP)\
\
Document: Harvestry ERP \'97 Feature Requirements Package (FRP)\
Version: 2025-09-29\
Editors: Product, Architecture, SRE\
Source Alignment (canonical):\
  \'95 PRD \'97 CanopyLogic PRD \'96 Enterprise Edition v1.0 (finalized for build), Sep 17, 2025\
  \'95 Hardware \'97 HARVESTRY EDGE HARDWARE v3.3 (Sep 22, 2025); Edge Mfg Requirements v2.1 (Sep 21, 2025)\
  \'95 Team OS \'97 Harvestry_AI_Product_Team (gates & checklists)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition, v1.0 (Sep 17, 2025) \'97 docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
Change Log: (date, summary, modules touched)\
\
FRP-00.A \'97 Platform Baseline (MVP-mandatory)\
Purpose & Scope\
Provide the shared repo scaffolding, data/security guardrails, and operational posture required for every Harvestry module to reach MVP readiness. Applies to all squads from day 0.\
\
Baseline Layout\
harvestry/\
\uc0\u9500 \u9472  nx.json                  # Nx (or Turbo) monorepo; swap if you prefer Turbo\
\uc0\u9500 \u9472  package.json\
\uc0\u9500 \u9472  tsconfig.base.json\
\uc0\u9500 \u9472  .env.example\
\uc0\u9500 \u9472  .github/workflows/       # CI: lint/test/build/release + secret scanning + SAST\
\uc0\u9474 \
\uc0\u9500 \u9472  apps/\
\uc0\u9474   \u9500 \u9472  web/                  # Next.js (App Router), operator UI\
\uc0\u9474   \u9474   \u9500 \u9472  app/\
\uc0\u9474   \u9474   \u9474   \u9500 \u9472  (dashboard)/\
\uc0\u9474   \u9474   \u9474   \u9500 \u9472  (inventory)/\
\uc0\u9474   \u9474   \u9474   \u9500 \u9472  (compliance)/\
\uc0\u9474   \u9474   \u9474   \u9492 \u9472  api/            # route handlers / edge functions if needed\
\uc0\u9474   \u9474   \u9500 \u9472  lib/\
\uc0\u9474   \u9474   \u9474   \u9500 \u9472  charts/         # view-level registry picks SciChart vs ECharts\
\uc0\u9474   \u9474   \u9474   \u9474   \u9500 \u9472  chart-registry.ts\
\uc0\u9474   \u9474   \u9474   \u9474   \u9492 \u9472  profiles/    # per-surface defaults (e.g., realtime vs historical)\
\uc0\u9474   \u9474   \u9474   \u9500 \u9472  auth/           # Supabase auth helpers (SSR/ISR-safe)\
\uc0\u9474   \u9474   \u9474   \u9492 \u9472  flags/          # feature-flag helpers (Unleash, site-scoped)\
\uc0\u9474   \u9474   \u9500 \u9472  components/\
\uc0\u9474   \u9474   \u9500 \u9472  styles/            # Midnight theme tokens + Tailwind config\
\uc0\u9474   \u9474   \u9492 \u9472  public/\
\uc0\u9474 \
\uc0\u9474   \u9500 \u9472  admin/                # optional: internal tooling console (migrations, flags)\
\uc0\u9474   \u9492 \u9472  mobile/               # optional: Expo app for badge login/scan\
\uc0\u9474 \
\uc0\u9500 \u9472  services/\
\uc0\u9474   \u9500 \u9472  api-gateway/          # Fastify or Nest; OpenAPI-first; thin controllers\
\uc0\u9474   \u9500 \u9472  realtime/             # WS/SSE subscriptions (WAL tail or Supabase Realtime)\
\uc0\u9474   \u9500 \u9472  telemetry-ingest/     # MQTT/HTTP/SDI-12 adapters \u8594  normalize \u8594  writer\
\uc0\u9474   \u9500 \u9472  rollups/              # 1m/5m/1h refreshers; materialized views\
\uc0\u9474   \u9500 \u9472  irrigation-orchestrator/  # command plane, interlocks, safe aborts (outbox+sagas)\
\uc0\u9474   \u9500 \u9472  alert-engine/\
\uc0\u9474   \u9500 \u9472  integrations/\
\uc0\u9474   \u9474   \u9500 \u9472  slack-bridge/      # two-way mirror or notify-only; idempotent mapping\
\uc0\u9474   \u9474   \u9500 \u9472  qbo-worker/        # item-level + GL-summary; idempotency, backoff, DLQ\
\uc0\u9474   \u9474   \u9492 \u9472  metrc-biotrack/    # rate-aware queues; replay; audit exports\
\uc0\u9474   \u9500 \u9472  reports-scheduler/    # CSV/XLSX/PDF on cron; site TZ\
\uc0\u9474   \u9500 \u9472  ai/\
\uc0\u9474   \u9474   \u9500 \u9472  anomaly/\
\uc0\u9474   \u9474   \u9500 \u9472  yield/\
\uc0\u9474   \u9474   \u9492 \u9472  et0/               # ET\u8320  recs; auto-apply behind flag\
\uc0\u9474   \u9500 \u9472  pdm/                  # predictive maintenance service\
\uc0\u9474   \u9492 \u9472  retention-controller/ # auto-tighten raw retention during surges\
\uc0\u9474 \
\uc0\u9500 \u9472  packages/\
\uc0\u9474   \u9500 \u9472  domain/               # pure domain models (plants, lots, tasks, irrigation\'85)\
\uc0\u9474   \u9500 \u9472  contracts/            # OpenAPI/JSON Schemas; SDK generation targets\
\uc0\u9474   \u9500 \u9472  sdk-web/              # typed client generated from contracts\
\uc0\u9474   \u9500 \u9472  sdk-node/\
\uc0\u9474   \u9500 \u9472  ui/                   # DS primitives (Radix/Tailwind) + Midnight tokens\
\uc0\u9474   \u9500 \u9472  charts-core/          # ChartAdapter interface + types (engine-agnostic)\
\uc0\u9474   \u9500 \u9472  charts-scichart/      # SciChart adapter + theme (client-only loader)\
\uc0\u9474   \u9500 \u9472  charts-echarts/       # ECharts adapter for light/static/printable views\
\uc0\u9474   \u9500 \u9472  auth/                 # Supabase auth wrappers & ABAC helpers\
\uc0\u9474   \u9500 \u9472  rls-abac/             # SQL policy generators + helpers (site-scoped RLS, ABAC)\
\uc0\u9474   \u9492 \u9472  utils/\
\uc0\u9474 \
\uc0\u9500 \u9472  db/\
\uc0\u9474   \u9500 \u9472  migrations/\
\uc0\u9474   \u9474   \u9500 \u9472  core/              # relational core (identity, spatial, inventory, tasks\'85)\
\uc0\u9474   \u9474   \u9500 \u9472  rls/               # RLS policies per table + ABAC function hooks\
\uc0\u9474   \u9474   \u9500 \u9472  timeseries-postgres/  # native partitioning + BRIN (Supabase-friendly, default)\
\uc0\u9474   \u9474   \u9500 \u9472  timescale/         # optional hypertables + continuous aggs (ENTERPRISE)\
\uc0\u9474   \u9474   \u9500 \u9472  clickhouse/        # optional OLAP DDL + ingestion jobs (ENTERPRISE)\
\uc0\u9474   \u9474   \u9492 \u9472  audit/             # tamper-evident hash chain (prev_hash/row_hash)\
\uc0\u9474   \u9500 \u9472  seeds/\
\uc0\u9474   \u9500 \u9472  tests/\
\uc0\u9474   \u9474   \u9500 \u9472  rls-fuzz/          # cross-site isolation fuzz tests\
\uc0\u9474   \u9474   \u9492 \u9472  perf-k6/\
\uc0\u9474   \u9492 \u9472  views/                # materialized views & helpers (rollups, KPIs)\
\uc0\u9474 \
\uc0\u9500 \u9472  infra/\
\uc0\u9474   \u9500 \u9472  supabase/             # local dev compose; edge functions; policies packaging\
\uc0\u9474   \u9500 \u9472  k8s/                  # manifests/helm for services; blue/green; canary\
\uc0\u9474   \u9500 \u9472  terraform/            # cloud envs; PITR; cross-region replica\
\uc0\u9474   \u9500 \u9472  observability/        # Grafana/Loki/Tempo dashboards & rules\
\uc0\u9474   \u9500 \u9472  unleash/              # site-scoped feature flags (closed_loop_ecph, et0, sms\'85)\
\uc0\u9474   \u9500 \u9472  n8n/                  # integrations workflows (QBO, METRC, Slack)\
\uc0\u9474   \u9500 \u9472  mqtt/\
\uc0\u9474   \u9500 \u9472  firmware/             # STM32H723 tree; A/B OTA; safety FSM (ESTOP/door/broker loss\u8594 OFF)\
\uc0\u9474   \u9500 \u9472  manufacturing/        # PCBA + enclosure build packs; test fixtures/logs\
\uc0\u9474   \u9492 \u9472  installers/           # one-pagers, wiring, INT/EXT transformer policy\
\uc0\u9474 \
\uc0\u9492 \u9472  docs/\
   \uc0\u9500 \u9472  runbooks/             # controller offline, DB failover, closed-loop fallback\
   \uc0\u9500 \u9472  oncall/               # escalation chains; burn-rate alerts\
   \uc0\u9500 \u9472  cost-guardrails/      # retention/window tuning; ClickHouse trigger checks\
   \uc0\u9500 \u9472  contract/             # Slack/QBO/METRC contract tests\
   \uc0\u9500 \u9472  prd/                  # canonical PRD snapshot + diffs\
   \uc0\u9492 \u9472  team-os/              # VPT kit (personas, gates, checklists)\
\
Core Platform Requirements\
1) Services & APIs\
\'95 REST + WebSocket/SSE external APIs with OpenAPI-first design; internal services may use REST/gRPC. Contracts drive generated SDKs (web/node). Outbox + saga orchestration underpin command plane, Slack mirror, QBO sync, and compliance integrations; all mutating endpoints accept idempotency keys with retries/backoff and DLQ coverage.\
\
2) Packages & Shared Libraries\
\'95 Shared packages provide domain models, UI primitives, chart adapters (SciChart/ECharts), auth helpers, and SQL policy generators so squads stay engine-agnostic and RLS-aware.\
\
3) Data Architecture & Migrations\
\'95 PostgreSQL 15 primary with TimescaleDB hypertables for sensor_readings and 1m/5m/1h rollups; ClickHouse sidecar enables only when ingest/query triggers fire. Supabase-hosted Postgres allowed for demos while keeping identical schemas and RLS policies.\
\'95 RLS enforced for org+site scope with ABAC overlays on high-risk actions; migrations bundle RLS/ABAC policies and supporting indexes. Audit hash chain (prev_hash/row_hash) verifies nightly and anchors to WORM storage.\
\'95 Zero-downtime migrations follow expand \uc0\u8594  backfill \u8594  flip reads \u8594  flip writes \u8594  contract, guarded by CI checks and shadow reads.\
\
4) Retention & Cost Controls\
\'95 Timeseries partitioned by (site_id, month) with BRIN indexes (site_id, ts) and B-tree (stream_id, ts); continuous aggregates maintained with freshness SLOs. Retention controller tightens raw retention when ingest >120k metrics/min sustained 24h. S3/Parquet archive enforces hot/warm/cold lifecycle (30-90d, 12-24m, 7y WORM option).\
\
5) Observability, SLOs & DR\
\'95 Golden signals instrumented across services: ingest lag, queue depth, rollup freshness, command error rate, controller health, replication lag, API p99, disk IOPS. Burn-rate alerting (fast 1h, slow 6h). Grafana/Loki/Tempo dashboards and Sentry errors ship with features.\
\'95 SLO targets: device\uc0\u8594 store p95 < 1.0 s (p99 < 2.5 s); store\u8594 client p95 < 1.5 s; command enqueue\u8594 ack p95 < 800 ms (p99 < 1.8 s); task/messaging round-trip p95 < 300 ms; site-day report p95 < 90 s.\
\'95 DR posture: warm cross-region replica (RPO \uc0\u8804 5 m, RTO \u8804 30 m) with WAL archiving; quarterly failovers rehearsed.\
\
6) Security & Privacy\
\'95 Secrets managed via KMS/Vault with rotation jobs; CI blocks merges on secret scan hits. DPIA/PIA required for PII features; zero-trust IAM with just-in-time elevation. Managed Supabase Auth remains compatible with RLS/ABAC policies.\
\'95 Compliance exports deliver regulator-ready audit trails by plant/package/facility. Badge login uses static IDs with revocation and device sessions.\
\
7) Feature Flags & Site Policies\
\'95 Site-scoped flags: closed_loop_ecph_enabled, ai_auto_apply_enabled, et0_steering_enabled, sms_critical_enabled, slack_mirror_mode. High-risk features ship disabled by default and follow shadow \uc0\u8594  staged \u8594  enable promotion checklists before closed-loop, AI auto-apply, or critical SMS go live.\
\
Notes on Provenance\
\'95 Requirements consolidate PRD SLOs, DR, RLS/ABAC, audit hash chain, charting patterns, and edge hardware safety constraints (PoE+, 24 VAC loads, interlocks, transformer concurrency limits, HA broker/offline operation).\
\
FRP-00.B \'97 CI/CD & Quality Gates\
Purpose & Scope\
Define pipeline automation, quality bars, and documentation expectations that every change must satisfy before promotion.\
\
CI/CD Pipelines\
\'95 Monorepo uses Nx/Turbo with GitHub Actions to run linting, formatting, type-checks, unit tests, secret scanning, SAST, dependency/SBOM checks, and container builds on every PR.\
\'95 Release workflows support blue/green + canary (5%\uc0\u8594 25%\u8594 50%\u8594 100%) with automated rollback when SLOs regress. Migrations stage via expand/backfill pattern before traffic shifts.\
\
Testing & Validation\
\'95 Required suites: unit, integration, contract, and E2E; property-based tests for UoM/dosing calculations; contract coverage for Slack, QBO, and METRC.\
\'95 Hardware-in-the-loop simulations for irrigation/interlocks and chaos testing for telemetry links run in CI (nightly minimum). Coverage \uc0\u8805 80% is required to merge.\
\'95 Performance: monthly load tests with synthetic telemetry validate SLO adherence and ClickHouse trigger thresholds.\
\
Documentation & Runbooks\
\'95 PRs ship updated product/engineering docs, runbooks (DR, closed-loop fallback, cost guardrails), installer guides for hardware changes, and keep the Team OS kit under docs/team-os/ in sync with decisions.\
\'95 Release checklists reference FRP-00.1 gating matrix; heavy-gate evidence (SLO hold, DR drill, DLQ report) is attached before promotion and light-gate soak notes are captured in the deployment summary.\
\
FRP-00.1 \'97 Enterprise Release Gates (Risk-tiered)\
Purpose & Scope\
Apply proportional acceptance gates so risky releases keep the enterprise bar while routine app work ships with lightweight guardrails.\
\
Acceptance Gating Matrix\
| Gate type | Release triggers | Required evidence | Ownership & artifacts |\
| --- | --- | --- | --- |\
| Heavy (enterprise) | Schema or storage changes; control-loop logic; security/RLS/ABAC rules; DR/backup systems; fan-out integrations (QBO, METRC, LeafLink, Messaging) | 7-day staging SLO hold with prod-like load; DR drill proof (RPO \uc0\u8804 5 m / RTO \u8804 30 m); DLQ <0.1% over the hold window; release checklist + rollback rehearsal recorded | SRE owns load harness, seeded traffic, dashboards, DR drill; feature squad provides fixtures, traffic models, remediation plan; Security/Compliance sign-offs attached |\
| Light (routine) | UI/copy; feature flag toggles without schema/safety impact; contract-compatible API evolutions; minor services without cross-service fan-out | 24-48 h staging soak; contract + E2E suites green; targeted SLO spot check on affected endpoints; canary 5%\uc0\u8594 25%\u8594 100% with automated rollback | Feature squad leads execution; SRE consults on observability alarms; release captain updates runbooks and communicates blast radius |\
| Shared obligations | All releases | Release notes + dependency diffs; documentation/runbook updates; on-call briefing; SRO entry before production deploy | Release owner updates docs/ops/runbooks/release_gating_sro.md with who-does-what and handoff contacts |\
\
Operational Notes\
\'95 SRE curates the prod-like load harness and staging telemetry seeds; squads contribute fixtures and traffic models per feature.\
\'95 The Service Readiness Overview (SRO) runbook lives at docs/ops/runbooks/release_gating_sro.md and lists SRE vs squad duties for each module.\
\'95 Heavy gate evidence is attached to the release checklist; light gate evidence is captured inline in the deployment ticket.\
\
FRP-01 \'97 Identity, Access, Roles, Training & Badge Login (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.1 Identity/Access/Training, \'a77 Security/Governance, \'a78 Reliability/Observability, \'a710 APIs & Services, \'a712 Acceptance, \'a713 Roadmap (MVP includes Identity/RLS). \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
1) Purpose & Scope\
Provide secure, multi-tenant identity and site-scoped access control with custom roles, ABAC for high-risk actions, badge login for shared devices, device sessions, SOP/training management with task gating, and tamper-evident audit logging. All reads/writes are restricted by Row-Level Security (RLS) at org+site scope; additional Attribute-Based Access Control (ABAC) protects actions like destruction, controller overrides, and closed-loop enablement.\
In scope (MVP)\
\'95	Orgs & sites; user \uc0\u8594  multi-site membership.\
\'95	Custom roles & permission matrix.\
\'95	Site-scoped RLS on all business tables.\
\'95	ABAC policy checks for high-risk actions.\
\'95	Badge credentials (static IDs), revocation, device sessions.\
\'95	SOPs/training: versioned SOPs, assignments, quizzes, digital signoffs.\
\'95	Task gating: block task start/complete if training/SOP preconditions unmet.\
\'95	Hash-chained audit logs (prev_hash/row_hash) with nightly verification.\
Non-goals (MVP)\
\'95	SSO/OIDC (can be Phase 2+).\
\'95	Fine-grained DLP; field-level encryption beyond secrets/KMS baseline.\
\'95	Consumer login or POS identities (explicit PRD non-goals).\
\
2) Personas & Core Use Cases\
\'95	Admin (Org/Site): create org/site, invite users, assign sites/roles, manage policies.\
\'95	Head of Cultivation / Processing Manager: manage tasks; enforce training gates.\
\'95	Compliance Officer: configure ABAC policies (e.g., two-person approval), run audits.\
\'95	Operators/Techs: badge into shared terminals to run checklists & tasks quickly.\
\'95	Finance / Executives: read-only dashboards and exports as per role.\
\
3) Functional Requirements\
3.1 Organizations, Sites, Membership\
\'95	Create/manage organizations and sites (site has timezone/address).\
\'95	Add user; assign to one or more sites with a role per site.\
\'95	A user without membership in a site cannot read or write that site\'92s data (must pass RLS).\
\'95	Bulk site assignment via CSV/XLSX import (admin-only).\
3.2 Roles & Permissions (RBAC + ABAC)\
\'95	Custom roles: each role maps to permissions per module/action (CRUD + special actions).\
\'95	ABAC policy layer over RBAC for high-risk actions (e.g., destruction, controller manual override, closed-loop enablement) with optional two-person signoff.\
\'95	Policy inputs: user attributes (role, certifications), object attributes (site policy flags), context (time window, quiet hours), confidence thresholds (AI auto-apply flags).\
3.3 Badge Login & Device Sessions\
\'95	Register static badge IDs to user; generate/revoke credentials; rotate on loss.\
\'95	Device sessions for shared terminals (room kiosks): badge tap \uc0\u8594  session unlock; inactivity timeout and forced logout on badge revoke.\
\'95	Audit all session events (start/stop, failed badge, forced logout).\
3.4 SOPs, Training, Quizzes, Digital Signoffs\
\'95	Versioned SOPs with metadata (title, version, effective date, attachments).\
\'95	Assignments: by user, by role, or by site; due dates; reminders.\
\'95	Quizzes with attempts, pass thresholds; randomization optional.\
\'95	Digital signoffs tied to SOP version.\
\'95	Task gating: When a task blueprint has preconditions (SOP/training), block start/complete with explicit reason UI and event log.\
3.5 Auditability & Governance\
\'95	Audit hash chain on audit_logs: store row_hash + prev_hash; nightly verification jobs; optional anchoring to WORM storage.\
\'95	PII minimization; secrets via KMS/Vault; token rotation jobs.\
\'95	Export regulator-ready audit trails by plant/lot/package/facility (identity events linked).\
3.6 Observability, Reliability, SLOs\
\'95	SLOs relevant here: task/messaging round-trip p95 < 300 ms; login flow p95 < 1.5 s (derived), report generation p95 < 90 s.\
\'95	Golden signals: auth error rate, policy evaluation latency, RLS violation attempts, session concurrency, audit verification lag.\
Acceptance (from CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
\'95	A user without site membership cannot read/write that site\'92s data (RLS).\
\'95	Attempt to complete a gated task without SOP/training is blocked with explicit reason.\
\
4) Data Model (additions & key tables)\
Entities listed in CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.1 and \'a77 (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md); below adds field-level detail for build. All site-scoped unless noted.\
organizations\
\'95	id (uuid, pk), name, slug, created_at\
sites\
\'95	id (uuid, pk), org_id (fk), name, timezone, address_json, policies_json, created_at\
users\
\'95	id (uuid, pk), email (uniq), display_name, phone?, is_active, created_at\
user_sites (membership)\
\'95	user_id (fk), site_id (fk), role_name, status (active/suspended), pk (user_id, site_id)\
user_roles (role catalog, org-scoped)\
\'95	org_id (fk), role_name, permissions_json (module\uc0\u8594 actions), pk (org_id, role_name)\
badge_credentials\
\'95	id (uuid, pk), user_id (fk), badge_id (uniq), status (active/revoked), issued_at, revoked_at, reason\
device_sessions\
\'95	id (uuid, pk), site_id (fk), device_id (string), user_id (fk), started_at, ended_at, ended_reason (timeout/logout/revocation), ip, ua\
sops\
\'95	id (uuid, pk), site_id (fk), code, title, version, status (draft/effective/retired), body_rich, attachments[], effective_at\
sop_assignments\
\'95	id, sop_id (fk), user_id (fk) or role_name (for role-wide), due_at, required_version, assigned_by, assigned_at, status (pending/completed/overdue)\
quiz_questions / quiz_attempts\
\'95	quiz_questions: id, sop_id, body, choices[], correct_choice_index\
\'95	quiz_attempts: id, sop_id, user_id, submitted_at, score_pct, passed (bool), answers[]\
digital_signoffs\
\'95	id, sop_id, user_id, sop_version, signed_at, ip, device_session_id?\
abac_policies (org-scoped)\
\'95	id, org_id, name, description, decision_fn (policy DSL or JSON), risk_level, two_person_required (bool), enabled\
policy_decisions (log)\
\'95	id, site_id, user_id, action, object_ref, decision (allow/deny), reason, two_person_state (requested/approved), ts\
audit_logs (hash-chained)\
\'95	id (uuid), site_id, actor_user_id, action, entity, entity_id, payload_json, ts, prev_hash, row_hash, verified_at\
RLS: All select/update/delete on site-scoped tables require current_setting('app.site_ids') overlap; org-scoped catalogs (roles/policies) require org match; ABAC is enforced in service layer and logged in audit/policy_decisions.\
\
5) Permission Model (RBAC baseline)\
PRD personas to default roles; editable per org.\
Module / Action\
Admin\
Head of Cultivation\
Processing\
Compliance\
Facilities/Ops\
Finance\
Executive\
Operator\
Users & Roles (site)\
\uc0\u10003 \
view\
view\
view\
view\
view\
view\
\'97\
SOPs/Training\
manage\
manage\
manage\
manage\
view\
view\
view\
complete\
Badge & Sessions\
manage\
\'97\
\'97\
\'97\
\'97\
\'97\
\'97\
\'97\
Tasks: start/complete\
\'97\
\uc0\u10003 \
\uc0\u10003 \
approve\
\uc0\u10003 \
\'97\
view\
\uc0\u10003 \
High-risk (ABAC)\
request/approve\
request\
request\
approve\
request\
\'97\
view\
\'97\
Audit reports\
manage\
view\
view\
manage\
view\
view\
view\
\'97\
High-risk actions (ABAC controlled): Destruction, overrides, closed-loop enable, critical label rule bypass, COA gating bypass, emergency stop overrides.\
\
6) API Surface (REST + Events)\
External APIs are REST + WebSockets/SSE for realtime, with OpenAPI spec and contract tests; internal services may use REST/gRPC; feature flags via Unleash.\
Auth & Sessions\
\'95	POST /v1/auth/login (email+code or password if enabled)\
\'95	POST /v1/auth/badge (badge_id, device_id) \uc0\u8594  returns device_session_id\
\'95	POST /v1/auth/logout (device_session_id)\
\'95	GET /v1/auth/me \uc0\u8594  user, site memberships, effective permissions\
Users/Roles/Sites\
\'95	POST /v1/sites | GET /v1/sites?org_id=\'85\
\'95	POST /v1/users invite; POST /v1/user-sites assign membership/role\
\'95	POST /v1/roles upsert role with permissions_json\
\'95	GET /v1/entitlements (computed)\
SOPs & Training\
\'95	POST /v1/sops | PUT /v1/sops/:id (versioning rules)\
\'95	POST /v1/sop-assignments (user/role scope)\
\'95	POST /v1/sop-quizzes/:sop_id/attempts\
\'95	POST /v1/sop-signoffs (sop_id, sop_version)\
ABAC & Approvals\
\'95	POST /v1/policies define/edit\
\'95	POST /v1/policy-decisions/check (simulate)\
\'95	POST /v1/approvals (action, object_ref) \uc0\u8594  two-person flow\
Audit\
\'95	GET /v1/audit-logs?site_id=\'85&entity=\'85\
\'95	POST /internal/audit/verify (nightly job trigger)\
Events (WebSocket/SSE)\
\'95	policy.decided, session.started/ended, badge.revoked, sop.assignment.created, task.blocked_reason\
Idempotency: header Idempotency-Key for mutation endpoints (aligning global pattern).\
\
7) UX Flows (operator-grade, kiosk-friendly)\
1.	Device Kiosk Login\
o	Tap badge \uc0\u8594  success toast + operator name; 8-hour session or site-configured timeout.\
o	Banner shows site/room context; \'93Switch Site\'94 obeys membership.\
o	On revoke: session terminates with modal; audit entry written.\
2.	Task Gating (optional by site or role)\
o	On \'93Start Task\'94, precondition check runs:\
\uc0\u61607 	If training/SOP missing: modal lists unmet items; deep-link to training.\
\uc0\u61607 	Button: \'93Assign to me\'94 (if allowed) or \'93Request override\'94 (ABAC \u8594  approver).\
\uc0\u61607 	Task remains Blocked with a visible reason pill and event log.\
3.	Two-Person Signoff\
o	Requester initiates high-risk action \uc0\u8594  approver list filtered by ABAC.\
o	Approver badge-auths to confirm; action executes; both parties recorded in audit + policy_decisions.\
4.	Admin Console\
o	Role designer (matrix editor), policy builder (DSL or form), badge manager, membership bulk editor, SOP library with versioning and quiz builder, audit verification dashboard (hash-chain status).\
\
8) Security & Privacy\
\'95	RLS everywhere (site scope); ABAC overlays for sensitive ops.\
\'95	Secrets in KMS/Vault; token rotation jobs scheduled; OWASP ASVS controls baseline.\
\'95	Tamper-evident audit with nightly verification and optional external/WORM anchoring.\
\'95	PII minimization: store only necessary identity fields; redact in logs; access logged.\
\'95	Break-glass / Just-in-Time elevation for emergency roles with time-boxed tokens.\
\
9) SLOs, Observability & Runbooks\
\'95	SLOs (tie to PRD): task/messaging round-trip p95 < 300 ms; login p95 < 1.5 s; auth service availability \uc0\u8805  99.9% monthly.\
\'95	Instrumentation: OpenTelemetry traces for auth, ABAC decisions; Prometheus metrics (auth_requests_total, policy_eval_latency_ms, rls_denied_total); logs in Loki; errors in Sentry.\
\'95	Alerts: high 401/403 ratio, ABAC evaluation p95 > 150 ms, audit verification lag > 24h, badge replay attempts.\
\'95	Runbooks: token rotation procedure; badge compromise; RLS failure fallback; audit chain repair (recompute from last verified).\
\
10) Acceptance Criteria (MVP)\
1.	RLS Enforcement\
o	Cross-site read/write attempts are blocked in integration tests (RLS fuzz passes).\
2.	Task Gating\
o	Attempt to start/complete a gated task without required SOP/training: blocked with explicit reason; event logged; Slack notify (notify-only in MVP).\
3.	Badge Sessions\
o	Badge revoke ends active sessions within 5 seconds; event + audit entries created.\
4.	ABAC\
o	High-risk actions require policy allow; if two-person required, record both identities; denials include reason code.\
5.	Audit Hash Chain\
o	Nightly verification job passes; weekly random verification logged as successful.\
6.	SLOs\
o	Auth and gating checks meet p95 targets over 7 consecutive staging days under prod-like load.\
\
11) Testing Strategy\
\'95	Unit: policy evaluation engine; SOP gating resolver; badge parser.\
\'95	Contract: OpenAPI for all endpoints; negative tests for RLS/ABAC denials.\
\'95	Integration/E2E: end-to-end task gating; two-person signoff; badge revoke mid-task.\
\'95	Security: RLS fuzzing; secret scan in CI; session fixation and replay tests; role escalation attempts.\
\'95	Load: 1k concurrent kiosk sessions; policy eval p95 under threshold.\
\
12) Dependencies & Integration Points\
\'95	Tasks & Blueprints (FRP-04): read gating preconditions to decide Blocked status.\
\'95	Slack: notify-only in MVP for task gate/approval events; two-way in Phase 2.\
\'95	Reporting/Exports: audit and training completion exports (CSV/PDF) tie into Reporting module.\
\'95	Feature Flags: enable site-level policies (e.g., two-person for specific actions) under Unleash.\
\
13) Migration & Rollout\
\'95	Seed Admin role + baseline roles per persona; seed org/site; migrate existing users if present.\
\'95	Backfill audit_logs with chain start entries; schedule verification job.\
\'95	Progressive enforcement:\
1.	Monitor-only (log ABAC denials) \uc0\u8594  2) Soft-block with override \u8594  3) Full enforcement per site.\
\
14) Open Design Choices (resolved defaults)\
\'95	Policy Authoring: start with JSON rules (matchers & conditions); evaluate with CEL-like engine; stored in abac_policies.\
\'95	Two-Person Signoff: approver must be distinct user with ABAC \'93approve\'94 capability; badge or password auth required at time of approval.\
\'95	Quiz Grading: default pass 80%; up to 3 attempts before supervisor intervention.\
\
15) Risks & Mitigations\
\'95	RLS misconfig \uc0\u8594  comprehensive RLS tests + generated policies from metadata + CI guardrail.\
\'95	Badge cloning \uc0\u8594  revoke flows, session pinning to device_id, anomaly detection on badge usage.\
\'95	Policy sprawl \uc0\u8594  policy templates and simulations; policy change diffs and approvals.\
\
\
\
\
\
\
\
\
\
\
\
\
FRP-02 \'97 Sites, Spatial Model & Equipment Registry (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.2 (Organization, Sites, Spatial Model & Equipment), \'a74 System Overview, \'a75.5/5.6 (targets precedence & controllers), \'a77 Security/Governance, \'a78 Reliability/Observability, \'a713 Roadmap (MVP includes Sites & Spatial + Equipment). Hardware interfaces align to HSES12 (EdgeSense12) and HSEA24 (EdgeActuate24) for sensor ingest and actuation topology.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Establish a site-scoped physical model\'97Site \uc0\u8594  Room \u8594  Zone \u8594  Rack \u8594  Bin\'97plus a first-class Vault location type. Provide an equipment registry (controllers, sensors, actuators, injectors, pumps/valves, flow/pressure meters, EC/pH controllers, mix tanks) with calibration logs and device health/fault tracking. This module is the anchor for telemetry ingest, irrigation/fertigation orchestration, inventory warehousing (GS1/UDI labels), safety interlocks, and auditability. \
Must-haves (MVP)\
\'95	Create/manage Sites (address, timezone).\
\'95	Spatial hierarchy: Rooms, Zones, Racks, Bins; Vault as distinct location type.\
\'95	Equipment registry with mapping to physical scopes (site/room/zone/rack) and logical roles (sensor/actuator/controller).\
\'95	Calibration logs; device heartbeat and fault logging.\
\'95	Map valves to zones (authoritative mapping for irrigation module).\
\'95	RLS at site scope for all entities. \
Hardware alignment (context for mapping)\
\'95	SEE HARVESTRY EDGE HARDWARE DOCUMENTATION\
\
2) Personas & Primary Use Cases\
\'95	Facilities/Ops Lead: define rooms/zones/racks; onboard equipment; set calibration reminders; review device health/faults. \
\'95	Head of Cultivation: validate zone \uc0\u8594  valve mappings; confirm sensor placements; request calibrations. \
\'95	Compliance Officer: confirm vault designation and label engines map to locations; audit calibration history. \
\'95	Operators/Techs: scan labels to move inventory between bins/racks; run guided calibration tasks. \
\
3) Functional Requirements\
3.1 Sites\
\'95	Create/edit Sites with org association, timezone (used for rollups, scheduled exports), address, and site policies (quiet hours, SMS critical toggle). \
\'95	Site-level policies_json supports feature flags/policies referenced elsewhere (e.g., interlock strictness, quiet hours). \
\'95	RLS: users must have membership to view/modify site data (see FRP-01). \
3.2 Spatial Model\
\'95	Hierarchy: Site \uc0\u8594  Room \u8594  Zone \u8594  Rack \u8594  Bin.\
\'95	Vault is a distinct location type within the unified tree for compliant handling/labels. \
\'95	CRUD with constraints:\
o	A Zone belongs to one Room; a Rack may belong to a Zone or Room; Bins belong to Racks (or directly to Zones if rackless).\
o	Deletion rules: forbid delete if children exist or equipment bound.\
\'95	Inventory system consumes this tree for lot balances, FEFO, and GS1/UDI labeling. \
3.3 Equipment Registry\
\'95	Register equipment with: type, vendor, model, protocol (e.g., TrolMaster, Agrowtek, SDI-12, RS-485/Modbus, MQTT), serial/MAC, firmware, capabilities, channels/ports. \
\'95	Map equipment to spatial scope (site/room/zone/rack) and attach logical roles (e.g., substrate EC sensor in Zone-12; valve bank for Room-B Manifold-2). \
\'95	Edge hardware templates to accelerate mapping:\
o	HSES12 template auto-expands 4\'d7 SDI-12, 8\'d7 analog, 2\'d7 RS-485, 4\'d7 digital inputs for channel binding. \
o	HSEA24 template auto-expands 16\'d7 valve channels, 4\'d7 pump relays, 2\'d7 flow pulse, 2\'d7 pressure, 2\'d7 tank level; ESTOP/door interlock inputs. \
3.4 Valves \uc0\u8596  Zones Authoritative Map\
\'95	Canonical mapping table defines which valve channel(s) drive a Zone; supports 1:N (zone\uc0\u8594 valves) and N:1 (manifold shared) as allowed by irrigation design.\
\'95	Mapping is required before enabling irrigation programs for that Zone. Acceptance: \'93Map valves to zones\'94 is satisfied and reportable. \
3.5 Calibration & Test\
\'95	Calibration logs per sensor/channel: method (single-point/two-point), reference value, measured value, coefficients, user, due-next date, attachments (photos/COA). \
\'95	Calibration tasks integrate with Tasking (FRP-04).\
\'95	Test utilities for channel verification (loopback for RS-485/SDI-12; live read for analog). HSES12 interfaces are explicitly supported. \
3.6 Device Health & Faults\
\'95	Heartbeat: last_seen, signal/quality fields by transport; online/offline state with grace windows.\
\'95	Fault detection/logging: fault_code, severity, auto-clear vs ack/resolve, counters. Fault sources include PHY link loss, SDI-12 bus errors, RS-485 framing, ADC out-of-range, interlock open (HSEA24 door/ESTOP). \
\'95	Export fault timeline per equipment; SLA metrics feed alert MTTR KPIs. \
3.7 Safety Linkages (declarative)\
\'95	Capture interlock relationships at the registry level (e.g., this pump relay depends on ESTOP loop closed; zone program requires door interlock closed). HSEA24 enforces failsafe locally; registry expresses it for orchestration/audits. \
3.8 Bulk Import/Export\
\'95	CSV/XLSX templates:\
o	Sites/Rooms/Zones/Racks/Bins\
o	Equipment with channel definitions\
o	Valve\uc0\u8596 Zone mappings\
\'95	Round-trip export with stable IDs for GitOps-style versioning.\
3.9 Permissions, Security, Audit\
\'95	Site-scoped RLS on all spatial/equipment tables.\
\'95	ABAC overlays for high-risk device actions (e.g., set manual override\'97implemented in later modules). All registry changes are hash-chained in audit logs. \
Acceptance (from CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.2 \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md):\
1.	Map valves to zones implemented and reportable.\
2.	Calibration & faults are logged and reportable. \
\
4) Data Model (key tables & fields)\
Entities are site-scoped unless noted; aligns with CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.2 and \'a715 Appendices (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
sites\
\'95	id (uuid), org_id (uuid), name, timezone, address_json, policies_json, created_at, updated_at\
rooms\
\'95	id, site_id, code, name, purpose (veg/flower/cure/processing/warehouse), area_sqft?, created_at\
zones\
\'95	id, site_id, room_id, code, name, zone_class (irrigation/bench/aisle/etc.), created_at\
racks\
\'95	id, site_id, room_id, zone_id?, code, name, capacity?, created_at\
bins\
\'95	id, site_id, rack_id, code, name, temp_controlled (bool)\
inventory_locations (unified tree)\
\'95	id, site_id, type (vault/room/zone/rack/bin/truck/customer/lab/staging), parent_id?, external_ref?, label_template_id? \
equipment\
\'95	id, site_id, type (controller/sensor/actuator/injector/pump/valve/meter/ecph_controller/mix_tank/relay), vendor, model, protocol (trolmaster/agrowtek/sdi12/modbus/mqtt), serial, mac, fw_version, capabilities_json, heartbeat_ts, status (online/offline/commissioning), location_scope (site/room/zone/rack), location_id, created_at \
equipment_channels\
\'95	id, equipment_id, channel_no (int or string), role (substrate_ec/substrate_ph/vwc/air_temp/rh/co2/ppfd/drain_ec/pressure/flow/level/valve/pump/relay/estop/door), unit, limits_json, linked_stream_id? (telemetry), created_at\
equipment_links\
\'95	id, site_id, equipment_id, target_type (site/room/zone/rack/bin), target_id, purpose (sensor_for/actuator_for/controller_for), notes, created_at \
valve_zone_map\
\'95	id, site_id, zone_id, equipment_id (HSEA24, etc.), channel_no, priority (for multi-valve zones), enabled (bool), created_at\
sensor_calibrations\
\'95	id, site_id, equipment_id, channel_no, method (one_point/two_point), reference_values[], measured_values[], coefficients_json, performed_by, performed_at, due_next_at, attachments[], notes \
equipment_faults\
\'95	id, site_id, equipment_id, channel_no?, fault_code, severity (info/warn/critical), first_seen, last_seen, status (open/acked/resolved), details_json, acked_by?, resolved_by?, resolved_at \
Related tables used by downstream modules: sensor_streams, sensor_readings, environment_targets, interlocks. \
Constraints & Indexes\
\'95	Unique (site_id, code) per rooms/zones/racks/bins.\
\'95	FK with on delete restrict to prevent orphaning.\
\'95	BRIN/BTree on (site_id, heartbeat_ts) for online/offline scans.\
\
5) API Surface (REST + Events)\
Sites & Spatial\
\'95	POST /v1/sites (name, timezone, address_json, policies_json)\
\'95	POST /v1/rooms POST /v1/zones POST /v1/racks POST /v1/bins\
\'95	GET /v1/spatial/tree?site_id=\'85 (materialized tree for UI & scanners)\
Equipment\
\'95	POST /v1/equipment (with template options type=edgesense12 / edgeactuate24)\
\'95	POST /v1/equipment/:id/channels (bulk upsert)\
\'95	POST /v1/equipment-links (bind to zone/room etc.)\
\'95	GET /v1/equipment?site_id=\'85&scope=zone:xyz\
Valve \uc0\u8596  Zone\
\'95	POST /v1/valve-zone-map (zone_id, equipment_id, channel_no, priority, enabled)\
\'95	GET /v1/valve-zone-map?zone_id=\'85\
Calibration & Faults\
\'95	POST /v1/sensor-calibrations (log + coefficients)\
\'95	GET /v1/equipment-faults?equipment_id=\'85&status=open\
\'95	POST /v1/equipment-faults/:id/ack / \'85/resolve\
Events (WS/SSE)\
\'95	equipment.heartbeat (online/offline)\
\'95	equipment.fault.opened/updated/resolved\
\'95	calibration.due_soon (drives task creation)\
Idempotency on all POST mutators via Idempotency-Key (global pattern). \
\
6) UX Flows\
1.	Site Creation Wizard\
o	Step 1: Site name, timezone (defaults to org), address.\
o	Step 2: Primary rooms (Veg/Flower/Cure/Processing/Warehouse), clone from template.\
o	Step 3: Zones per room (grid or manual), optional racks/bins.\
o	Step 4: Designate Vault location(s).\
o	Outcome: Spatial tree preview, confirmation, and CSV export.\
2.	Equipment Onboarding\
o	Choose template (HSES12/HSEA24) or \'93custom\'94. Template pre-creates channels/roles. \
o	Assign physical scope (zone/rack/site).\
o	Auto-discover (optional) via MAC/serial beacon; otherwise manual entry.\
o	Live health tile shows link/heartbeat; prompt to calibrate applicable channels.\
3.	Valve Mapping\
o	Select Zone \uc0\u8594  \'93Attach valve(s)\'94 \u8594  pick HSEA24 device + channel(s).\
o	Validate duplicates/conflicts; see simulated manifold schematic.\
o	Save produces authoritative valve_zone_map; irrigation UI can now schedule. \
4.	Calibration\
o	From equipment channel \uc0\u8594  \'93Calibrate\'94 \u8594  pick method (1-/2-point), enter references, capture measured values, compute coefficients, save log.\
o	Optional: create recurring assignment (every N days) \uc0\u8594  routes to Tasking.\
5.	Device Health/Fault Timeline\
o	Equipment page shows heartbeat, fault cards with severity, ack/resolve actions, and diagnostic notes. Drill-down by channel.\
\
7) Observability, SLOs & Runbooks\
SLOs (derived + PRD alignment)\
\'95	Registry API p95 < 250 ms under normal load;\
\'95	Equipment heartbeat offline detection within \uc0\u8804  90 s of last_seen gap;\
\'95	Fault open\uc0\u8594 notify latency p95 < 1.5 s (ties to alerting SLOs). \
Metrics (Prometheus)\
\'95	equipment_online\{site,type\} gauge, heartbeat_gap_seconds histogram\
\'95	faults_open_total\{severity\}, fault_time_to_ack_seconds\
\'95	calibration_overdue_total\
\'95	API latency histograms; DB scan durations\
Alerts\
\'95	Offline > X devices in a site; fault storm rate; overdue calibrations; registry write failures.\
Runbooks\
\'95	\'93Device offline\'94 triage (link to network/PoE checks; HSES12/HSEA24 LEDs reference). \
\'95	Fault code glossary; SDI-12/RS-485 bus troubleshooting; isolation checks before re-enable. \
\
8) Security & Governance\
\'95	RLS at site scope on all spatial/equipment/valve-map tables. \
\'95	ABAC for risky registry edits (e.g., disabling ESTOP interlock binding); all changes hash-chained in audit_logswith nightly verification to WORM. \
\'95	Minimal PII; secrets in KMS/Vault; token rotation (global posture). \
\
9) Acceptance Criteria (MVP)\
1.	Creating a Site with Rooms/Zones/Racks/Bins is persisted and visible in a hierarchical tree; Vault type is selectable and shown distinctly. \
2.	Adding equipment and binding to a zone is possible; registry shows online/offline state with last heartbeat. \
3.	Valve \uc0\u8596  Zone mappings exist; irrigation module can enumerate valves per zone. (Required by PRD acceptance)\
4.	Logging a calibration writes sensor_calibrations; next-due is computed; export shows history. (Required by PRD acceptance)\
5.	Faults (e.g., door interlock open on HSEA24, SDI-12 bus error on HSES12) create equipment_faults entries; operators can ack/resolve with reason. \
6.	RLS tests prove users without membership cannot read/write the site. \
\
10) Testing Strategy\
\'95	Unit: spatial tree validators, valve-map conflict detection, calibration coefficient math.\
\'95	Contract: CRUD for all endpoints, idempotency, error codes.\
\'95	Integration: End-to-end onboarding (HSES12/HSEA24 template \uc0\u8594  channels \u8594  mapping); calibration \u8594  task creation; fault open \u8594  alert. \
\'95	Security: RLS fuzzing, permissions matrix, audit hash-chain verification. \
\'95	Load: 10k equipment rows across 50 sites; online status sweeps < 2 s; API p95 < 250 ms.\
\
11) Dependencies & Integration Points\
\'95	Telemetry Ingest & Rollups (FRP-05/FRP-06): uses equipment/channel bindings to attach streams; heartbeats/faults feed alerting. \
\'95	Irrigation & Fertigation (FRP-07): consumes valve_zone_map and interlock bindings; mix-tanks/injectors are equipment types here. \
\'95	Inventory & Labels (FRP-08): uses inventory_locations tree and Vault type for GS1/UDI labeling and FEFO. \
\'95	Tasks & Messaging (FRP-04): calibration due \uc0\u8594  tasks; faults \u8594  notifications (Slack notify-only in MVP). \
\
12) Migration & Rollout\
\'95	Seed initial site and a minimal spatial tree; import templates for typical cultivation facilities.\
\'95	Provide CSV importers for spatial/equipment/valve maps to accelerate go-live.\
\'95	Backfill online/offline from first heartbeat; create default calibration intervals by sensor type.\
\
13) Risks & Mitigations\
\'95	Wrong valve mappings \uc0\u8594  unsafe irrigation. Mitigate with validation (no orphan zones), dry-run checks, and \'93simulate actuation\'94 test step before enabling programs.\
\'95	Template drift vs physical wiring. Mitigate with channel check wizard (operator confirms wire/channel labels), QR code stickers on panel. \
\'95	Calibration negligence. Mitigate with due-date alerts, blocking task gates where required by site policy (ABAC). \
\
14) Open Design Decisions (defaults proposed)\
\'95	Location codes: enforce short, unique codes per level for scan labels (e.g., R-B2-Z07).\
\'95	Valve priority semantics: if multiple mapped, lower numeric priority opens first unless the irrigation program specifies otherwise.\
\'95	Heartbeat grace: default 90 s offline threshold; site-policy adjustable (60-300 s).\
\
Notes on Hardware Mapping (quick reference)\
\'95	HSES12 channel roles commonly bound to: SDI-12 multi-drop (substrate EC/pH/VWC), analog 4-20 mA/0-10 V for pressure/level/flow transmitters, RS-485 for Modbus instruments. \
\'95	HSEA24 valve outputs (24 VAC) mapped to zones/manifolds; pump relays drive contactor coils only; ESTOP/door interlock inputs must be declared and linked in interlocks; local FSM forces failsafe OFF on broker loss/ESTOP. \
\'95	Scales (USB-HID/RS-232): register as equipment; capture zero/tare logs; no relay loads through scale ports; follow isolation guidelines; stability window set per device; calibration logged as with other instruments.09\
\
\
\
\
\
\uc0\u8232 FRP-03 \'97 Genetics, Mothers, Cloning & Propagation (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.3 Genetics/Phenotypes/Mothers/Cloning, site-toggle for tray vs cell logging, METRC/BioTrack-compatible reporting; required data entities and acceptance (rooting %, cycle time). Also ties into \'a75.4 Lifecycle & Tasks and \'a79 Compliance.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Your added requirement (to be recorded in \'a75.3 of the PRD): Dual-mode veg length definition on genetics: default categorical mode (Short/Average/Long with org-configurable week mapping) plus optional exact day input per genetics/batch. Org/site settings define default mode, week mapping, snap policy (None/Nearest/Floor/Ceiling), and anchor weekday. Batch-level overrides allowed. Acceptance includes planner alignment, canonical effective_veg_days, normalized previews, CSV importer handling of both categorical and numeric inputs, and mid-week conflict warnings.\
\
1) Purpose & Scope\
Deliver a complete upstream cultivation model:\
\'95	Genetics & phenotypes catalog, including default growth durations (veg, flower) and propagation traits.\
\'95	Mother plant tracking (health, cut counts, availability forecasts).\
\'95	Clones tracked as individuals and as batches, with site-toggle for tray-level vs cell-level logging.\
\'95	Propagation operations: cut events, rooting checks, losses, transplant, and METRC/BioTrack-compatiblereporting.\
\'95	Metrics: rooting %, cycle time, losses by reason, tray/cell density KPIs.\
\'95	Scheduling signal: emit effective_veg_days per batch for the lifecycle/scheduling engine. \
In scope (MVP)\uc0\u8232 Genetics/phenotypes, mothers, clone trays/cells, propagation logs & metrics, tray/cell toggle, METRC/BioTrack export aggregation, veg-length dual-mode + snap policy, planner integration through effective_veg_days. \
\
2) Personas & Primary Use Cases\
\'95	Head of Cultivation: define genetics defaults, veg length mode, review propagation performance, approve mother rotations. \
\'95	Propagation Lead / Operators: run daily cutting/inspection logs; record roots/losses; initiate transplant. \
\'95	Compliance Officer: export regulator-compatible immature-plant counts and movements. \
\
3) Functional Requirements\
3.1 Genetics & Phenotypes\
\'95	Create Genetics with fields: name/code, breeder/lineage (optional), veg length mode (categorical or exact), default flower days, propagation difficulty, notes; active flag.\
\'95	Phenotypes linked to genetics; optional overrides (flower days, vigor, target cuttings/plant, color labels). \
Dual-mode veg length (new requirement to record in CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.3; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
\'95	Mode A \'97 Categorical (default): value \uc0\u8712  \{Short, Average, Long\}.\
o	Org/site setting: map each category \uc0\u8594  weeks integer (e.g., S=2, A=3, L=4; admin-configurable).\
\'95	Mode B \'97 Exact days: integer veg_days_exact.\
\'95	Site policy: Snap policy for planner: None | Nearest | Floor | Ceiling (snap to anchor weekday).\
\'95	Anchor weekday: e.g., Wednesday; used by planner when snap policy \uc0\u8800  None.\
\'95	Batch-level override allowed at planting/cloning.\
\'95	Canonical field: system computes effective_veg_days (int) for every batch (see \'a73.6).\
\'95	Planner alignment: lifecycle module must consume effective_veg_days for dates; preview normalization must display both raw input and normalized result (see Acceptance \'a710.2).\
3.2 Mothers\
\'95	Track mother plants: genetics/phenotype, site/room/bench, status (active/quarantine/retired), health score, cut_count_lifetime, last_cut_at, next_cut_ready_at (derived from recovery interval), retirement reason.\
\'95	Cut yield model: target cuts per mother/week; forecast availability window for propagation.\
3.3 Clones \'97 Individuals & Batches\
\'95	Clone Batches: created from one or more mothers (capture % allocation), with cut_date, target count, media, hormone, tray plan.\
\'95	Tray vs Cell logging (site toggle):\
o	Tray-mode: one row per tray (capacity, placed_count, rooted_count, loss_count, notes).\
o	Cell-mode: per-cell states (Empty/Cutting/Rooted/Dead), optional root grade (A/B/C).\
\'95	Per-site toggle must be editable; disabling cell mode keeps summaries, hides cell UI, and keeps exports compatible. (PRD acceptance)\
3.4 Propagation Operations & Logs\
\'95	Cut event: mothers, cutting count, tray allocation; records operator and time.\
\'95	Daily log: misting or irrigation method, environment notes, sanitation, losses with reason code (e.g., desiccation, fungus, mechanical).\
\'95	Root check: record rooted_count (tray) or update cells to Rooted; option to grade roots.\
\'95	Transplant event: selects rooted units to move to Veg inventory/plant batch; emits lifecycle transition for downstream scheduling; updates compliance counts. \
3.5 Compliance (METRC/BioTrack)\
\'95	Export immature plant events and counts at tray or cell granularity aggregated to the regulator\'92s required level.\
\'95	Respect jurisdiction UoM/label rules (ties into Compliance module). Compatible reporting is a PRD must.\
3.6 Scheduling Signal: effective_veg_days\
\'95	Compute canonical integer days for planner using the following algorithm:\
1.	If genetics/phenotype/batch set to Exact, effective_veg_days := veg_days_exact.\
2.	If Categorical, look up weeks via org/site mapping, then effective_veg_days := weeks * 7.\
3.	Apply snap policy relative to anchor weekday:\
\uc0\u61607 	None: no change.\
\uc0\u61607 	Nearest: round to nearest anchored date.\
\uc0\u61607 	Floor/Ceiling: snap down/up to anchored date.\
4.	Persist effective_veg_days on batch; surface original input and normalized output in UI.\
\'95	Mid-week conflict warning: if snapping causes partial-week overlap with room changeovers or dry-room capacity windows, surface a warning and suggested offsets.\
3.7 Metrics & Reporting\
\'95	Rooting % = rooted / (placed \uc0\u8722  culled).\
\'95	Cycle time = transplant_date \uc0\u8722  cut_date (days).\
\'95	Loss rates by reason, per genetics/phenotype, by tray, by operator.\
\'95	Mother efficiency: cuts per mother per week; time to depletion/retirement.\
\'95	Exports (CSV/XLSX/PDF) scheduled by site TZ (ties into Reporting module). \
\
4) Data Model (key tables)\
Entities listed in CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.3 are retained; field-level detail added here. Genetics/phenotypes are org-scoped; mothers/clone artefacts are site-scoped under RLS (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
genetics (org-scoped)\
\'95	id (uuid, pk), org_id, code, name, breeder?, lineage_json?, default_flower_days int?, veg_length_mode enum('category','exact'), veg_category enum('short','average','long')?, veg_days_exact int?, propagation_difficulty enum?, notes, active bool, created_at, updated_at\
phenotypes (org-scoped)\
\'95	id, genetics_id (fk), name, alias?, override_flower_days?, color_tag?, target_cuttings_per_mother_week?, notes, active\
mother_plants (site-scoped)\
\'95	id, site_id, genetics_id, phenotype_id?, room_id?, zone_id?, status enum('active','quarantine','retired'), health_score (0-100), cut_count_lifetime int, last_cut_at ts?, recovery_days int?, next_cut_ready_at ts?, retired_at?, retired_reason?, created_at\
clone_batches (site-scoped)\
\'95	id, site_id, genetics_id, phenotype_id?, source_mothers_json (id\uc0\u8594 %allocation), cut_date, planned_trays int, target_count int, media enum?, hormone enum?, operator_id, effective_veg_days int, veg_input_mode enum('category','exact'), veg_input_value (string|int), snap_policy enum, anchor_weekday enum, notes, status enum('active','transplanted','abandoned')\
clone_trays (site-scoped)\
\'95	id, site_id, clone_batch_id, tray_code, capacity int, placed_count int, rooted_count int, cull_count int, last_check_at ts?, cell_mode_enabled bool (denormalized from site setting)\
clone_cells (site-scoped; optional per site)\
\'95	id, site_id, clone_tray_id, row int, col int, state enum('empty','cutting','rooted','dead'), root_grade enum('A','B','C')?, updated_at\
propagation_logs (site-scoped)\
\'95	id, site_id, clone_batch_id, tray_id?, cell_id?, event_type enum('cut','mist','check_roots','loss','transplant'), event_ts, operator_id, loss_reason?, placed_delta?, rooted_delta?, notes, attachments[]\
clone_metrics (site-scoped, aggregated)\
\'95	id, site_id, clone_batch_id, tray_id?, metric_date, rooted_pct numeric, cycle_time_days numeric?, losses_by_reason jsonb\
org_genetics_settings (org-scoped) \'97 new\
\'95	org_id (pk), default_mode enum('category','exact'), category_weeks_map jsonb (e.g., \{"short":2,"average":3,"long":4\}), snap_policy enum, anchor_weekday enum\
site_genetics_settings (site-scoped, optional override) \'97 new\
\'95	site_id (pk), default_mode?, category_weeks_map?, snap_policy?, anchor_weekday?\
Compliance integration uses aggregation views that reshape tray/cell data into the regulator\'92s required format for immature plants. \
\
5) APIs (REST + Events)\
Genetics & Phenotypes\
\'95	POST /v1/genetics / PUT /v1/genetics/:id\
\'95	POST /v1/phenotypes / PUT /v1/phenotypes/:id\
\'95	GET /v1/genetics?org_id=\'85&q=\'85\
Settings\
\'95	PUT /v1/orgs/:org_id/genetics-settings (default_mode, category_weeks_map, snap_policy, anchor_weekday)\
\'95	PUT /v1/sites/:site_id/genetics-settings (overrides)\
Mothers\
\'95	POST /v1/mothers / PUT /v1/mothers/:id\
\'95	POST /v1/mothers/:id/cut (cut_count, notes) \uc0\u8594  updates forecast\
Clones, Trays, Cells\
\'95	POST /v1/clone-batches (genetics, source_mothers, cut_date, veg mode fields)\
\'95	POST /v1/clone-trays (bulk create)\
\'95	POST /v1/clone-logs (event_type, tray/cell scope, deltas, reasons)\
\'95	POST /v1/clone-cells/:id (state, root_grade) [only if cell mode]\
\'95	POST /v1/clone-batches/:id/transplant (count/by tray/cell \uc0\u8594  target veg batch) \u8594  emits lifecycle transition\
Compliance Exports\
\'95	GET /v1/compliance/immature-plants?site_id=\'85&date_from=\'85&date_to=\'85 (tray or cell aggregated)\
Events (WS/SSE)\
\'95	propagation.batch.created, propagation.tray.updated, propagation.cell.updated, propagation.metrics.updated, propagation.transplanted\
All mutating endpoints honor Idempotency-Key. \
\
6) UX Flows\
1.	Define Genetics (with veg length)\
o	Choose category (S/A/L) or exact days. UI shows normalized effective_veg_days from current site/org mapping and snap policy preview.\
o	Warning chip appears if snap adjustment creates mid-week overlap with room changeovers.\
2.	Mother Management\
o	Mother card: health score, cuts lifetime, last/next cut dates.\
o	\'93Record Cuts\'94 wizard allocates cuts to a new or existing clone batch; updates forecasts.\
3.	Create Clone Batch & Trays\
o	Select genetics/phenotype, mothers (with % allocation), set cut_date.\
o	Tray plan (capacity presets), optional cell grid if site in cell mode.\
o	Post-cut checklist (sanitation, media, hormone).\
4.	Daily Propagation\
o	Tray mode: quick entry for rooted and loss counts with reason codes.\
o	Cell mode: tap cells to set Rooted/Dead and assign root grades; progress heatmap.\
5.	Transplant\
o	Select rooted units; pick destination Veg room/zone; confirm creation of Vegetative batch; system writes plant movement and compliance rows; lifecycle engine gets effective_veg_days.\
6.	Reports\
o	Rooting % by genetics/phenotype; cycle time; operator variance; mother efficiency; scheduled CSV/PDF by site TZ. \
\
7) Security, RLS/ABAC & Audit\
\'95	Genetics/phenotypes (org-scoped) enforce org-RLS; mothers/clone artifacts are site-scoped RLS.\
\'95	ABAC can block transplant if preconditions (COA gates, training) require it (integrates with FRP-01/FRP-04).\
\'95	All changes are hash-chained in audit_logs; nightly verification to WORM store. \
\
8) Observability & SLOs\
\'95	API p95 < 300 ms for common routes; export jobs complete within site-day report SLO p95 < 90 s. \
\'95	Metrics: propagation_rooting_pct\{site,genetics\}, cycle_time_days, loss_rate_by_reason, mother_cut_forecast_error.\
\'95	Alerts: sustained rooting % below threshold for a genetics; spike in contamination losses; overdue transplant windows.\
\
9) Dependencies & Integration Points\
\'95	FRP-04 Lifecycle/Tasking: receives effective_veg_days; creates/gates tasks (e.g., Root Check, Transplant). \
\'95	Compliance (FRP-09): immature plant reporting & movement logs (jurisdiction rules). \
\'95	Inventory/Labels (FRP-08): trays & plant batches can be labeled/scanned (GS1/UDI standards apply mainly in inventory module). \
\'95	Environment/Telemetry (FRP-05): optional propagation room telemetry overlays on performance.\
\
10) Acceptance Criteria (MVP)\
1.	Tray/Cell Toggle\
o	Per-site switch between tray-level and cell-level logging; UI obeys setting; exports remain consistent. (PRD acceptance)\
2.	Propagation Reports\
o	Standard reports compute rooting % and cycle time per batch/tray/cell and per genetics/phenotype; scheduled exports use site TZ. (PRD acceptance)\
3.	Veg Length Dual-Mode & Planner Alignment\
o	Genetics allow categorical or exact veg inputs; system derives and persists effective_veg_days.\
o	Preview normalization shows raw input vs snapped result; mid-week conflict warning rendered when applicable.\
o	Lifecycle/scheduler uses effective_veg_days and matches preview.\
4.	Compliance Export\
o	Immature plant counts and movements export in a jurisdiction-compatible format (tray or cell aggregated), validated against test fixtures. \
5.	Mother KPIs\
o	Mother cut counts and next-cut forecasts visible; recording a cut updates forecasts and batch allocations.\
6.	RLS/ABAC/Audit\
o	Cross-site access blocked; high-risk gate on transplant (if configured) enforced; audit hash-chain verification passes nightly. \
\
11) Testing Strategy\
\'95	Unit: veg normalization (category\uc0\u8594 weeks\u8594 days + snap), rooting % math, cycle time, mother forecast.\
\'95	Contract: CRUD for genetics/phenotypes/mothers/clone artifacts; idempotent transplant; compliance export schema.\
\'95	Integration/E2E: cut \uc0\u8594  daily logs \u8594  root check \u8594  transplant \u8594  lifecycle trigger; tray vs cell parity; CSV importer mixed categorical/numeric veg inputs.\
\'95	Security: RLS fuzz; ABAC gate on transplant with training/SOP prerequisites.\
\'95	Load: 5k cells/tray scenarios; reports within SLOs; importer 50k-row CSV with mixed veg modes.\
\
12) Migration & Rollout\
\'95	Seed org_genetics_settings with sane defaults (S=2, A=3, L=4) and snap_policy=None; anchor weekday=Wednesday as default (editable).\
\'95	If a site enables cell mode, backfill clone_trays.cell_mode_enabled=true and expose cell UI on new batches; existing tray records remain tray-only.\
\'95	Add CSV importer that accepts:\
o	veg_mode (category|exact), veg_value (Short/Average/Long or integer days).\
o	On import, compute effective_veg_days; show preview and warnings before commit.\
\
13) Risks & Mitigations\
\'95	Planner misalignment (snap vs exact): show side-by-side preview, store both raw and normalized values, and log snap rationale.\
\'95	Data bloat in cell mode: aggregate rollups per tray on write; archive cell history after N days.\
\'95	Compliance nuance variance: implement jurisdiction rule set as data; maintain mapping tests in CI.\
\
14) Open Design Decisions (defaults proposed)\
\'95	Root grading optional (A/B/C); can be hidden per site setting.\
\'95	Loss reason code set: provide default list with admin customization.\
\'95	Mother recovery default: 7-14 days; configurable per genetics.\
\
\
\
\
\
\
\
\
\
FRP-04 \'97 Batch Lifecycle, Scheduling, Tasks & Messaging (Slack) (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.4 Lifecycle/Tasks/Slack; \'a73 Personas; \'a74 System Overview; \'a75.1 Training gates; \'a75.5/5.6 target precedence (preconditions); \'a75.15 Notifications/Escalations; \'a77 Security/Governance; \'a78 Reliability/Observability; \'a79 Slack Integration; \'a710 APIs/Outbox; \'a712 Acceptance; \'a713 Roadmap (MVP: lifecycle, blueprint tasks, messaging + Slack notify-only; Phase 2: Slack two-way). \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Provide a deterministic crop lifecycle (Clone \uc0\u8594  Veg \u8594  Flower \u8594  Harvest \u8594  Cure) with rule-based auto-transitionsand operator overrides; a scheduling engine that consumes genetics-driven durations (e.g., effective_veg_days from FRP-03); a robust tasking system (blueprints, dependencies, checklists, approvals, forms, labor capture, SLAs/escalations); and in-app messaging bound to operational objects with Slack integration (MVP: notify-only; Phase 2: two-way mirroring). Blocking reasons must be explicit, and lifecycle/delegation must be fully audited.\
\
2) Personas & Use Cases\
\'95	Head of Cultivation: plans batches and phase dates; configures blueprint matrix by strain \'d7 phase \'d7 room class; monitors exceptions and SLAs. \
\'95	Operators/Techs: execute checklists/forms; attach photos/scans; log labor; collaborate in threads; badge into kiosks. \
\'95	Compliance Officer: enforces training/SOP gates and high-risk approvals; reviews audit trails. \
\'95	Facilities/Ops: receives tasks created by interlocks or faults; coordinates with irrigation & environment modules. \
\
3) Functional Requirements\
3.1 Batches & Lifecycle\
\'95	Phases: clone, veg, flower, harvest, cure.\
\'95	Transitions: rule-based (dates/milestones/movements) with operator override; AI suggestions may auto-applybehind a site feature flag (off by default).\
\'95	Plant movements: movement records require from and to (room/zone); transitions can be triggered by specific movement types (e.g., to Flower room starts flower).\
\'95	Blocking policies: tasks/compliance/environment gates can prevent transition until cleared.\
3.2 Scheduling Engine\
\'95	Inputs:\
o	Propagation output: FRP-03 effective_veg_days (canonical int) and cut_date.\
o	Genetics/phenotype defaults: flower days (and optional cure days) from genetics/phenotype.\
o	Room class templates (e.g., Flower Room class has default dry/cure windows).\
\'95	Outputs:\
o	Planned dates for veg_start, flower_start, harvest_date, cure_complete.\
o	Slack/Email notifications for significant changes (MVP notify-only).\
\'95	Re-plan logic: on upstream change (e.g., transplant slip), recompute and mark impact on downstream capacity and dry room availability (warning banners).\
3.3 Blueprint Matrix (strain \'d7 phase \'d7 room class)\
\'95	Define blueprint templates: tasks, dependencies, preconditions, checklists, forms, evidence types, approvals, SLAs, default assignees (role/team), and watchers.\
\'95	On phase entry, generate task set from the matching matrix row with overrideable parameters (dates, owners).\
3.4 Tasks\
\'95	Status flow: draft \uc0\u8594  ready \u8594  in_progress \u8594  paused \u8594  blocked \u8594  completed \u8594  verified \u8594  closed(configurable subset by type).\
\'95	Preconditions: SOP/training (FRP-01), approvals (single/two-person), environment constraints (targets/thresholds), compliance holds, interlocks.\
\'95	Artifacts: checklists, typed forms (number, text, date, enum, scan), attachments (photo/file), evidence links (sensor snapshot ids).\
\'95	Labor: log time by team and by user; labor totals available for cost rollups (consumed in Processing & Finance modules).\
\'95	Delegation & watchers: reassign tasks; watchers receive event notifications; all actions recorded in task_events (audit).\
\'95	SLAs & escalations: due dates + grace; escalate via in-app + Slack; SMS only for Critical if site policy enabled (ties to \'a75.15).\
3.5 Messaging & Threads\
\'95	Bound contexts: task, batch, room, zone, rack, site.\
\'95	Features: threads, mentions, attachments; read receipts and reactions; notify-only Slack bridge in MVP (events \uc0\u8594  Slack channel).\
3.6 Slack Integration\
\'95	MVP: notify-only bridge\'97task created/updated/blocked; SLA escalations; lifecycle transitions. Outbox pattern guarantees once delivery; idempotent mapping tables; reconcile edits/deletes per CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a79 (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md).\
\'95	Phase 2: two-way mirroring with slash commands and interactive buttons; reply mirrors to app in \uc0\u8804 2s p95(Phase-2 acceptance).\
3.7 Overrides & High-risk Actions\
\'95	ABAC-guarded actions (e.g., bypass COA gate, manual controller override, closed-loop enable) require policy allow and may require two-person signoff (FRP-01).\
\'95	All overrides write explicit reason codes and are hash-chained in audit.\
PRD Acceptance for \'a75.4:\
\'95	Blocking reasons explicit;\
\'95	Lifecycle & delegation audited in task_events;\
\'95	(Phase 2) Slack reply mirroring meets \uc0\u8804 2s p95. \
\
4) Data Model (key tables/fields)\
Matches CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.4 and appendices; site-scoped with RLS (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md).\
batches\
\'95	id (uuid), site_id, genetics_id, phenotype_id?, code, name?, phase enum, planned_dates jsonb (veg_start, flower_start, harvest, cure_complete), actual_dates jsonb, status enum, size metrics (#plants, area), created_at\
plant_movements\
\'95	id, site_id, batch_id, from_room_id, to_room_id, from_zone_id?, to_zone_id?, moved_at, reason enum (transplant/flip/harvest/transfer), actor_user_id; constraint: from/to required\
task_blueprints\
\'95	id, org_id, strain_id? or genetics_id?, phase enum, room_class enum, spec jsonb (tasks[], dependencies[], preconditions[], checklists[], forms[], approvals[], sla, default_assignees)\
tasks\
\'95	id, site_id, batch_id?, room_id?, zone_id?, status, type, title, description, due_at, started_at, completed_at, verified_at, owner_user_id?, owner_team_id?, priority enum, blocked_reason? (code+text), sla_policy_id?, created_at\
task_assignments\
\'95	id, task_id, user_id? / team_id?, assigned_at, role (owner/watcher/delegate)\
task_dependencies\
\'95	id, task_id, depends_on_task_id, type (finish_to_start, etc.)\
task_checklists / task_checklist_completions\
\'95	checklist: id, task_id, items jsonb\
\'95	completions: id, task_id, item_id, user_id, ts, pass/fail?, note\
task_forms / task_form_responses\
\'95	form: id, task_id, schema jsonb (fields)\
\'95	response: id, task_id, field_id, value, user_id, ts\
task_approvals\
\'95	id, task_id, policy_id?, approver_user_id, approved_at, method (badge/password), two_person_group_id?\
task_delegations\
\'95	id, task_id, from_user_id, to_user_id/to_team_id, reason, ts\
task_events\
\'95	id, site_id, task_id, actor_user_id, event_type (status_change, block, unblock, delegate, approve, attach, comment_linked), payload jsonb, ts  (authoritative audit for lifecycle & delegation)\
conversations / messages\
\'95	conversations: id, site_id, scope_type (task/batch/room/zone/rack/site), scope_id\
\'95	messages: id, conversation_id, user_id, body, attachments[], mentions[], ts, reads[]\
Slack mapping tables\
\'95	slack_workspaces, slack_user_map, slack_channel_links, message_bridge_log (outbox idempotency)\
\
5) API Surface (REST + Realtime)\
Batches & Movements\
\'95	POST /v1/batches (genetics, size, planned_dates inputs)\
\'95	POST /v1/batches/:id/plan (recompute using FRP-03 signals)\
\'95	POST /v1/plant-movements (from/to required; idempotent)\
\'95	POST /v1/batches/:id/transition (target_phase, reason) \uc0\u8594  ABAC + validations\
Blueprints & Tasks\
\'95	POST /v1/task-blueprints (matrix row upsert)\
\'95	POST /v1/batches/:id/generate-tasks (phase, room_class)\
\'95	POST /v1/tasks / PUT /v1/tasks/:id (status changes honor dependencies)\
\'95	POST /v1/tasks/:id/block (reason_code, message) / \'85/unblock (evidence)\
\'95	POST /v1/tasks/:id/approve (two-person if policy requires)\
\'95	POST /v1/tasks/:id/forms/:form_id/responses\
\'95	POST /v1/tasks/:id/checklists/:item_id/complete\
Messaging\
\'95	POST /v1/conversations (scope)\
\'95	POST /v1/messages (conversation_id, body, attachments[])\
\'95	Events (WS/SSE): task.created/updated/blocked/unblocked, batch.transitioned, sla.escalation, message.created\
Slack (MVP notify-only)\
\'95	POST /internal/slack/outbox (bridge writer)\
\'95	POST /internal/slack/reconcile (edits/deletes)\
\'95	Phase 2 adds: /slack/commands & interactive actions. \
Idempotency: all mutation endpoints accept Idempotency-Key. Outbox pattern for Slack & controller-side effects per \'a710.\
\
6) UX Flows\
1.	Batch Planner (Timeline/Gantt)\
o	Shows Clone\uc0\u8594 Veg\u8594 Flower\u8594 Harvest\u8594 Cure with planned vs actual.\
o	Drag adjustments with impact analysis to downstream rooms/dry rooms; emits re-plan notices.\
2.	Phase Entry & Blueprint Expansion\
o	On phase start (rule or movement), system expands blueprint tasks; missing preconditions show Blockedpill with explicit reasons (e.g., \'93SOP 12 not complete\'94, \'93COA hold active\'94).\
3.	Task Workboard (Ops View)\
o	Kanban grouped by status; quick filters by site/room/owner/overdue.\
o	Checklists & forms inline; labor timer or manual time entry.\
o	\'93Request Override\'94 initiates ABAC approval (two-person if required).\
4.	Messaging + Slack (MVP)\
o	Comments in task thread; @mentions notify users; events mirrored to Slack channel via notify-only bridge.\
o	Phase 2: in-Slack reply updates app thread.\
5.	Escalations\
o	SLA breach triggers in-app banner + Slack alert; SMS used only if site policy enables Critical severity (ties \'a75.15).\
\
7) Security, RLS/ABAC & Audit\
\'95	RLS site scope on batches, tasks, messages, movements.\
\'95	ABAC for high-risk transitions/overrides; two-person signoff supported (FRP-01).\
\'95	Every material action emits a task_events row; hash-chained audit in global audit_logs with nightly verification.\
\
8) Observability, SLOs & Runbooks\
SLOs (PRD):\
\'95	Task/messaging round-trip p95 < 300 ms (app bus).\
\'95	Command dispatch enqueue\uc0\u8594 ack p95 < 800 ms for controller/actuation side effects (when tied to tasks).\
\'95	For Phase 2 Slack two-way: reply mirror \uc0\u8804  2 s p95; MVP tracks notify latency p95 \u8804  2 s. \
Metrics (Prometheus/Grafana):\
\'95	tasks_created_total, task_status_changes_total, tasks_blocked_total\{reason\}\
\'95	sla_breaches_total, escalations_sent_total\{channel\}\
\'95	batch_transition_latency_seconds (planned\uc0\u8594 actual delta)\
\'95	Slack bridge: slack_outbox_queue_depth, slack_delivery_latency_ms, DLQ rate\
Runbooks:\
\'95	\'93Task backlog surge\'94 triage; \'93Slack outage reconciliation\'94 (bridge backfill); \'93ABAC denial debugging\'94 with policy decision logs; \'93Closed-loop change control\'94 (when tasks drive controller flags).\
\
9) Acceptance Criteria (MVP)\
1.	Lifecycle & Scheduling\
o	Creating a batch and entering phases generates dated plans from FRP-03 effective_veg_days + genetics defaults; changes propagate and mark downstream impacts.\
2.	Blueprint Task Generation\
o	On phase entry, tasks expand from strain\'d7phase\'d7room-class matrix with owners, SLAs, and dependencies. All preconditions evaluate and Blocked tasks show explicit reasons (UI + task_events). (PRD acceptance)\
3.	Movements & Transitions\
o	plant_movements require from and to; movement to Flower room flips batch to flower automatically unless overridden; audit recorded.\
4.	Messaging & Slack (MVP)\
o	Task/batch messages appear in app; events are mirrored to Slack (notify-only) within \uc0\u8804  2 s p95 via outbox. Phase-2 readiness documented for two-way.\
5.	Delegation & Audit\
o	Delegations, approvals, and status changes produce task_events; lifecycle and delegation are auditable end-to-end. (PRD acceptance)\
6.	SLA & Escalations\
o	Overdue tasks escalate via in-app + Slack; SMS only for Critical if enabled by site policy.\
\
10) Testing Strategy\
\'95	Unit: blueprint expansion; dependency resolution; precondition evaluation (SOP/compliance/environment); SLA timers; labor rollups.\
\'95	Contract: REST + events; idempotent movement posting; outbox retries; Slack reconcile endpoints.\
\'95	Integration/E2E: FRP-03 transplant triggers veg; blueprint tasks generated; blocked gates visible; Slack notifications delivered; escalation chain fires.\
\'95	Security: RLS fuzz; ABAC denial/approval flows; audit hash-chain verification.\
\'95	Load: 10k open tasks across 20 sites; p95 latencies within SLO.\
\
11) Dependencies & Integration Points\
\'95	FRP-01 (Identity/ABAC/SOP gating) \'97 preconditions & approvals; badge sessions. \
\'95	FRP-02 (Spatial & Equipment) \'97 movement locations; room class for blueprint matrix. \
\'95	FRP-03 (Genetics/Propagation) \'97 effective_veg_days and starting cut/transplant dates.\
\'95	FRP-05/06 (Environment & Irrigation) \'97 environment/compliance preconditions, interlock-driven tasks; task actions may schedule irrigation. \
\'95	FRP-15 (Notifications & Escalations) \'97 channel policies, quiet hours, escalation chain. \
\
12) Migration & Rollout\
\'95	Seed baseline blueprint rows (industry-standard templates per phase and room class).\
\'95	Enable Slack notify-only bridge in MVP; keep two-way behind feature flag for Phase 2.\
\'95	Provide CSV import for blueprint definitions and batch plans; add \'93simulate expansion\'94 preview before commit.\
\
13) Risks & Mitigations\
\'95	Mis-planned transitions \uc0\u8594  \'93what-if\'94 simulator + preview diffs + rollback of plan changes.\
\'95	Gate fatigue (over-blocking) \uc0\u8594  policy tuning, grouped gates with clear UI copy, override with ABAC logging.\
\'95	Slack dependency \uc0\u8594  outbox + DLQ + reconcile; graceful degradation to in-app only; Phase-2 backfill logic\
\
\
\
FRP-05 \'97 Environment Monitoring (Growlink/AROYA parity) (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.5 Environment Monitoring (metrics scope, rollups, targets & overrides precedence, alerts), \'a74 System Overview, \'a75.4 (preconditions), \'a76 Data Architecture (Timescale hypertables & continuous aggregates), \'a77 Security/Governance, \'a78 Reliability/Observability (SLOs, golden signals), \'a712 Acceptance, \'a713 Roadmap (MVP includes telemetry ingest & rollups). Hardware data paths reference HSES12/HSEA24 I/O for channel roles.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Deliver real-time and historical environmental telemetry with Growlink/AROYA parity:\
\'95	Metrics across air/canopy and substrate/drain/line domains.\
\'95	Targets with precedence chain and separate alert thresholds.\
\'95	Rollups (1m/5m/1h) over TimescaleDB hypertables with continuous aggregates.\
\'95	Alerts (severity, ack/resolve) including device offline/fault detection.\
\'95	Operator UX: live charts with target bands, alert feed, conformance KPIs.\
This module underpins task preconditions (e.g., block a task if VPD out of band), irrigation logic, and SLO dashboards. \
In scope (MVP)\
\'95	Telemetry ingest, normalization, range/quality checks, dedup/idempotency.\
\'95	Targets & overrides with precedence: strain \uc0\u8594  phase \u8594  room \u8594  zone \u8594  rack; alert thresholds defined separately.\
\'95	Alerts with ack/resolve; offline detection.\
\'95	Rollups (1m/5m/1h) and conformance analytics.\
\'95	Realtime subscriptions (WebSocket/SSE). \
Out of scope (MVP)\
\'95	Closed-loop EC/pH actuation (flagged for Phase-2; see FRP-06).\
\'95	Long-horizon OLAP in ClickHouse (enable at scale triggers). \
\
2) Metrics & Domains\
Air/Canopy\
\'95	Temperature (\'b0C/\'b0F), RH (%), VPD (kPa; derived), CO\uc0\u8322  (ppm), PPFD (\'b5mol\'b7m\u8315 \'b2\'b7s\u8315 \'b9) & DLI (mol\'b7m\u8315 \'b2\'b7day\u8315 \'b9; derived), differential pressure (Pa), airflow (m/s or CFM). \
Substrate/Drain/Line\
\'95	Substrate VWC (% or m\'b3/m\'b3), EC (mS/cm), pH, substrate temperature (\'b0C).\
\'95	Drain: volume, EC, pH.\
\'95	Line: flow (L/min or GPM), line pressure (bar or psi). \
Hardware channel sources (context)\
\'95	HSES12 EdgeSense: SDI-12 multi-drop sensors, 4-20 mA/0-10 V transmitters (pressure/level/flow), RS-485 instruments, dry-contact pulses for flow.\
\'95	HSEA24 EdgeActuate: flow pulses, pressure (4-20 mA), tank level, interlock inputs (ESTOP/door). \
\
3) Functional Requirements\
3.1 Ingest & Normalization\
\'95	Transports: MQTT/HTTP/SDI-12/RS-485 adapters \uc0\u8594  parser/normalizer \u8594  queue \u8594  Timescale writers.\
\'95	Normalization: unit coercion to canonical units; compute derived metrics (VPD, DLI); quality flags (range_violation, stale, clock_skew, missing).\
\'95	Idempotency: key writes by (device_id, metric, sequence or timestamp).\
\'95	Range checks: apply physical plausibility per metric; out-of-range values stored with quality flag (excluded from conformance).\
\'95	Clock drift: correct within tolerance window; mark if exceeded. \
3.2 Targets & Overrides (Precedence)\
\'95	Targets hold desired bands (min/target/max) and day/night or time-of-day windows.\
\'95	Precedence chain: strain \uc0\u8594  phase \u8594  room \u8594  zone \u8594  rack (highest match wins; merge by field; nulls inherit).\
\'95	Overrides: temporary windows (e.g., ramping after transplant) scoped to any level; must record reason and owner.\
\'95	Separation: alert thresholds are defined separately from targets (may be wider/narrower to tune noise). \
3.3 Alerting & Faults\
\'95	Thresholds: warn/critical for high/low per metric; optional rate-of-change rules.\
\'95	Dwell & hysteresis to prevent alert flapping (configurable per metric).\
\'95	Device offline: last_seen gap beyond site policy (default 90 s) \uc0\u8594  offline alert.\
\'95	Ack/Resolve lifecycle with notes; escalation routes per \'a75.15 Notifications & Escalations (Slack for all, SMS for Critical if policy). \
3.4 Rollups & Conformance\
\'95	Continuous aggregates at 1m/5m/1h over Timescale for sensor_readings; validate rollups vs raw.\
\'95	Conformance score: % of time within target band and alert band per metric and scope; plot heatmaps for quick QA.\
\'95	Dashboards: real-time tiles + historical charts with target bands, alert bands, and alert markers. \
3.5 Realtime Subscriptions\
\'95	WebSocket/SSE streams by site / room / zone / batch with field selection; p95 store\uc0\u8594 client < 1.5 s. \
\
4) Data Model (key tables)\
Matches PRD schema; site-scoped with RLS. Hypertables for high-rate series. \
sensor_streams\
\'95	id, site_id, equipment_id, channel_no, metric (enum), unit_in, calibration_ref?, uom_policy, quality_policy, min_phys, max_phys, tags jsonb (e.g., \{"domain":"air","scope":"zone","zone_id":"\'85"\}), created_at\
sensor_readings (Timescale hypertable)\
\'95	stream_id, ts, value_raw, value (normalized), quality enum (ok/range_violation/stale/skew), seq?, ingest_latency_ms, meta jsonb\
\'95	Indexes per PRD (BRIN on (site_id, ts), BTrees on (stream_id, ts))\
sensor_rollups_1m / _5m / _1h (continuous aggregates)\
\'95	stream_id, bucket_ts, min, max, avg, count, stddev, quality_counts, data_gap_seconds\
environment_targets\
\'95	id, site_id, scope (strain_id? phase? room_id? zone_id? rack_id?), metric, band jsonb \{min,target,max\}, schedule jsonb (day/night/ToD), enabled, precedence_rank\
environment_overrides\
\'95	id, site_id, scope (same), metric, override_band jsonb, starts_at, ends_at, reason, owner_user_id, enabled\
alert_thresholds\
\'95	id, site_id, scope, metric, levels jsonb \{warn:\{hi,lo\}, critical:\{hi,lo\}\}, roc_rules?, dwell_seconds, hysteresis_percent\
alerts\
\'95	id, site_id, scope (room/zone/rack/stream), metric, severity, opened_at, closed_at?, acked_by?, resolved_by?, reason_code, details_json, status (open/acked/resolved)\
equipment_faults\
\'95	(from FRP-02) source for device offline, SDI-12 bus error, RS-485 faults, etc.; linked into alerting views. \
\
5) API Surface (REST + Realtime)\
Streams & Readings\
\'95	GET /v1/sensor-streams?site_id=\'85&scope=zone:\'85\
\'95	POST /v1/sensor-readings (ingest; internal/authenticated producers)\
\'95	GET /v1/readings?stream_id=\'85&from=\'85&to=\'85&rollup=1m|5m|1h\
Targets & Overrides\
\'95	POST /v1/environment-targets (upsert; scope aware)\
\'95	POST /v1/environment-overrides (time-boxed)\
\'95	GET /v1/targets/effective?scope=zone:\'85&metric=\'85 (resolves precedence/overrides)\
Alerts\
\'95	GET /v1/alerts?site_id=\'85&status=open\
\'95	POST /v1/alerts/:id/ack / POST /v1/alerts/:id/resolve (notes)\
Realtime\
\'95	WS /v1/stream (subscribe by site/room/zone/batch; choose fields) \'97 p95 < 1.5 s store\uc0\u8594 client. \
Idempotency on producer endpoints; Outbox used for alert notifications to Slack/SMS (ties to \'a710). \
\
6) UX Flows\
1.	Live Room/Zone Dashboard\
o	Multi-series charts (Temp/RH/VPD/CO\uc0\u8322 /PPFD) with target and alert bands.\
o	Alert chips (Warn/Critical) with dwell countdown and Ack button.\
o	\'93Inspect stream\'94 drawer shows last readings, quality flags, ingest latency.\
2.	Target Editor with Precedence Preview\
o	Pick scope (strain/phase/room/zone/rack), set band and schedule.\
o	Preview panel shows effective band at current time after applying overrides and higher-rank targets.\
3.	Alert Threshold Tuning\
o	Side-by-side of target vs thresholds; propose hysteresis/dwell from historical variance; test rule on last 7 days (simulator).\
4.	Conformance Report\
o	Heatmap %-in-band per metric over day/week; export CSV/PDF (site TZ). \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS site scope on streams/readings/targets/overrides/alerts; org-scoped read policies where applicable.\
\'95	ABAC protects dangerous actions (e.g., disabling thresholds or overriding safety bands), optionally two-person signoff.\
\'95	All changes to targets/overrides/thresholds are hash-chained in audit_logs with nightly verification. \
\
8) Observability, SLOs & Runbooks\
SLOs (PRD):\
\'95	Telemetry ingest device\uc0\u8594 store p95 < 1.0 s; p99 < 2.5 s.\
\'95	Realtime push store\uc0\u8594 client p95 < 1.5 s.\
\'95	Site-day report p95 < 90 s (applies to conformance exports). \
Golden signals (PRD): ingest lag, rollup freshness, queue depth, controller health, API p99, replication lag. \
Metrics\
\'95	ingest_latency_ms histogram; rollup_refresh_lag_seconds; alerts_open\{severity\}; offline_devices_total; percent_in_band\{metric\}.\
Alerts\
\'95	Rollup freshness > 2\'d7 interval; ingest gap by site; alert storm rate; offline surge.\
Runbooks\
\'95	Device offline: check PoE/switch, HSES12/HSEA24 LEDs, broker link, SDI-12 bus; escalate if >N devices or critical zones. \
\'95	Noisy alerting: increase dwell/hysteresis; review threshold vs target separation.\
\'95	Clock drift: verify NTP/PTP settings on Edge nodes (PTP-capable MAC). \
\
9) Acceptance Criteria (MVP)\
1.	Targets & Overrides with Precedence\
o	Effective band resolves via strain \uc0\u8594  phase \u8594  room \u8594  zone \u8594  rack precedence; overrides apply within window; audit captures changes. (PRD requirement)\
2.	Alerts\
o	Deviations beyond alert thresholds trigger alerts with severity and dwell; Ack clears outstanding and stops escalations. (PRD acceptance)\
3.	Offline Detection\
o	Equipment heartbeat loss beyond policy window opens offline alert and creates equipment_faults entry; resolving restores green state. \
4.	Rollups Validation\
o	1m/5m/1h aggregates are consistent with raw windows (tolerance rules); conformance reports compute %-in-band correctly. (PRD acceptance)\
5.	Realtime SLO\
o	Subscribed clients receive updates p95 < 1.5 s from store; ingest SLO p95 < 1.0 s demonstrated in staging. \
\
10) Testing Strategy\
\'95	Unit: precedence resolver; band evaluation; VPD/DLI derivations; dwell/hysteresis; quality flags; conformance math.\
\'95	Contract: ingestion API idempotency; targets/overrides CRUD; effective target preview.\
\'95	Integration/E2E: simulated telemetry across zones \uc0\u8594  alerts & conformance; offline path with HSES12 link cut; Slack notify pipeline.\
\'95	Load: sustained ingest up to initial scale target; verify rollup freshness & SLOs; storm test for alerts.\
\'95	Data quality: range checks & clock skew correction; idempotent duplicate suppression. \
\
11) Dependencies & Integration Points\
\'95	FRP-02 (Spatial/Equipment): stream\uc0\u8594 zone mapping; heartbeats/faults; interlocks declared in registry. \
\'95	FRP-04 (Tasks/Messaging): preconditions for tasks; alert \uc0\u8594  escalation notifications (Slack, SMS per policy). \
\'95	FRP-06 (Irrigation/Fertigation): uses environment metrics for dryback, interlocks, and (Phase-2) closed-loop EC/pH; CO\uc0\u8322  exhaust lockout condition. \
\'95	FRP-15 (Notifications & Escalations): routing & quiet hours policies. \
\
12) Migration & Rollout\
\'95	Create canonical metric dictionary and unit policies; backfill sensor_streams for known equipment.\
\'95	Seed default targets per room class; tune thresholds after 1-2 weeks of baseline.\
\'95	Enable rollups/aggregates; wire dashboards & alert rules in Grafana per PRD. \
\
13) Risks & Mitigations\
\'95	Alert fatigue \uc0\u8594  separate targets vs thresholds; dwell/hysteresis; ROC rules; UI simulators.\
\'95	Data integrity \uc0\u8594  strict ingest validation, idempotency, and range checks; quality flags; audit trails.\
\'95	Scale \uc0\u8594  retention controller & ClickHouse sidecar triggers when limits hit. \
\
14) Derived Metric Notes (implementation)\
\'95	VPD: derive from Temp (C) & RH (%) using saturated vapor pressure; store in kPa.\
\'95	DLI: integrate PPFD over day: DLI \uc0\u8776  ( \u931  PPFD(\'b5mol\'b7m\u8315 \'b2\'b7s\u8315 \'b9) \'d7 \u916 t ) / 1,000,000.\
\'95	Conformance: time-weighted % in target band; exclude readings with non-OK quality.\
\
Hardware tie-ins (quick reference)\
\'95	HSES12 is primary ingest for SDI-12/analog/RS-485 environmental sensors; isolation and protection per EVT spec.\
\'95	HSEA24 exposes flow/pressure/tank level and interlocks (ESTOP/door) that can generate alerts and block actuation. \
\
\
\
\
\
\
\
\
\
\
\
\
\
FRP-06 \'97 Irrigation & Fertigation (Batching, Recipes, Closed/Open-loop) (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.6 Irrigation & Fertigation (groups/programs/steps, schedules, recipes, EC/pH targets & tolerances, closed-loop behind feature flag, dryback, day/night targets, interlocks, flow/pressure verification, nutrient logs, stock deduction, cost snapshot; data tables & acceptance) plus command plane/outbox & audit trail; SLOs for command dispatch; observability & safety. Hardware: HSEA24 actuates 24 VAC valves & pump contactors; HSES12 ingests flow/pressure/level; ESTOP & door interlock behavior.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Provide a production-safe irrigation/fertigation control plane that:\
\'95	Groups zones into irrigation groups;\
\'95	Defines programs composed of steps (time/volume shots, cycle/soak, flush);\
\'95	Runs on schedules (time-based, sensor-triggered, or hybrid);\
\'95	Applies recipes (versioned) with EC/pH targets & tolerances;\
\'95	Calculates dryback and supports day/night targets with auto-shots within windows;\
\'95	Enforces interlocks (tank level, EC/pH bounds, CO\uc0\u8322  exhaust lockout, ESTOP/door, max runtime, line pressure/flow);\
\'95	Verifies flow/pressure, logs deviations, and aborts to safe state on breach;\
\'95	Logs nutrient consumption and performs stock deductions with a cost snapshot;\
\'95	Produces a full audit trail of commands & outcomes. \
Closed-loop EC/pH is present but site-flagged; ships in MVP as open-loop with loop scaffolding and shadow modeavailable for Phase-2 promotion (see FRP-14/Phase-2). \
\
2) Personas & Primary Use Cases\
\'95	Facilities/Ops Lead: define groups/programs/schedules; bind interlocks; tune verification thresholds; run HIL tests. \
\'95	Head of Cultivation: manage dryback targets, day/night windows, and recipes by genetics/phase; review exceptions. \
\'95	Operators/Techs: start/pause/abort runs; acknowledge interlock trips; perform flush; log observations.\
\'95	Compliance/Finance: review consumption logs, stock deductions, and cost snapshots for WIP/COGS. \
\
3) Functional Requirements\
3.1 Irrigation Groups & Membership\
\'95	Irrigation groups model manifolds or synchronized zones.\
\'95	Each group has members (zones) with optional priority/sequencing (parallel or serial), max concurrent valves, and pump association.\
\'95	Groups reference valve\uc0\u8596 zone maps from FRP-02; conflicts validated (no orphan/miswired channels). \
3.2 Programs & Steps\
\'95	A program contains ordered steps executed against a group (or a single zone):\
o	SHOT (time): open valve(s) for duration (s).\
o	SHOT (volume): deliver target_volume (L) using flow metering.\
o	CYCLE/SOAK: repeat N cycles of shot_duration followed by soak_duration.\
o	FLUSH: open flush path or run plain water for duration/volume.\
o	END CONDITIONS (per step): min/max line pressure, min flow rate, max runtime, and interlock setmust remain satisfied; otherwise abort safe with reason.\
\'95	Step options: zone sequencing (serial/parallel), stagger offsets, \'93all-open\'94 limit (cap # of valves).\
Irrigation Zone Calibration (Container Timing)Program parameters may be overridden at dispatch (e.g., reduce volumes on hot days), with audit. \uc0\u8232 Motivation\
Operators prefer dosing in mL/plant but valves actuate in seconds. A fast, safe container-timing calibration yields accurate run-times per zone without additional hardware.\
User stories\
\'95	As an Operator, I can calibrate a zone by filling a measuring container to a target volume so the system calculates seconds required per plant dose.\
\'95	As a Facilities Lead, I want calibration history with user/time and sensor snapshots, so I know when to re-calibrate.\
\'95	As a Head of Cultivation, I want programs to show computed times from my volume steps and respect safety interlocks.\
UX flow (wizard)\
1.	Prepare: Pick zone \uc0\u8594  safety banner (ESTOP/Door must be wired; link to SOP).\
2.	Target volume: Default 100 mL (editable 50-500 mL). Show Estimated time (e.g., ~6 min @ 1 LPH, ~3 min @ 2 LPH).\
3.	Measure: Place container; tap Start (valve opens); watch live timer; tap Stop at mark.\
4.	Review: Show run time, computed mL/s, pressure/flow (if present), and quality. Offer Add another run(encourage 3).\
5.	Apply: Save calibration \uc0\u8594  set zone time per dose converter; optionally set emitters per plant.\
Calculations (units)\
\'95	q_e (mL/s) = target_volume_ml / elapsed_time_s\
\'95	t_run (s) = dose_ml_per_plant / q_e\
\'95	(If emitters_per_plant > 1, operator dose is per plant, not per emitter; formula unchanged.)\
\'95	For display, show LPH: LPH = (q_e * 3600) / 1000.\
API / backend\
\'95	POST /zones/\{id\}/calibrations: start (opens valve via command plane); stop (closes).\
\'95	Command plane: enqueue\uc0\u8594 ack; idempotent; safe abort on interlock/timeout; events written to irrigation_events/irrigation_runs. \
\'95	GET /zones/\{id\}/calibrations/latest returns rate & snapshots; GET history.\
\'95	Converter used when authoring programs with volume steps (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.6; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
Data model\
\'95	Add zone_calibrations (as in PRD addendum).\
\'95	Extend irrigation_runs with calibration_run_id (nullable) for provenance. \
Interlocks & safety (edge + app)\
\'95	Respect tank level, EC/pH bounds, CO\uc0\u8322  exhaust lockout, max runtimes, and manual e-stop during calibration runs; Door input forces OFF.\
\'95	Hardware enforces valve concurrency for INT-100 VA / INT-150 VA; calibration opens a single zone to stay within VA budgets. \
\'95	Edge devices are offline-first; on broker loss, calibration aborts to safe OFF and logs locally. \
Telemetry & dashboards\
\'95	Record elapsed_time_s, target_volume_ml, computed q_e, optional pressure_kpa, flow_pulses.\
\'95	Grafana tiles: last calibration, trend of q_e, pressure deviations, warning banner if |\uc0\u916 pressure| > 10%. \
QA / testing\
\'95	HIL test: open a real valve with dummy load, verify Start/Stop timing accuracy \'b11 s, enforce max runtime, and confirm safe abort on ESTOP/Door. \
\'95	Chaos: PoE\uc0\u8596 AC failover; broker down; ensure no spurious actuation; logs persisted (FRAM) and reconciled.\
Security & audit\
\'95	Site-scoped RLS; actions gated by roles; audit hash-chain entries for start/stop and calibration save. \
Copy (operator-facing)\
\'95	\'93Place a container under one emitter in \{Zone\}. When it reaches \{Target Volume\} mL, tap Stop. Stay with the container\'97don\'92t leave this screen.\'94\
\'95	Safety banners: \'93E-STOP or Door interlock will stop water instantly.\'94\
\'95	\
3.3 Schedules (time, sensor, hybrid)\
\'95	Time-based windows with cron-like or daypart UI; quiet hours respected by site policy.\
\'95	Sensor-triggered: shot when dryback exceeds threshold, substrate EC/pH out of band, or line pressurerecovers.\
\'95	Hybrid: only allow shots within windows AND when sensor predicates are true (min soak elapsed, dryback \uc0\u8805  X%).\
\'95	Day/Night profiles allow different dryback targets and max shots. \
3.4 Recipes, Targets & Tolerances\
\'95	Recipes (versioned): components with per-L dosing (mL/L, g/L, ppm), target EC/pH, and temperature(optional), plus sequence & mix tank mapping.\
\'95	Feed targets: EC/pH target \'b1 tolerance; measured by inline probe or tank sample.\
\'95	Version pinning: a program run references a recipe version for immutability and reproducibility. \
3.5 Dryback Computation & Auto-shots\
\'95	Dryback = delta in substrate water content since last saturation: via VWC/weight proxy (sensor selection per zone).\
\'95	Configure saturation detection (e.g., VWC above threshold + stabilized slope).\
\'95	Auto-shots occur when dryback \uc0\u8805  target and window open; hard limits on max shots per window and min soak between shots. \
3.6 Verification & Safe State\
\'95	On each step, verify line pressure and flow seen on group or zone meters (pulse or analog).\
\'95	Deviation rules:\
o	No-flow (flow < min for dwell seconds) \uc0\u8594  abort step, trip alert, mark failed.\
o	Over-pressure/Under-pressure beyond limits \uc0\u8594  abort.\
o	Tank low (level input) or EC/pH out-of-tolerance (if measured) \uc0\u8594  abort.\
\'95	Abort to safe state closes all valves, de-energizes relays, logs interlock reason; operators may re-arm after acknowledgement. (PRD acceptance)\
3.7 Interlocks (declarative)\
\'95	Interlocks are boolean predicates bound to runs/steps and evaluated continuously:\
o	ESTOP loop, Door interlock (HSEA24 local & remote)\
o	Tank level low (analog or float); Mix tank empty\
o	EC/pH bounds fail (measured deviation vs target\'b1tol)\
o	CO\uc0\u8322  exhaust lockout (env/vent state from FRP-05)\
o	Max runtime exceeded\
\'95	If any interlock opens \uc0\u8594  abort and log; some may allow auto-retry after recovery (policy). \
3.8 Command Plane & Acknowledgements\
\'95	Orchestrator issues device commands via outbox (idempotent) to Edge Actuation, waits for ack and confirmation (flow/pressure or valve state) within timeouts.\
\'95	SLO: enqueue\uc0\u8594 ack p95 < 800 ms (p99 < 1.8 s). Retries with backoff; deduplicate via command IDs. \
3.9 Nutrient Consumption, Stock Deductions & Cost Snapshot\
\'95	For each run, compute delivered volume per zone and derive component usage from recipe vN.\
\'95	Deduct from stock solution lots and/or nutrient products; raise low stock warnings.\
\'95	Persist cost snapshot: per-component quantity \'d7 lot unit cost at time of run; attach to batch for WIP/COGS. \
3.10 Closed-loop EC/pH (feature-flagged)\
\'95	Flag per site. Shadow mode first: compute corrections but do not actuate; record correction deltas. Promotion requires median correction delta \uc0\u8804 5% over \u8805 14 days (Phase-2 criterion). Control loop details live in FRP-14. \
\
4) Data Model (key tables & fields)\
Matches PRD tables with field-level detail for build; all site-scoped with RLS. \
mix_tanks\
\'95	id, site_id, code, name, capacity_L, current_level_L, temp_C?, ec_mScm?, ph?, probes_equipment_id?, low_level_threshold_L, enabled\
injector_channels\
\'95	id, site_id, code, name, driver_type (dosatron/peristaltic/venturi/inline), ratio_or_ml_per_L, max_rate, calibration_coeff, mix_tank_id?, enabled\
nutrient_products\
\'95	id, org_id, name, sku, unit (L|kg), unit_cost, density_g_per_ml?, notes\
stock_solution_lots\
\'95	id, site_id, product_id, lot_code, received_at, unit_qty, unit_remaining, concentration_factor?, expiry_at?, qc_status\
feed_recipes\
\'95	id, org_id, code, name, description, default_targets_id?, active\
feed_recipe_versions\
\'95	id, recipe_id, version, created_at, author_id, notes, locked (immutable)\
feed_recipe_components\
\'95	id, recipe_version_id, product_id or stock_lot_id?, amount_per_L (ml/L|g/L|ppm), order_index\
feed_targets\
\'95	id, recipe_version_id, target_ec_mScm, tol_ec_mScm, target_ph, tol_ph, target_temp_C?, day_night_variant jsonb\
irrigation_groups\
\'95	id, site_id, code, name, pump_equipment_id?, max_concurrent_valves, sequence_mode (parallel|serial), pressure_sensor_stream_id?, flow_sensor_stream_id?, enabled\
irrigation_group_members\
\'95	id, group_id, zone_id, priority, enabled\
irrigation_programs\
\'95	id, site_id, group_id, name, description, recipe_version_id?, default_schedule_id?, day_night_profile jsonb, safety_policy jsonb\
irrigation_schedules\
\'95	id, site_id, program_id, schedule_type (time|sensor|hybrid), cron_or_windows jsonb, predicates jsonb (dryback\uc0\u8805 X, min_soak_s, etc.), quiet_hours_policy_ref?\
irrigation_runs\
\'95	id, site_id, program_id, group_id, status (queued|running|aborted|completed|failed|paused), trigger_source (time|sensor|manual|api), trigger_context jsonb, started_at, ended_at, delivered_volume_L_total, cost_snapshot_json, recipe_version_id, closed_loop_flag, audit_ref_id\
irrigation_step_runs (hypertable; many-to-one)\
\'95	id, run_id, step_index, step_type (shot_time|shot_vol|cycle|flush), zone_ids[], duration_s_planned, duration_s_actual, volume_L_planned, volume_L_actual, min_flow_lpm, min_pressure_bar, interlocks_checked[], outcome (ok|aborted|failed|skipped), abort_reason?, metrics_json, started_at, ended_at \
control_loops\
\'95	id, site_id, loop_type (ec|ph), enabled_flag (feature-gated), plant (shadow|active), targets_ref (feed_targets), confidence_threshold, last_promotion_at\
interlocks\
\'95	id, site_id, name, type (estop|door|tank_low|ec_bounds|ph_bounds|co2_lockout|max_runtime|custom), scope (group|program|run|step), parameters jsonb (streams, thresholds, durations), enabled\
irrigation_events (extended)\
\'95	id, site_id, run_id, step_id?, ts, event_type (cmd_enqueued|ack|valves_opened|flow_ok|flow_low|pressure_low|interlock_open|abort|complete), payload jsonb\
\
5) API Surface (REST + Events)\
Groups & Programs\
\'95	POST /v1/irrigation-groups / POST /v1/irrigation-groups/:id/members\
\'95	POST /v1/irrigation-programs (group_id, recipe_version_id?, schedule?)\
\'95	POST /v1/irrigation-programs/:id/steps (bulk upsert spec)\
Schedules & Predicates\
\'95	POST /v1/irrigation-schedules (time windows, sensor predicates, hybrid rules)\
\'95	GET /v1/irrigation-schedules?program_id=\'85\
Runs & Control\
\'95	POST /v1/irrigation-programs/:id/run (manual trigger; overrides allowed)\
\'95	POST /v1/irrigation-runs/:id/pause / \'85/resume / \'85/abort\
\'95	GET /v1/irrigation-runs?site_id=\'85&status=\'85\
\'95	GET /v1/irrigation-runs/:id/steps\
Recipes & Inventory\
\'95	POST /v1/feed-recipes / POST /v1/feed-recipes/:id/versions (lock on publish)\
\'95	POST /v1/recipe-versions/:id/components (bulk)\
\'95	POST /v1/stock-solution-lots/deduct (internal; idempotent via run_id)\
Interlocks\
\'95	POST /v1/interlocks (scope, params)\
\'95	GET /v1/interlocks?scope=program:\'85|group:\'85\
Realtime Events (WS/SSE)\
\'95	irrigation.run.status, irrigation.step.progress, irrigation.alert.interlock, irrigation.flow.deviation, irrigation.cmd.ack\
Idempotency & Outbox\
\'95	All mutations accept Idempotency-Key.\
\'95	Device commands flow through outbox; acks are correlated to command IDs; retries with backoff & DLQ per CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a710 (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
\
6) UX Flows\
1.	Program Builder\
o	Select Group \uc0\u8594  add Steps (shot/cycle/flush) with verification constraints; choose Schedule(time/sensor/hybrid).\
o	Bind Recipe vN; show EC/pH tolerances; preview interlocks in effect.\
2.	Run Monitor (Live)\
o	Timeline of steps with in-band flow/pressure indicators; interlock status panel (ESTOP, door, tank, CO\uc0\u8322  lockout).\
o	Buttons: Pause, Abort, Flush, Acknowledge.\
o	On abort, explicit reason (e.g., \'93Flow below 1.5 LPM for 12 s\'94). (PRD acceptance: explicit logging)\
3.	Dryback Dashboard\
o	Daily targets vs achieved; auto-shot logs; day/night profile overlay; \'93next eligible shot\'94 timer.\
4.	Recipe & Costing\
o	Recipe vN view with locked components; cost preview by delivered volume; stock remaining by lot with \'93low stock\'94 badges.\
5.	HIL Test Wizard\
o	Simulate flow pulses & line pressure; verify abort logic; generate a \'93panel passed HIL\'94 report.\
\
7) Security, Safety & Audit\
\'95	RLS (site scope) on all irrigation tables; all commands & state changes write to irrigation_events and global audit_logs (hash-chained; nightly verification). \
\'95	ABAC gates manual overrides, closed-loop enable, and interlock suppression (two-person when policy requires). \
\'95	Local safety on HSEA24: ESTOP/door causes failsafe OFF independent of network; controller logs the event and requires re-arm. \
\
8) Observability, SLOs & Runbooks\
SLOs (PRD):\
\'95	Command dispatch enqueue\uc0\u8594 ack p95 < 800 ms (p99 < 1.8 s).\
\'95	Realtime push p95 < 1.5 s for step progress.\
\'95	Site-day report p95 < 90 s for irrigation summaries. \
Metrics\
\'95	irrigation_cmd_latency_ms (enqueue\uc0\u8594 ack), irrigation_abort_total\{reason\}, flow_deviation_events_total, runs_by_outcome_total, nutrient_deduct_failures_total, dryback_hit_rate_pct, stock_below_threshold_total.\
Alerts\
\'95	High abort rate in last N runs; interlock flapping; outbox DLQ growth; stock under min; EC/pH tolerance breaches (when measured).\
Runbooks\
\'95	Interlock trip (which sensor, immediate actions).\
\'95	No-flow triage (clogged filter, closed isolation valve, dead coil).\
\'95	Pressure low (pump, air leak).\
\'95	Tank low (refill & re-prime).\
\'95	Closed-loop drift fallback (feature-flag off; revert to open-loop).\
\
9) Acceptance Criteria (MVP)\
1.	Program Execution & Logging\
o	Program runs execute steps; deviations are logged; step and run outcomes captured; operator actions (pause/abort/ack) audited. (PRD acceptance)\
2.	Interlocks & Safe Abort\
o	When any configured interlock opens (ESTOP, door, tank low, EC/pH bounds, CO\uc0\u8322  lockout, max runtime), the run aborts to safe state and records the cause; re-arm requires acknowledgement. (PRD acceptance)\
3.	Flow/Pressure Verification\
o	Each step validates configured min flow/pressure; violations generate alerts and abort per policy. (PRD requirement)\
4.	Dryback Auto-shots\
o	Given valid sensors and windows, system adds auto-shots respecting min soak, max/day limits, and day/night targets. (PRD requirement)\
5.	Nutrient Consumption & Cost Snapshot\
o	Delivered volumes produce component usage; stock deductions posted to lots; cost snapshot persisted to the run and batch. (PRD requirement)\
6.	Closed-loop Flagging\
o	Closed-loop can be enabled only behind site feature flag; shadow mode yields correction deltas; promotion rules documented. (PRD requirement)\
7.	SLOs Met\
o	Command enqueue\uc0\u8594 ack p95 < 800 ms in staging; realtime push p95 < 1.5 s; site-day irrigation report p95 < 90 s. \
\
10) Testing Strategy\
\'95	Unit: step planner, dryback calculator, interlock evaluator, flow/pressure validator, recipe dosage math, stock deduction & cost snapshot.\
\'95	Contract: device command outbox idempotency; ack correlation; schedule predicates; API status codes & errors.\
\'95	Integration (HIL): simulated HSEA24 actuations, flow pulses, pressure analog; abort scenarios (ESTOP, no-flow, tank low, door open). \
\'95	E2E: schedule\uc0\u8594 run\u8594 verify\u8594 deduct\u8594 cost snapshot; Slack notifications & escalations (ties \'a75.15). \
\'95	Chaos: broker loss, packet loss, PoE brownouts; confirm failsafe OFF and automatic recovery. \
\
11) Dependencies & Integration\
\'95	FRP-02 (Spatial/Equipment): valve\uc0\u8596 zone maps; pump & meter sensors; interlock equipment. \
\'95	FRP-05 (Environment): dryback inputs (VWC/weight), CO\uc0\u8322  exhaust lockout, pressure/flow streams, alert routing. \
\'95	FRP-10/11 (AI/ET\uc0\u8320 ): (Phase-2/3) ET\u8320 -aware steering & closed-loop optimization. \
\'95	FRP-08 (Processing) & Finance/QBO: labor logs for irrigation tasks; cost snapshots feed WIP/COGS; QBO mapping via Item-level sync or GL summary. \
\'95	FRP-15 (Notifications): Slack for all severities; SMS for Critical per site policy. \
\
12) Migration & Rollout\
\'95	Install default interlocks (ESTOP, door, tank low) per site; configure basic time-based schedules first.\
\'95	Onboard flow/pressure sensors and verify thresholds; enable auto-shots only after baseline.\
\'95	Keep closed-loop disabled; run shadow mode for \uc0\u8805 14 days before site-level promotion. \
\
13) Risks & Mitigations\
\'95	Wiring/mapping mistakes \uc0\u8594  valve mapping validator; HIL wizard; QR labels per valve. \
\'95	Over-watering/under-watering \uc0\u8594  strict dryback predicates & caps; alerting on deviations.\
\'95	Sensor failure \uc0\u8594  interlock to block runs; fallback to time-only schedule when policy allows.\
\'95	Inventory mismatch \uc0\u8594  idempotent deductions; \'93reconcile stock\'94 job; low-stock alerts.\
\'95	Network loss \uc0\u8594  HSEA24 local failsafe, safe abort, and state sync on reconnect. \
\
Hardware Tie-ins (quick reference)\
\'95	HSEA24 EdgeActuate: 16\'d7 24 VAC valve channels, 4\'d7 pump/contactor relays, flow pulse inputs, pressure & tank level 4-20 mA, ESTOP & door interlock; local failsafe OFF on trip or broker loss. \
\'95	HSES12 EdgeSense: ingests substrate/line sensors (VWC/EC/pH/pressure/flow/level).\
\
\
\
\
\
\
\
\
\
FRP-07 \'97 Inventory, Warehouse, GS1/UDI & Scanning (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.7 Inventory, Warehouse, GS1 & Scanning (must/acceptance/data), and \'a72 Scope/Decisions (Vault as a distinct location type; user-defined UoM + conversions). This module is a core MVP deliverable: unified location tree, lots with QA/expiry, balances & movements, FEFO, returns\uc0\u8594 HOLD child lot, conversions/rework, and GS1/UDI label generation + barcode scanning.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Provide a production-grade inventory backbone for cultivation & processing:\
\'95	Unified locations tree (site\uc0\u8594 room\u8594 zone\u8594 rack\u8594 bin plus logistics types like truck, customer, staging, lab; Vault is a distinct type).\
\'95	Lots with QA status & expiration, balances per location, movements, adjustments (reason codes), returns that create child lots on HOLD and link to origin.\
\'95	Conversions & rework with robust UoM conversion; GS1/UDI labels and jurisdiction-aware label templates; scanning that posts accurate moves.\
\'95	Acceptance (MVP): split lots across bins; transfers/balances correct; scans move lots; GS1 conformance when configured. \
\
2) Personas & Primary Use Cases\
\'95	Processing Manager / Warehouse Lead: receive, split, transfer, and pick using FEFO; post conversions; print labels. \
\'95	Compliance Officer: enforce jurisdiction label rules and QA holds; audit location histories. \
\'95	Operators/Techs: scan to move across rooms/zones/racks/bins; post returns and adjustments with reason codes. \
\
3) Functional Requirements\
3.0 Inbound Receiving & Purchase Orders (NEW)\uc0\u8232 \'95 Purchase Orders (POs): vendor, terms, currency, ship-to site, expected date, lines (item/SKU, description, UoM, qty, unit cost, tax code), notes/attachments; statuses: draft, submitted, partially_received, closed, canceled.\u8232 \'95 Tolerances: org/site policy for over/under-receipt (default 0-10%); flag variances; approval policy (ABAC) for exceptions.\u8232 \'95 Partial Receipts & Backorders: allow multiple receipts against a PO; auto-close when fully received or admin-closed.\u8232 \'95 Receiving: create inventory_lots with QA status & expiry; capture site/location/bin; auto-print GS1/UDI labels per \'a73.5; FEFO index updates.\u8232 \'95 ASN (optional): pre-stage receipt lines from supplier files; reconcile at dock.\u8232 \'95 Three-way Match Signals (PO\u8596 Receipt\u8596 Bill): on Receipt completion, emit accounting event for QBO Bill creation with price/qty variances (handled in Accounting FRP).\u8232 \'95 Returns to Vendor (RTV): post negative receipt or RTV movement to vendor; link to original PO/receipt; print return documents.\u8232 \'95 Permissions & Audit: site-scoped RLS; ABAC approval for large variances & RTV; all actions hash-chained in audit.\u8232 \'95 SLO alignment: receiving\u8594 label preview p95 \u8804  500\u8201 ms (shares label queue SLO); movement post p95 \u8804  250\u8201 ms (see \'a78).\
Cross-refs: Labels (\'a73.5), FEFO/Pick (\'a73.8), Data Model (\'a74), API Surface (\'a75), Accounting/QBO module for Bill posting. \
\
3.1 Unified Locations Tree\
\'95	Location types: vault, room, zone, rack, bin, truck, customer, staging, lab; Vault behaves as a special secure type within the same tree. Supports barcode labels for all nodes. \
\'95	CRUD with constraints: cannot delete a node that has child nodes, bound equipment, or non-zero balances.\
\'95	FEFO/Picking engine reads expiration dates across bins/racks to propose pick paths.\
3.2 Lots, Balances, Movements, Adjustments\
\'95	Lots carry: product/genetics reference, QA status (e.g., HOLD/RELEASED/QUARANTINE), expiry, origin pointers, and UoM.\
\'95	Balances: quantity at each location (multiple bins per lot are allowed) with strong consistency guarantees.\
\'95	Movements: intrasite transfers (bin\uc0\u8596 bin, zone\u8596 rack, etc.), intersite (optional future), and returns \u8594  create new child lot on HOLD linked to the origin.\
\'95	Adjustments: delta by reason (damage, count variance, COA fail, etc.), ABAC-guarded; large deltas may require two-person signoff (site policy). \
3.3 Conversions & Rework\
\'95	Conversions change a lot into one or more outputs (e.g., wet flower \uc0\u8594  dried flower; trim \u8594  pre-roll material) with explicit UoM transforms.\
\'95	Rework merges/splits lots or reclassifies QA status; all genealogy is preserved via lot_relationships. \
3.4 UoM Definitions & Conversions\
\'95	User-defined UoM catalog (g, kg, lb, each, mL, L, etc.) and conversion factors, compatible with jurisdictional reporting (METRC/BioTrack). \
3.5 Labels & Templates (GS1/UDI)\
\'95	Label templates with dynamic fields (org/site, product, lot, expiry, QA status, jurisdiction warnings).\
\'95	GS1/UDI-ready: encode GTIN/Item code, Lot (AI 10), Expiry (AI 17), and optional Serial (AI 21); support GS1-128 and DataMatrix as site policy dictates.\
\'95	Jurisdiction rules influence which fields are mandatory/forbidden and layout/wording; preview + enforcement integrated with Compliance. \
3.6 Scanning & Posting\
\'95	Barcode settings define symbologies (1D/2D), parsing of GS1 AIs, and scan behaviors.\
\'95	Scan-to-move: scanning a location + lot (or a move ticket) posts a movement; scan confirmations show new balances; idempotency ensures no double-posts.\
\'95	Scan-to-convert: begin a conversion workflow from a pre-printed job ticket; prints output labels upon completion. \
3.7 Returns & QA Holds\
\'95	Returns from downstream (e.g., sales/fulfillment) generate a child lot with status HOLD linked to the origin lot; downstream movements are blocked until QA releases. \
3.8 FEFO & Picking\
\'95	First-Expiry-First-Out policies per product class; picker UI surfaces shortest-dated lots first, by bin.\
\'95	Exceptions (override) require reason code and are written to audit.\
3.9 Items & Catalog (NEW)\uc0\u8232 \'95 Items: SKU, name, category, cannabis_flag, potency schema (json), default UoM, active flag.\u8232 \'95 Packaging Hierarchies: parent\u8596 child with UoM conversions (e.g., bulk oil \u8594  1 g cart \u8594  20-pack case).\u8232 \'95 Locations & Reorder: reorder points by site/location; FEFO allocation uses base UoM.\u8232 \'95 Label Binding: link items to jurisdictional label templates (GS1/UDI fields).\u8232 \'95 Mappings: 1:1 to QBO Items (Accounting FRP) and to regulator items where applicable.\u8232 \'95 Permissions: org-scoped create/edit; site-scoped availability & reorder rules.\
\'95	Acceptance: FEFO honors packaging conversions; label previews render jurisdiction fields; QBO/Regulator mappings validate. \
\
\
4) Data Model (key tables & fields)\
All tables site-scoped (RLS) unless noted; follows CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.7 "Data" (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
inventory_locations\
\'95	id, site_id, type (vault/room/zone/rack/bin/truck/customer/staging/lab), parent_id, code, name, label_template_id?, is_active\
inventory_lots\
\'95	id, site_id, product_id (or genetics/material ref), lot_code, qa_status, expiry_at?, origin_ref?, uom_id, qty_precision, notes, created_at\
inventory_balances\
\'95	id, site_id, lot_id, location_id, qty (numeric), reserved_qty (numeric), last_txn_at\
inventory_movements\
\'95	id, site_id, lot_id, from_location_id, to_location_id, qty, uom_id, reason_code?, actor_user_id, moved_at, source_ref (task/order), idempotency_key\
inventory_adjustments\
\'95	id, site_id, lot_id, location_id, delta_qty, uom_id, reason_code, approver_user_id?, two_person_group_id?, adjusted_at\
lot_relationships\
\'95	id, site_id, parent_lot_id, child_lot_id, relationship_type (conversion/split/merge/return), notes\
uom_definitions / uom_conversions\
\'95	uom_definitions: id, code, name, class (mass/volume/count)\
\'95	uom_conversions: from_uom_id, to_uom_id, factor, precision\
barcode_settings\
\'95	id, site_id, enabled_symbologies[], gs1_ai_map jsonb, print_dpi, printer_profile\
label_templates\
\'95	id, site_id (or org-scoped), name, engine (ZPL/PDF), fields jsonb, jurisdiction_rule_id?, preview_artifact_url\
(Optional, helpful additions)\uc0\u8232 label_print_jobs (queue/outbox for printers), cycle_counts (periodic verification with variances), pick_lists (FEFO picks), move_tickets (batch moves).\
purchase_orders\uc0\u8232 \'95 id (uuid, pk), site_id, partner_id (vendor), status (draft/submitted/partially_received/closed/canceled), currency, terms, expected_at, notes, created_at\
po_lines\uc0\u8232 \'95 id, po_id (fk), item_id, description, uom_id, qty_ordered, unit_cost, tax_code?, tolerance_pct?, received_qty, closed (bool)\
receipts\uc0\u8232 \'95 id, site_id, po_id?, dock_ref?, received_at, operator_user_id, notes, attachments[]\
receipt_lines\uc0\u8232 \'95 id, receipt_id, po_line_id?, item_id, uom_id, qty_received, unit_cost_effective?, variance_reason?, lot_id (created), expiry_at?\
(Catalog) items (org-scoped)\uc0\u8232 \'95 id (uuid, pk), org_id, sku (uniq per org), name, category, cannabis_flag (bool), default_uom, potency_schema_jsonb?, active (bool), created_at\
item_units\uc0\u8232 \'95 item_id, uom, factor_from_base, precision\
item_locations\uc0\u8232 \'95 item_id, site_id, location_id, reorder_min, reorder_max\
item_labels\uc0\u8232 \'95 item_id, jurisdiction_code, template_id\
Note: partner_id refers to partners (defined in FRP-16 Sales & Fulfillment). \
\
\
5) API Surface (REST + Events)\
Locations\
\'95	POST /v1/inventory/locations (create node)\
\'95	GET /v1/inventory/locations/tree?site_id=\'85 (materialized tree)\
Lots & Balances\
\'95	POST /v1/inventory/lots (create/receive)\
\'95	GET /v1/inventory/balances?lot_id=\'85 (per-location balances)\
Movements & Adjustments\
\'95	POST /v1/inventory/movements (from/to, qty, idempotency key)\
\'95	POST /v1/inventory/adjustments (delta, reason, ABAC + optional two-person)\
Conversions/Rework\
\'95	POST /v1/inventory/conversions (inputs\uc0\u8594 outputs; UoM transforms; produce lot_relationships)\
\'95	POST /v1/inventory/returns (origin_lot\uc0\u8594 child_hold_lot)\
Labels & Scanning\
\'95	POST /v1/labels/print (template_id, entity_ref(s), printer_profile)\
\'95	POST /v1/scans (payload) \uc0\u8594  parsed \u8594  inventory_movements/\'85/conversions as configured\
Events (WS/SSE)\
\'95	inventory.balance.changed, inventory.movement.posted, inventory.label.printed\
Procurement (POs & Receipts)\uc0\u8232 \'95 POST /v1/procurement/pos (create/submit)\u8232 \'95 GET /v1/procurement/pos?site_id=\'85&status=\'85\u8232 \'95 POST /v1/procurement/receipts (dock receive; lines; idempotent)\u8232 \'95 GET /v1/procurement/receipts?site_id=\'85\u8232 \'95 POST /v1/procurement/rtv (return-to-vendor)\
\'95	Catalog (Items)\uc0\u8232 \'95 GET /v1/items?org_id=\'85&q=\'85 | POST /v1/items | PATCH /v1/items/:id\u8232 \'95 POST /v1/items/:id/uoms (add units)\u8232 \'95 GET /v1/items/:id/labels\
\
All mutating endpoints accept Idempotency-Key; printer integrations use an outbox queue for reliability. \
\
6) UX Flows\
1.	Receive & Label\
o	Create lot with QA status/expiry \uc0\u8594  auto-print GS1/UDI label (preview \u8594  print).\
o	Place into bin by scan; balances update and FEFO index recomputes. \
2.	Split Across Bins\
o	From lot page: \'93Split to Bins\'94 \uc0\u8594  allocate quantities to target bins (scan or picker).\
o	Result shows one lot, multiple balances; acceptance requires correct balances after transfers. \
3.	Scan-to-Move\
o	Scan location then lot (or a move ticket) \uc0\u8594  movement posted; success toast + new balance snapshot. Acceptance: scans move lots correctly.\
4.	Return & HOLD\
o	Start Return \uc0\u8594  system creates child lot on HOLD; downstream use blocked until QA release. \
5.	Convert & Re-label\
o	Select input lot(s) \uc0\u8594  choose conversion (e.g., wet\u8594 dry) with UoM transforms \u8594  outputs created with new labels; genealogy visible. \
6.	FEFO Pick\
o	Pick list proposes bins by expiry; scan confirms picks; exceptions require reason and audit.\
\
7) Security, RLS/ABAC & Audit\
\'95	Site-scoped RLS on all inventory tables; Vault moves may have stricter ABAC (two-person for certain actions). \
\'95	High-risk actions (large negative adjustments, cross-site transfers when enabled, label reprints after COA hold) require ABAC allow; optional two-person signoff by site policy.\
\'95	All changes hash-chained in global audit_logs (nightly verification), consistent with platform governance. \
\
8) Observability & SLOs\
\'95	SLOs: movement post p95 < 250 ms; scan\uc0\u8594 movement confirmation p95 < 750 ms; label print job enqueue p95 < 500 ms; site-day inventory report p95 < 90 s.\
\'95	Metrics: inventory_balance_writes_total, movement_post_latency_ms, scan_parse_error_total, label_print_queue_depth, fefo_exception_rate.\
\'95	Alerts: high adjustment volume, scan parse failures, label queue backlog.\
\
9) Acceptance Criteria (MVP)\
1.	Split Lots Across Bins\
o	One lot can maintain balances across multiple bins; transfers update balances correctly (integration tests assert invariants). (PRD acceptance)\
2.	Scanning Posts Movements\
o	Barcode scans (GS1/UDI where configured) post inventory_movements with correct from/to and qty; idempotency prevents double-post. (PRD acceptance)\
3.	GS1/UDI Label Conformance\
o	Labels produced from templates conform to GS1 when the site enables GS1 mode; jurisdiction rules apply/preview. (PRD acceptance)\
4.	Returns \uc0\u8594  HOLD\
o	Posting a return creates a child lot with HOLD status linked to the origin; downstream moves blocked until QA release (policy). \
5.	RLS/ABAC/Audit\
o	Users without site membership cannot access data; high-risk actions require ABAC allow; label/adjustment actions are recorded in the audit hash chain. \
\
10) Testing Strategy\
\'95	Unit: FEFO selector; UoM conversion math; GS1 AI parse/format; balance invariants.\
\'95	Contract: create/move/adjust/convert; idempotent movement API; label preview API.\
\'95	Integration/E2E: receive\uc0\u8594 label\u8594 split\u8594 scan moves\u8594 convert\u8594 re-label; return\u8594 HOLD; jurisdiction template enforcement.\
\'95	Security: RLS fuzz; ABAC denials/approvals on adjustments/label reprints.\
\'95	Load: 100k movements/day; ensure p95 latencies hold; printer outbox DLQ < threshold.\
\
11) Dependencies & Integration Points\
\'95	FRP-02 (Sites/Spatial/Equipment): uses the unified location tree; Vault type originates there. \
\'95	FRP-08 (Processing & Manufacturing): consumes/produces lots; labor & yields reconcile with inventory. \
\'95	FRP-09 (Compliance/COA/Destruction): label rules by jurisdiction; holds & gating interplay with inventory states. \
\'95	Accounting (QBO): receipts and adjustments flow into cost layers and GL; mapping covered in Accounting FRP.\
\
12) Migration & Rollout\
\'95	Seed location tree templates (rooms/zones/racks/bins + Vault) and default barcode_settings.\
\'95	Import starting lots/balances via CSV (validating UoM and GS1 fields); print labels for all active stock.\
\'95	Enable FEFO policy defaults; set jurisdiction rules; train operators on scan-to-move.\
\
13) Risks & Mitigations\
\'95	Mis-labeled product / non-compliant labels \uc0\u8594  jurisdiction templates with preview & blockers; QA step before print. \
\'95	Balance drift \uc0\u8594  idempotent movements, cycle counts, and \'93reconcile balances\'94 job.\
\'95	Scan noise / mis-scans \uc0\u8594  robust AI parsing with checksum where available; confirmation prompts for suspicious deltas.\
\
14) Open Design Decisions (proposed defaults)\
\'95	Symbologies: enable Code-128 + GS1-DataMatrix by default; QR allowed for internal apps.\
\'95	GS1 AIs: (01) GTIN/Item, (10) Lot, (17) Expiry, (21) Serial; site can add custom (91-99) scoped data fields.\
\'95	Pick policy overrides: log reason & approver; default threshold for two-person when override affects \uc0\u8805 X% of daily picks.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
FRP-08 \'97 Processing & Manufacturing (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.8 Processing & Manufacturing \'97 must include process definitions, per-run overrides, WIP, yields, operator loss rates, team/user labor, waste events, and rework paths. Data: process_definitions, process_runs, process_steps, labor_logs, waste_events. Acceptance: Input/output/yield reconcile with inventory; labor appears in cost rollups.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Merges tightly with Inventory (FRP-07) and Irrigation/Fertigation (FRP-06) for materials, costing, and run telemetry; ties to Tasks/Messaging (FRP-04) for work coordination and approvals. \
\
1) Purpose & Scope\
Deliver a production-grade manufacturing backbone from harvest handoff \uc0\u8594  WIP \u8594  finished goods, supporting:\
\'95	Reusable process definitions (e.g., Trim \uc0\u8594  Cure \u8594  Pack, Mill \u8594  Pre-rolls, Extract \u8594  Winterize \u8594  Filter \u8594  Distill \u8594  Formulate \u8594  Pack), with typed steps, parameters, and per-run overrides.\
\'95	WIP tracking with input lots, in-process balances, and output lots; yields (actual vs target) and operator loss rates by step.\
\'95	Labor capture (team + user), waste events (reason-coded), rework paths (with retest flags) and full genealogy.\
\'95	Cost rollups that include materials, labor, and (later) overhead; export to Accounting in its FRP. \
\
2) Personas & Primary Use Cases\
\'95	Processing Manager: define processes, start runs, adjust parameters, review yields & loss, approve rework, and close runs. \
\'95	Operators/Techs: execute steps & checklists, record inputs/outputs, log labor and waste with reasons, attach photos/COAs. \
\'95	Compliance Officer: ensure label/COA policies are met and holds respected during rework or release. \
\'95	Finance: consume cost snapshots (materials + labor) for WIP/COGS. \
\
3) Functional Requirements\
3.1 Process Definitions (Templates)\
\'95	Definition structure: name, version, step list (ordered), expected yields, loss thresholds, default labor roles, default paperwork/forms, and QA gates.\
\'95	Step types (examples): Weigh, Break-down, Mill, Sift, Extract, Winterize, Filter, Decarb, Distill, Remediate, Formulate, Fill, Bake, Infuse, Pack, Label, Palletize, QA Sample.\
\'95	Weigh (Scale Session) \'97 detail (NEW)\uc0\u8232 \'95 Tare/Gross/Net with stable-weight window \u8804  750 ms; zero/tare actions logged.\u8232 \'95 Optional humidity/moisture reference capture; net correction factor recorded.\u8232 \'95 Label on complete (ZPL/PDF) with lot/batch fields; reprint policy per site.\u8232 \'95 Audit: raw readings & stability flags kept in scale_sessions; user/device captured.\
\'95	Each step has parameters (e.g., temp, setpoint, time, solvent ratio), units, and validation rules; site can tune defaults per process-version.\
\'95	Per-run overrides allowed with reason logging and optional approver policy (ABAC). \
3.2 Runs & WIP\
\'95	Run lifecycle: planned \uc0\u8594  started \u8594  in_progress \u8594  paused \u8594  aborted \u8594  completed \u8594  closed.\
\'95	Inputs: one or more inventory lots (wet/dry flower, trim, crude, ingredients, packaging).\
\'95	WIP state: maintains in-process balances (by UoM), supports intermediate outputs (e.g., crude oil before distill).\
\'95	Outputs: one or more inventory lots (finished goods or intermediates) with proper UoM and label templates.\
\'95	Genealogy: lot_relationships trace inputs \uc0\u8594  outputs; rework appends new edges. \
3.3 Yields & Loss\
\'95	Step-level yield: material in vs out (mass/volume); run-level yield expected vs actual; variance vs baseline.\
\'95	Loss capture: reason codes (e.g., trim loss, purge loss, equipment loss, evaporation), operator-level loss rates and trend analysis.\
\'95	Tolerances: per step/process\'97exceeding triggers review task or approval (ABAC). \
3.4 Labor Logs\
\'95	Team + user labor: clock-in/out or time entries by step; role codes; optional cost rates for rolled-up costing.\
\'95	Attachments: photo evidence (e.g., fill checks), forms/checklists; all events recorded in audit. Labor must appear in cost rollups (acceptance).\
3.5 Waste Events\
\'95	Record waste with type (regulated/non-regulated), UoM, quantity, reason, disposition (rendered unusable, destroyed, returned), and link to step.\
\'95	If regulated, optionally require two-person signoff per site policy; destruction events and holds integrate with Compliance FRP. \
3.6 Rework & Retest\
\'95	Rework path from any step (e.g., potency low, moisture high, contamination risk); flags retest required and blocks release until pass.\
\'95	Rework creates new outputs with lineage; prior outputs may be quarantined (HOLD) until resolved. \
3.7 Inventory Reconciliation (authoritative)\
\'95	Input consumption posts inventory deductions (from inventory_lots at their locations);\
\'95	Output creation posts inventory additions;\
\'95	Adjustments post automatically when measured output differs from planned transforms;\
\'95	Acceptance: Input/output/yield reconcile with inventory across all movements. \
3.8 Cost Rollups & Snapshots\
\'95	Materials cost from inventory lots (latest unit_cost at time of consumption).\
\'95	Labor cost = \uc0\u931  (duration \'d7 rate) by role/user.\
\'95	Snapshot at run close: embeds materials + labor summary (overhead deferred to Accounting FRP). Acceptance:labor appears in cost rollups. \
3.9 Work Coordination & Messaging\
\'95	Auto-generate tasks (FRP-04) from process definitions (e.g., QA Sample, Fill Check, Metal Detector Verify); block steps if SOP/training gates unmet.\
\'95	Slack notify-only in MVP; two-way comes with Messaging Phase-2. \
\
4) Data Model (key tables)\
Site-scoped with RLS; leverages inventory entities from FRP-07. \
process_definitions\
\'95	id (uuid), org_id, code, name, version, description, step_specs jsonb (ordered), expected_yield_pct?, loss_thresholds jsonb, default_roles[], default_forms[], qa_gates jsonb, status (draft/published), created_at\
process_runs\
\'95	id, site_id, process_definition_id, version, batch_id? (link to cultivation batch if applicable), status, started_at, ended_at, owner_user_id, cost_snapshot_json (materials+labor), notes\
process_steps\
\'95	id, run_id, index, type, params jsonb, status, started_at, ended_at, input_refs jsonb (lot_id\uc0\u8594 qty), output_refs jsonb (lot_id\u8594 qty), expected_yield?, actual_yield?, variance_pct, approver_user_id?, attachments[]\
process_inputs / process_outputs (optional row tables instead of jsonb)\
\'95	input: id, run_id, step_id?, lot_id, uom_id, qty\
\'95	output: id, run_id, step_id?, lot_id, uom_id, qty, label_template_id?\
labor_logs\
\'95	id, site_id, run_id, step_id?, user_id, team_id?, role_code, started_at, ended_at, duration_minutes, rate_per_hour?, cost_amount?\
scale_devices\
\'95	id, site_id, make, model, connection (usb_hid|rs232|ip), port?, baud?, data_bits?, parity?, stop_bits?, stable_window_ms, last_calibrated_at, active\
scale_sessions\
\'95	id, site_id, run_id?, step_id?, device_id, tare, gross, net, unit, stable (bool), humidity_ref?, readings_json, operator_user_id, started_at, ended_at, attachments[]\
waste_events\
\'95	id, site_id, run_id, step_id?, lot_id?, uom_id, qty, reason_code, regulated (bool), disposition, approver_user_id?, two_person_group_id?, occurred_at, notes\
rework_flags\
\'95	id, run_id, step_id?, reason, retest_required (bool), gated_release (bool), cleared_at?, cleared_by?\
Costing: cost_snapshot_json includes expanded lines (materials lots + labor). Accounting FRP maps these to QBO items/GL. \
\
5) API Surface (REST + Events)\
Definitions\
\'95	POST /v1/process-definitions (create/publish)\
\'95	GET /v1/process-definitions?org_id=\'85\
\'95	POST /v1/process-definitions/:id/publish (locks version)\
Runs\
\'95	POST /v1/process-runs (definition_id, inputs, planned_outputs?)\
\'95	POST /v1/process-runs/:id/start | /pause | /abort | /complete\
\'95	GET /v1/process-runs?site_id=\'85&status=\'85\
\'95	POST /v1/process-steps/:id/record (inputs/outputs deltas, params overrides, attachments)\
Labor & Waste\
\'95	POST /v1/labor-logs (start/stop or duration)\
\'95	POST /v1/waste-events (qty, reason, disposition) \uc0\u8594  optional two-person; ABAC policies apply\
Rework\
\'95	POST /v1/process-runs/:id/rework (reason, retest_required, gated_release)\
\'95	POST /v1/rework/:id/clear (approval)\
Inventory glue\
\'95	POST /v1/process-runs/:id/reconcile (materials + outputs; idempotent; creates movements/adjustments)\
Realtime Events (WS/SSE)\
\'95	process.run.created/updated/completed, process.step.started/completed, process.loss.threshold_exceeded, process.rework.flagged, process.cost.snapshot\
All mutators accept Idempotency-Key; reconciliation uses outbox semantics where it touches inventory.\
\
6) UX Flows\
1.	Start a Run\
o	Pick process definition vN, select input lots (scan-to-add), confirm planned outputs.\
o	Checklist & SOP gates shown; unresolved gates block Start. \
2.	Execute Steps\
o	Operator view shows current step with parameters, timers, target yield.\
o	Record inputs/outputs; quick buttons for common deltas; attach photos; Log Labor (timer or duration).\
3.	Waste & Loss\
o	\'93Record Waste\'94 modal with reason codes and disposition. If regulated, two-person signoff may be required. \
4.	Rework\
o	Flag run/step for rework; system opens rework branch, sets retest required, and applies HOLD to affected outputs until cleared. \
5.	Close & Reconcile\
o	Final screen: inputs consumed, outputs created, yield %, cost snapshot (materials + labor). Complete posts inventory movements and locks the run. Acceptance: reconciliation succeeds and labor appears in costs. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at site scope on all processing tables; org-scoped definitions are readable per org membership.\
\'95	ABAC protects high-risk actions: large negative adjustments, regulated waste destruction, definition edits after publish, and rework release; optional two-person signoff. \
\'95	All actions hash-chained in global audit logs; nightly verification per platform governance. \
\
8) Observability & SLOs\
\'95	SLOs: run action p95 < 300 ms; scan\uc0\u8594 add input p95 < 750 ms; site-day manufacturing report p95 < 90 s (shares reporting SLOs). \
\'95	Metrics: process_runs_active, yield_variance_pct, loss_rate_by_reason, labor_minutes_per_unit, rework_rate, rework_clear_time, reconcile_failures_total.\
\'95	Alerts: loss variance above threshold, rework backlog aging, reconciliation or label mismatches.\
\
9) Acceptance Criteria (MVP)\
1.	Inventory Reconciliation\
o	Starting and completing a run consumes inputs and creates outputs with correct quantities/UoM and genealogy; yields compute and match deltas. (Required)\
2.	Labor in Cost Rollups\
o	Labor logs are included in the cost snapshot for the run; exports surface materials + labor totals. (Required)\
3.	Loss & Waste\
o	Loss thresholds trigger review tasks; waste events persist with reasons and (when configured) two-person signoff. \
4.	Rework Path\
o	Rework can be initiated from any step; affected outputs are placed on HOLD (if policy) and require retest/approval to release; lineage preserved. \
5.	Per-run Overrides\
o	Parameter overrides are logged with reason and approver; definitions remain immutable post-publish (versioned). \
\
10) Testing Strategy\
\'95	Unit: yield math; UoM transforms; labor cost rollup; loss threshold evaluation; lineage graph integrity.\
\'95	Contract: create/publish definition; start/record/close run; idempotent reconciliation; ABAC denials/approvals.\
\'95	Integration/E2E: receive lots \uc0\u8594  start run \u8594  execute steps (with labor/waste) \u8594  outputs & labels \u8594  reconcile \u8594  cost snapshot; rework + retest flow; Slack notifications. \
\'95	Security: RLS fuzz; two-person workflows; audit chain verification.\
\'95	Load: 5k step writes/hour across 10 sites; report SLOs met.\
\
11) Dependencies & Integration Points\
\'95	FRP-07 Inventory: inputs/outputs, UoM conversions, GS1/labels, returns/HOLD. \
\'95	FRP-04 Tasks/Messaging: checklists, approvals, escalations, Slack. \
\'95	FRP-06 Irrigation/Fertigation: materials (recipes/stock lots) consumed for formulation steps; cost alignment. \
\'95	Accounting (QBO FRP): cost snapshots \uc0\u8594  items/GL; idempotent sync. \
\'95	FRP-09 Compliance: COA/holds during rework/release; destruction logs for regulated waste. \
\
12) Migration & Rollout\
\'95	Seed starter process templates (Flower\uc0\u8594 Cure\u8594 Pack; Mill\u8594 Pre-roll; Extract\u8594 Distill\u8594 Formulate\u8594 Pack).\
\'95	Configure loss reason codes, labor roles/rates, and waste policies (two-person when regulated).\
\'95	Pilot in one site; run in parallel with existing spreadsheets for 2-3 weeks; validate yields and costs before multi-site rollout.\
\
13) Risks & Mitigations\
\'95	Yield math / UoM errors \uc0\u8594  strict UoM catalog + conversions; E2E reconciliation tests; operator hints for common traps.\
\'95	Over-blocking from gates \uc0\u8594  sensible defaults; override with ABAC + strong auditing.\
\'95	Cost disputes \uc0\u8594  expose cost snapshot composition; idempotent adjustments with reasons and approvals.\
\
14) Open Design Decisions (proposed defaults)\
\'95	Definition versioning: published versions immutable; new edits create vN+1.\
\'95	Labor capture mode: default to timers with manual adjust; allow duration entries when kiosk-less.\
\'95	Loss thresholds: start with soft thresholds (review task) \uc0\u8594  hard block only for extreme variance.\
\'95	Rework release: require passing QA Sample task + approver (Compliance role) before outputs leave HOLD.\
\
\
\
\
\
\
\
\
\
\
FRP-09 \'97 Compliance (METRC/BioTrack), Testing & COA (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.9 Compliance (METRC/BioTrack), Testing & COA \'97 per-site credentials; realtime vs scheduled sync; retry queue & event logs; destruction with optional two-person signoff; COA orders/results (PDF/CSV), pass/fail, holds & gating; label rules by jurisdiction; exportable audit trails, plus the platform\'92s RLS/ABAC governance and audit hash chain requirements. Lab APIs beyond PDF/CSV are out of scope v1.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Deliver a compliance backbone that keeps operations in lock-step with regulators while allowing facilities to move quickly:\
\'95	METRC/BioTrack sync with rate-aware queues, idempotent payloads, retries/backoff, error surfacing, and replay tools.\
\'95	Site-level credentials and per-jurisdiction label rules with preview/enforcement hooks.\
\'95	COA lifecycle: lab orders, results (PDF/CSV ingestion), pass/fail evaluation, HOLDs and gating policies that can stop movements or releases until resolved.\
\'95	Destruction events with optional two-person signoff governed by ABAC.\
\'95	Audit-ready exports by plant/package/facility with a tamper-evident hash chain. \
Out of scope (MVP): direct lab APIs\'97PRD states PDF/CSV first (manual upload + assisted parsing) for v1. \
\
2) Personas & Primary Use Cases\
\'95	Compliance Officer: connect jurisdiction(s), monitor sync health, resolve errors, export audits, control destruction workflows, set COA gating. \
\'95	Processing/Warehouse Leads: create COA orders, upload results, release or keep on HOLD; ensure labels follow jurisdiction rules before printing. \
\'95	Executive/Finance: verify that shipments are compliant and that audit trails exist for regulators and financial controls. \
\
3) Functional Requirements\
3.1 Integrations & Sync Modes\
\'95	Per-site credentials for METRC and/or BioTrack stored via KMS/Vault; status tiles per site. \
\'95	Realtime vs. scheduled:\
o	Realtime: enqueue on business events (planting, harvest, package create/adjust/transfer, destruction, etc.).\
o	Scheduled: periodic reconciliation jobs and replays for drift recovery. \
\'95	Transfers/Manifests: create/preview/validate shipment transfer payloads; idempotent queueing; reprint/re-issue controls; block ship when HOLD/violations present; echo manifest # back to upstream Sales.\
\'95	Queue & backoff: rate-aware adaptive throttling, retry/backoff, DLQ & remediation UI, idempotent request keys; sync event logs. \
3.2 Error Handling & Remediation\
\'95	Clear error objects (code, external message, suggested fix), bulk retry, selective replay, and field mapping helpers for data cleansing. Acceptance requires failed syncs retry with backoff and visible errors.\
3.3 COA (Testing & Results)\
\'95	Lab orders (site, lab, product/lot/batch, tests requested, chain-of-custody).\
\'95	Results ingestion from CSV/PDF with attachments; record analytes (THC/Terps/etc.), pass/fail, and notes.\
\'95	HOLD & gating: site policy can block movements/releases until pass; failed COA enforces/maintains HOLDand triggers escalations. \
\'95	Exports: regulator-compatible COA packages with attachments. \
3.4 Destruction\
\'95	Destruction events (regulated/non-regulated) with quantities, methods, witnesses, and two-person signoff when site policy demands it; sync to regulator when applicable. \
\'95	Print/export of destruction logs for inspections. \
3.5 Jurisdiction Label Rules\
\'95	Rule sets per jurisdiction: required fields, warnings, panel text, font/placement constraints, prohibited claims.\
\'95	Preview & enforcement integrated with label templates before print; block print/move if non-compliant (site policy). \
3.6 Audit & Governance\
\'95	Audit exports by plant/package/facility; hash-chained audit logs with nightly verification and WORM anchoring option. \
\'95	All high-risk actions (HOLD release, destruction, label override, regulator re-sync) covered by ABAC + optional two-person signoff. \
\
4) Data Model (key tables)\
All site-scoped with RLS unless noted; matches PRD entities and adds build-level fields. \
compliance_integrations\
\'95	id, site_id, system (metrc|biotrack), credentials_encrypted, status, rate_limit_cfg, last_sync_at, enabled\
sync_queue\
\'95	id, site_id, system, entity_type, entity_id, op (create/update/transfer/destroy/etc.), payload_json, idempotency_key, status (queued|inflight|success|failed|dlq), attempts, next_attempt_at, last_error_code?, last_error_msg?, created_at\
sync_events (+ reuse of any existing biotrack_sync_logs)\
\'95	id, queue_id, request_meta, response_meta, status, ts \
holds\
\'95	id, site_id, scope_type (lot|package|batch), scope_id, reason_code (COA_FAIL|PENDING_COA|REGULATORY\'85), status (active|released), created_by, released_by?, created_at, released_at\
two_person_signoffs\
\'95	id, site_id, action_code, object_ref, requester_user_id, approver_user_id, approved_at, policy_ref, notes\
destruction_events\
\'95	id, site_id, entity_type (plant|package|lot), entity_id, qty, uom, method, location_id, witnesses[], attachments[], synced_to_regulator (bool), created_by, approved_by?, approved_at, created_at \
labs\
\'95	id, site_id, name, contact, address_json\
lab_orders\
\'95	id, site_id, lab_id, submitted_at, chain_of_custody_json, items[] (entity refs), requested_tests[], status\
lab_results\
\'95	id, lab_order_id, received_at, ingest_type (csv|pdf), attachments[], analytes_json (name, method, unit, value, LOQ/LOD), pass_fail (pass|fail|inconclusive), notes\
batch_coa_attachments (or link off lab_results)\
\'95	id, site_id, batch_id, result_id, attachment_url, visible_to_customers (bool)\
jurisdiction_rules\
\'95	id, jurisdiction_code, version, rules_json (label fields, warnings, layout constraints), effective_at\
\
5) API Surface (REST + Realtime)\
Integrations & Sync\
\'95	POST /v1/compliance/integrations (site_id, system, creds)\
\'95	GET /v1/compliance/health?site_id=\'85 (status, rate, backlog, DLQ hints)\
\'95	POST /v1/compliance/sync (enqueue entity op, idempotent)\
\'95	POST /v1/compliance/replay (filters: time window, types, site)\
\'95	GET /v1/compliance/queue?status=\'85 (paged), GET /v1/compliance/events?queue_id=\'85\
COA\
\'95	POST /v1/coa/orders (site, lab, items)\
\'95	POST /v1/coa/results/upload (order_id, CSV/PDF)\
\'95	POST /v1/coa/results/:id/evaluate \uc0\u8594  pass|fail|inconclusive + rationale; policy gate may toggle HOLD\
\'95	GET /v1/coa/packages?site_id=\'85 (export bundle with attachments)\
Destruction\
\'95	POST /v1/compliance/destruction (payload) \uc0\u8594  two-person if policy\
\'95	GET /v1/compliance/destruction?site_id=\'85 (exportable log)\
Labels (Jurisdiction Rules)\
\'95	POST /v1/compliance/labels/preview (template_id, jurisdiction_code, data_ref)\
\'95	POST /v1/compliance/labels/validate \uc0\u8594  ok|violations[] (blocks print per policy)\
Realtime Events (WS/SSE)\
\'95	compliance.sync.failed/succeeded, compliance.queue.backoff, compliance.coa.hold_applied/released, compliance.destruction.approved\
Transfers\
\'95	POST /v1/compliance/transfers (from shipment id) \uc0\u8594  returns manifest_id, regulator_ref\
\'95	POST /v1/compliance/transfers/:id/preview | \'85/validate\
\'95	POST /v1/compliance/transfers/:id/reprint | \'85/void\
Idempotency & Outbox: all mutators accept Idempotency-Key; workers implement outbox semantics and rate-aware retries. \
\
6) UX Flows\
1.	Connect & Verify\
o	Add site credentials \uc0\u8594  Test Connection shows rate limits and a baseline drift estimate; toggle Realtime vs Scheduled. \
2.	Sync Monitor\
o	Queue tiles (queued/inflight/success/failed/DLQ), error detail with suggested fixes, bulk retry, and Replaywizard. \
3.	COA Order \uc0\u8594  Result \u8594  Gating\
o	Create order \uc0\u8594  upload CSV/PDF results \u8594  system evaluates pass/fail \u8594  if fail and policy requires, apply HOLD on related lots/packages and notify. \
4.	Destruction with Two-Person\
o	Operator records destruction \uc0\u8594  approver badge-auths (ABAC) \u8594  exportable logged event; optional regulator sync. \
5.	Label Rules Preview\
o	Choose jurisdiction \uc0\u8594  preview label (required fields/panels/warnings) \u8594  Validate; violations block print/move when policy enabled. \
6.	Audit Exports\
o	One-click bundles by plant / package / facility, signed with hash chain verification report. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at site scope across all compliance tables; org-scoped visibility for rule catalogs.\
\'95	ABAC guards high-risk ops: destruction approval, HOLD release, label override, \'93force sync\'94. Optional two-person signoff per site policy. \
\'95	Every mutation is written to hash-chained audit logs; nightly verification & WORM anchoring option. \
\
8) Observability, SLOs & Runbooks\
SLOs (platform): site-day report p95 < 90 s; queue health dashboards and burn-rate alerts for SLO breaches. \uc0\u8232 Metrics: compliance_queue_depth, sync_fail_rate\{system\}, retry_backoff_seconds, dlq_size, coa_hold_active_total, destruction_awaiting_approval.\u8232 Runbooks: METRC throttling & DLQ recovery; Slack bridge outage reconciliation; cost guardrails; DB failover. \
\
9) Acceptance Criteria (MVP)\
1.	Resilient Sync\
o	Failed regulator syncs retry with backoff; errors are surfaced with remediation hints; DLQ & replay tools available. (Required)\
2.	COA Gating\
o	Uploading a failed COA enforces HOLD (when site policy enabled), blocking movements/prints/releases until cleared; exports include COA package. (Required)\
3.	Destruction Controls\
o	Destruction events require two-person signoff when policy requires; logs are exportable for regulators. (Required)\
4.	Label Rules\
o	Jurisdiction rules validate labels; violations block print/move when enabled; preview shows required text/panels. (Required)\
5.	Audit Exports\
o	Plant/package/facility audit bundles can be generated; audit chain verification passes nightly. (Required)\
\
10) Testing Strategy\
\'95	Unit: queue backoff logic; idempotency keys; CSV/PDF result parser; label rule validator; HOLD policy evaluator.\
\'95	Contract: integrations health; enqueue/sync/replay; destruction signoff; COA evaluate; label validate/preview.\
\'95	Integration/E2E: event\uc0\u8594 enqueue\u8594 throttle\u8594 success/fail\u8594 retry/DLQ\u8594 replay; COA upload \u8594  HOLD; destruction two-person; label block/allow; audit export.\
\'95	Chaos/Resilience: regulator throttling spikes; network failures; DB failover; Slack outage reconciliation (notification side). \
\
11) Dependencies & Integration Points\
\'95	FRP-07 Inventory & Labels: label templates, GS1/UDI, Vault type, movements blocked by HOLD. \
\'95	FRP-08 Processing: rework/outputs gated by COA; destruction of regulated waste. \
\'95	FRP-01 Identity/ABAC: two-person workflows and audit posture. \
\'95	FRP-15 Notifications: Slack for all severities; SMS for Critical when policy requires. \
\
12) Migration & Rollout\
\'95	Configure site credentials and jurisdiction rules; test with sandbox endpoints where available.\
\'95	Turn on scheduled reconciliation first; enable realtime after baseline success.\
\'95	Train teams on COA upload flow and HOLD impacts; verify label compliance templates with sample SKUs.\
\
13) Risks & Mitigations\
\'95	Regulator throttling/instability \uc0\u8594  adaptive rate limits, DLQ, replay runbooks. \
\'95	Data drift between system and regulator \uc0\u8594  scheduled reconciliations, discrepancy reports, guided fixes. \
\'95	Label non-compliance \uc0\u8594  enforce rules pre-print; require approver override (ABAC) to proceed. \
\'95	COA parsing errors \uc0\u8594  structured CSV templates, PDF attachment capture, manual entry guardrails.\
\
14) Open Design Decisions (proposed defaults)\
\'95	Replay windows: 7/30/90-day presets with idempotent dedupe.\
\'95	HOLD scope: default lot+package; optional batch-wide when policy enabled.\
\'95	COA tie-breakers: if mixed results exist, prefer worst-case until Compliance overrides.\
\'95	Label override flow: requires justification, approver with Compliance role, and audit tag.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
FRP-10 \'97 Accounting (QuickBooks Online)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a74.10 / \'a75.14 Accounting - QuickBooks Online (QBO): OAuth2, encrypted tokens, mapping UIs (items/customers/vendors/accounts/tax/location/class), two sync modes (Item-level and GL-summary, can run both), idempotency (Request-ID), adaptive throttling, DLQ, reconciliation reports; Acceptance: Receiving \uc0\u8594  QBO Bill with correct inventory effects; month-close JE matches variance thresholds; DLQ <0.1% over 7 days.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Architecture alignment: Integrations section specifies QBO OAuth2, Request-ID idempotency, adaptive throttling, DLQ, and mapping UIs; platform outbox/queue pattern and observability apply here. \
\
1) Purpose & Scope\
Provide a robust accounting bridge between Harvestry ERP and QuickBooks Online that:\
\'95	Supports Item-level sync (POs, Bills, Inventory Adjustments, Invoices, Payments) honoring FIFO valuation.\
\'95	Supports GL-summary sync (periodic Journal Entries for WIP\uc0\u8594 FG capitalization and COGS recognition).\
\'95	Allows both modes to run concurrently (e.g., Item-level for AP/AR; GL-summary for manufacturing & COGS), with reconciliation safeguards. \
Provides idempotent writes, adaptive throttling, DLQ with replay, and month-end reconciliation reporting to ensure accounting integrity. \
\
2) Personas & Primary Use Cases\
\'95	Controller / Accountant: configure mappings; review daily sync; run month-end reconciliation; post GL summaries; investigate DLQ. \
\'95	AP Clerk / Buyer: create POs/Receipts; expect Bills with matched quantities, costs, and item codes in QBO. \
\'95	AR / Sales Ops (if Sales module enabled): generate invoices/credit memos; ensure Payments apply correctly. \
\
3) Functional Requirements\
3.1 Connections & Security\
\'95	OAuth2 connection flow; encrypted token storage; token rotation; connection health tile per site (orgs may have multiple QBO companies). \
\'95	Mapping UIs for: Items, Customers, Vendors, Accounts (COGS/Inventory/WIP/FG/Variance), Tax codes, Location/Class (used to mirror Site/Room or Product Class). \
3.2 Two Sync Modes (selectable, combinable)\
\'95	Item-level sync (operational):\
o	POs \uc0\u8594  Bills on Receiving (three-way match: PO/Receipt/Bill); supports partials & price variance lines.\
o	Inventory Adjustments (cycle counts, QA reclass) \uc0\u8594  QBO Inventory Adjustments.\
o	Invoices & Payments (if Sales module enabled) \uc0\u8594  QBO Customer Invoices/Payments.\
o	Honor FIFO valuation signals from inventory when posting adjustments. \
\'95	GL-summary sync (periodic, month-end):\
o	Post WIP\uc0\u8594 FG capitalization JEs from Processing runs (materials + labor cost snapshots).\
o	Post COGS at shipment/invoice recognition or period close (policy).\
o	Optionally post Purchase Price Variance and Manufacturing Variance summary lines. \
Mode safety: When both are active, prevent double-counting by excluding overlapping effects (e.g., Item-level handles AP/AR; GL-summary handles WIP/FG/COGS only). \
3.3 Idempotency, Throttling, DLQ\
\'95	Use QBO Request-ID semantics to guarantee idempotent writes; de-dup by (company_id, external_ref, op); retries with exponential backoff.\
\'95	Adaptive throttling tracks QBO rate limits; auto-sheds and re-queues.\
\'95	DLQ for poison messages with remediation workflows; Acceptance: DLQ < 0.1% over 7 days. \
3.4 Reconciliation & Reporting\
\'95	Daily: sync status dashboard (queued/inflight/success/failed/DLQ), variance tiles (QBO vs ERP balances).\
\'95	Month-end: reconciliation report:\
o	Receiving\uc0\u8594 Bills matched; unmatched receipts aging.\
o	ERP WIP/FG/COGS vs QBO GL (JE) variance \uc0\u8804  thresholds (configurable).\
o	Audit of cost snapshots (materials + labor) used for JE composition. Acceptance: month-close JE matches variance thresholds. \
3.5 Webhooks & Change Capture\
\'95	Verify QBO webhooks; ingest changes for Items/Customers/Vendors/Accounts to help mapping drift detection. \
3.6 Multi-site & Classification\
\'95	Map Site \uc0\u8594  Location or Class; optionally map Product Line or Room Class \u8594  Class for reporting splits. \
\
4) Data Model (key tables)\
Site-scoped unless noted; matches PRD with build-level detail. \
accounting_integrations\
\'95	id, org_id, site_id? (nullable when org-wide), provider (qbo), oauth_meta_encrypted, company_id, connection_status, last_webhook_at, enabled\
qbo_item_map / qbo_customer_map / qbo_vendor_map / qbo_account_map / qbo_tax_map / qbo_location_map / qbo_class_map\
\'95	org_id (or site_id), erp_id, qbo_id, code, name, active, last_sync_at\
accounting_queue\
\'95	id, site_id, company_id, entity_type (po|bill|inv_adj|invoice|payment|je), op (create|update), payload_json, request_id, attempts, next_attempt_at, status (queued|inflight|success|failed|dlq), last_error, created_at\
accounting_events\
\'95	id, queue_id, direction (outbound|webhook), request_meta, response_meta, status, ts\
reconciliation_snapshots\
\'95	id, site_id, period (YYYY-MM), metrics_json (WIP, FG, COGS, PPV/MV), qbo_gl_totals, variance, report_url, generated_at\
Uses process_runs.cost_snapshot_json (materials + labor) from FRP-08 and inventory movements/valuations from FRP-07. \
\
5) API Surface (REST + Events)\
Connections & Mappings\
\'95	POST /v1/accounting/qbo/connect (OAuth2) / DELETE \'85/disconnect\
\'95	GET /v1/accounting/qbo/mappings (all)\
\'95	POST /v1/accounting/qbo/mappings/:type (bulk upsert item/customer/vendor/account/tax/location/class)\
Operational Sync (Item-level)\
\'95	POST /v1/accounting/qbo/enqueue/bill (receipt_id, vendor_id, lines\'85)\
\'95	POST /v1/accounting/qbo/enqueue/inventory-adjustment (lot/location deltas)\
\'95	POST /v1/accounting/qbo/enqueue/invoice|payment (sales enabled)\
GL-Summary\
\'95	POST /v1/accounting/qbo/enqueue/je (period, je_type: wip_to_fg|cogs|variance)\
\'95	POST /v1/accounting/qbo/reconcile (period) \uc0\u8594  generates reconciliation_snapshot\
Webhooks\
\'95	POST /v1/accounting/qbo/webhook (verified) \uc0\u8594  writes accounting_events\
Events (WS/SSE)\
\'95	accounting.queue.updated, accounting.sync.failed/succeeded, accounting.reconciliation.ready\
All mutators accept Idempotency-Key; queue workers implement adaptive throttling and DLQ.\
\
6) UX Flows\
1.	Connect & Map\
o	OAuth to QBO; pick company; map Items/Customers/Vendors/Accounts/Tax/Location/Class (bulk tools + search). Mapping drift detector flags missing or renamed records. \
2.	Receiving \uc0\u8594  Bill (Item-level)\
o	On Receipt completion: review Bill preview (vendor, lines, quantities, unit costs, taxes). Post to queue \uc0\u8594  QBO Bill; ERP shows QBO link and status. Acceptance: Receiving creates a QBO Bill with correct inventory effects. \
3.	Inventory Adjustments\
o	Cycle count variance or QA reclass posts an Inventory Adjustment with appropriate account and class/location splits.\
4.	Month-End JE (GL-summary)\
o	Run WIP\uc0\u8594 FG (sum materials + labor cost snapshots from process runs), COGS, and variances; JE preview displays accounts and dimensions; post to QBO; generate reconciliation report. \
5.	Monitoring & DLQ\
o	Queue dashboard with throughput, retry/backoff; DLQ provides error tooltips and guided fixes; bulk replay. Acceptance: DLQ < 0.1% over 7 days. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS on integration/mapping/queue tables; org/site scoping enforced.\
\'95	ABAC for high-risk ops (e.g., posting GL-summary JEs, deleting mappings, force-sync); optional two-personfor period close post.\
\'95	All posts & mapping changes are written to the platform\'92s hash-chained audit log with nightly verification. \
\
8) Observability & SLOs\
\'95	Platform SLO (reports): period reconciliation generation p95 < 90 s (site-day/period reports). \
\'95	Metrics: accounting_queue_depth, qbo_request_latency_ms, qbo_rate_limit_backoffs_total, dlq_size, recon_variance_abs, mapping_drift_total.\
\'95	Alerts: sustained fail rate > X%, DLQ growth, variance threshold exceeded, webhook verification failures. \
\
9) Acceptance Criteria (MVP)\
1.	Receiving \uc0\u8594  QBO Bill\
o	Completing a Receipt enqueues and successfully posts a QBO Bill with correct vendor, items, quantities, unit costs, tax, and inventory effects (FIFO). (Required)\
2.	Month-Close GL Summary\
o	WIP\uc0\u8594 FG and COGS Journal Entries post from ERP cost snapshots; reconciliation report shows variances within configured thresholds. (Required)\
3.	Reliability\
o	Idempotency (Request-ID) prevents duplicates; DLQ < 0.1% over a rolling 7-day window; adaptive throttling active. (Required)\
4.	Audit & Security\
o	All accounting mutations audited (hash-chain); RLS prevents cross-site access; ABAC enforced for GL posts and destructive actions. (Required)\
\
10) Testing Strategy\
\'95	Unit: JE builder math (WIP, FG, COGS), FIFO valuation transforms, Request-ID idempotency, backoff controller.\
\'95	Contract: OAuth, mappings CRUD, enqueue & webhook verification; QBO payload schemas.\
\'95	Integration/E2E: PO\uc0\u8594 Receipt\u8594 Bill, cycle-count\u8594 Inventory Adjustment, process runs\u8594 cost snapshots\u8594 WIP\u8594 FG & COGS JEs; reconciliation report with thresholds. \
\'95	Resilience/Chaos: throttle storms; 401 token expiry; webhook signature mismatch; DLQ replay and recovery. \
\
11) Dependencies & Integration Points\
\'95	FRP-07 Inventory: lots, movements, adjustments, UoM, GS1/labels (for item codes). \
\'95	FRP-08 Processing: cost_snapshot_json (materials + labor) feeds WIP/FG and COGS JEs. \
\'95	FRP-09 Compliance: holds can block invoice/ship; destruction events tie to write-offs. \
\'95	FRP-15 Notifications: Slack/SMS for critical accounting failures and period-close approvals. \
\
12) Migration & Rollout\
\'95	Connect sandbox QBO; import chart of accounts & base mappings; run smoke tests with test POs/Receipts; confirm Bills.\
\'95	Pilot GL-summary in read-only preview for one period; compare to controller spreadsheet; then enable posting.\
\'95	Enable variance thresholds and DLQ monitors; train AP/AR & accounting teams on dashboards and replay.\
\
13) Risks & Mitigations\
\'95	Double-counting when both modes enabled \uc0\u8594  strict scoping (Item-level for AP/AR only; GL-summary for WIP/FG/COGS). \
\'95	Rate-limit spikes \uc0\u8594  adaptive throttling + DLQ replay windows. \
\'95	Mapping drift (renamed items/accounts) \uc0\u8594  webhook-driven drift detection & reconciliation wizard. \
\'95	Rounding/valuation deltas \uc0\u8594  variance thresholds, JE rounding policies, and reconciliation reports.\
\
14) Open Design Decisions (proposed defaults)\
\'95	Dimensioning: Site \uc0\u8594  Class, Product Line \u8594  Class (secondary), optional Location if the customer prefers Location reporting. \
\'95	COGS timing: default at shipment/invoice; site policy can defer to month-end GL summary. \
\'95	Variance thresholds: start at \'b10.5% of period cost or a floor amount, configurable per org.\
\'95	JE line description: include ERP doc refs (batch/process run/receipt IDs) for traceability.\
\
\
\
\
\
\
\
\
\
FRP-11 \'97 AI (GrowIQ: Anomaly & Yield) + ET\uc0\u8320 -Aware Steering & Predictive Maintenance (MVP)\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.10 AI - GrowIQ (Anomaly, Yield, ET\uc0\u8320  steering) & PdM: predictions (anomaly, yield), ET\u8320 -aware irrigation recommendations using Kc per strain/phase; begin as recommendations with optional auto-apply flag; PdM for pumps/injectors/valves/sensors/HVAC; create work orders above threshold; feedback (explicit/implicit); site confidence thresholds; acceptance incl. auto-apply only when confidence \u8805  threshold, PdM AUC \u8805 0.75 with \u8805 6 months of data, and observed downtime reduction in pilots.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Context: Builds on telemetry (FRP-05), irrigation (FRP-06), inventory/processing (FRP-07/08), compliance controls (FRP-09), and platform governance (FRP-01). Hardware inputs/actuation come via HSES12/HSEA24 and the Edge Brain. \
\
1) Purpose & Scope\
Deliver production-safe AI that improves outcomes and efficiency while staying inside site policies:\
\'95	Anomaly detection across environment, substrate, flow/pressure, drain, and run compliance (dryback, targets).\
\'95	Yield forecasting at batch/room horizons with confidence and contributing factors.\
\'95	ET\uc0\u8320 -aware irrigation recommendations using crop coefficients (Kc) per genetics/phase (recommendations first; optional auto-apply behind policy flag).\
\'95	Predictive maintenance (PdM): failure/drift risk for pumps/injectors/valves/sensors/HVAC; open work ordersabove threshold.\
\'95	Feedback loops (explicit accept/override; implicit via edits); site-level confidence thresholds controlling auto-apply and escalation. \
Out of scope (MVP): full Autosteer MPC (joint irrigation+climate+lighting) and Harvestry Copilot; both are future phases in the PRD. \
\
2) Personas & Primary Use Cases\
\'95	Head of Cultivation: sees yield forecasts & irrigation recommendations per batch/room; gate auto-apply policy. \
\'95	Facilities/Ops: triage anomalies; act on PdM alerts; plan maintenance with work orders. \
\'95	Compliance Officer: ensure auto-apply and overrides respect ABAC/two-person rules. \
\'95	Executives: track realized uplift (yield, gram/watt) and downtime reduction. \
\
3) Functional Requirements\
3.1 Anomaly Detection (GrowIQ-Anom)\
\'95	Signals: environment (Temp/RH/VPD/CO\uc0\u8322 /PPFD), substrate (VWC/EC/pH/temp), drain volume/EC/pH, linepressure/flow, program conformance (dryback vs target), and device health. \
\'95	Detectors: streaming & short-horizon windowing with season/phase normalization; per-zone, per-room, and per-batch contexts.\
\'95	Actions: raise anomaly cards with reason codes (e.g., \'93dryback lag\'94, \'93no-flow after open\'94), severity, confidence, and suggested next steps (task or schedule tweak).\
\'95	Noise control: dwell/hysteresis and time-of-day adjustments match alerting posture (FRP-05). \
3.2 Yield Forecasting (GrowIQ-Yield)\
\'95	Forecast harvest weight and gram/watt at batch/room, using genetics/phenotype, lifecycle plan (FRP-04), propagation metrics, environment conformance, irrigation history, and process history (where applicable).\
\'95	Outputs: prediction (mean, P10/P90), top factors list (human-readable), confidence, and what-if deltas for common levers (e.g., tighten VPD band).\
\'95	Use: feeds planner and executive KPIs (Analytics/Reporting). \
3.3 ET\uc0\u8320 -Aware Steering (GrowIQ-ET\u8320 )\
\'95	Compute ET\uc0\u8320  inputs and apply crop coefficients (Kc) per genetics/phase to recommend shot frequency/sizeand day/night adjustments.\
\'95	Start as recommendations shown in Program Builder/Run Monitor; optional auto-apply behind feature flag and site confidence threshold. \
\'95	Safety: recommendations must pass interlocks and policy guardrails (bounds, max runtime, curfews), with explicit audit if overridden (FRP-06). \
3.4 Predictive Maintenance (GrowIQ-PdM)\
\'95	Targets: pumps, injectors, valves (coil/seat), flow meters, pressure transmitters, EC/pH probes, HVAC units.\
\'95	Features: usage counters (runtime, cycles), fault history, flow/pressure variance, coil current (if available), environment stress, and maintenance logs.\
\'95	Outputs: failure/drift probability & time-to-risk, with work order auto-creation above threshold; link to spare parts & SOP. \
\'95	Acceptance (PRD): AUC \uc0\u8805  0.75 after \u8805  6 months data; document downtime reduction at pilot sites. \
3.5 Feedback & Governance\
\'95	Explicit feedback: \'93Accept / Edit / Reject\'94 on each recommendation; reason code required on overrides.\
\'95	Implicit feedback: inferred from operator edits to schedules/targets within a learning window.\
\'95	Confidence policies: per-site thresholds gate auto-apply; two-person signoff for high-risk toggles (closed-loop enable, override limits). \
3.6 Promotion Path (safety)\
\'95	Shadow \uc0\u8594  A/B \u8594  Enable: models start in shadow (score only), then A/B on selected zones, then enable(auto-apply allowed) when confidence \u8805  site threshold and no policy breaches over a defined window. \
\
4) Data Model (key tables)\
Site-scoped with RLS unless noted; table names align to CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.10 (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
ai_predictions\
\'95	id, site_id, type (anomaly|yield|et0|pdm), scope_type (batch|room|zone|equipment), scope_id, model_id, version, predicted_at, payload_json (value, bands, factors, recommendations), confidence, status (shadow|ab_test|enabled)\
ai_feedback\
\'95	id, site_id, prediction_id, user_id, action (accept|edit|reject|auto_apply), reason_code?, delta_json?, ts\
feature_logs\
\'95	id, site_id, model_id, ts, feature_vector_json, data_window, lineage (stream/rollup ids), quality_flags\
crop_coefficients (org-scoped, overridable at site)\
\'95	id, org_id, genetics_id, phenotype_id?, phase (veg|flower|\'85), Kc_value, seasonality?, effective_at, notes\
et0_inputs\
\'95	id, site_id, room_id?, zone_id?, bucket_ts, inputs_json (e.g., radiation proxy, temp, RH, airflow), source (sensor|calc), quality\
equipment_usage_counters\
\'95	id, site_id, equipment_id, metric (runtime_hours|starts|open_seconds|\'85), value, window_start, window_end\
equipment_failures\
\'95	id, site_id, equipment_id, failure_class (pump|valve|probe|hvac), occurred_at, details_json (fault codes, symptoms)\
maintenance_predictions\
\'95	id, site_id, equipment_id, model_id, predicted_at, failure_prob, drift_prob?, horizon_days, recommendation(inspect|replace|calibrate), confidence\
maintenance_work_orders (or generate Tasks with type=maintenance)\
\'95	id, site_id, equipment_id, source_prediction_id, status (open|scheduled|done|canceled), priority, due_at, assignee_team_id?, links (SOP, parts), created_by (system|user), created_at\
model_registry (org-scoped)\
\'95	id, name, use_case (anom|yield|et0|pdm), version, training_data_range, metrics_json (AUC/RMSE/precision@k), status (shadow|ab|enabled|retired)\
\
5) API Surface (REST + Realtime)\
Predictions & Recs\
\'95	GET /v1/ai/predictions?site_id=\'85&type=\'85&scope=zone:\'85|batch:\'85\
\'95	POST /v1/ai/recommendations/apply (prediction_id) \uc0\u8594  ABAC + interlocks check (if actuation)\
\'95	POST /v1/ai/feedback (prediction_id, action, reason?, delta?)\
ET\uc0\u8320  & Kc\
\'95	PUT /v1/ai/et0-inputs (internal writers)\
\'95	PUT /v1/ai/crop-coefficients (org/site scope; versioned)\
PdM\
\'95	GET /v1/ai/maintenance/predictions?equipment_id=\'85\
\'95	POST /v1/ai/maintenance/work-orders (create from prediction)\
Model Ops\
\'95	POST /v1/ai/models/:id/promotion (shadow\uc0\u8594 ab\u8594 enabled)\
\'95	GET /v1/ai/models/:id/metrics (AUC/RMSE/drift)\
Events (WS/SSE)\
\'95	ai.prediction.created/updated, ai.recommendation.applied, ai.pdm.alert, ai.model.promotion\
All mutators accept Idempotency-Key; actuation paths reuse the outbox and interlock checks from FRP-06. \
\
6) UX Flows\
1.	Anomaly Triage\
o	Card with metric traces + target band overlay, reason code, confidence, and \'93Create Task\'94 or \'93Tune Thresholds\'94 links.\
2.	Yield Panel (Batch View)\
o	Forecast band (P10-P90), top factors, and what-if sliders; export to Planning.\
3.	ET\uc0\u8320  Recommendations in Program Builder\
o	Inline \'93AI Suggests\'94 panel: recommended windows/shot sizes, expected dryback; Apply (policy-gated) or Stage as Draft.\
4.	PdM Queue\
o	Ranked list by failure probability \'d7 criticality; \'93Open Work Order\'94 creates maintenance task(s) with SOP and parts list attached.\
5.	Feedback & Promotion\
o	Accept/Edit/Reject controls; Confidence trends and promotion checklist (shadow \uc0\u8594  A/B \u8594  enabled) with site threshold status. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at site scope for predictions, feedback, usage & failures; org-scoped for model registry & Kc defaults.\
\'95	ABAC: auto-apply toggles, interlock bypass, and closed-loop enable require allow; two-person signoff where policy demands. \
\'95	Audit hash chain captures recommendation applications, overrides, promotions, and PdM work-order creation. \
\
8) Observability, SLOs & Model QA\
\'95	SLOs: online scoring p95 < 300 ms; event bus fan-out p95 < 1.5 s (shared realtime target); site-day AI report p95 < 90 s. \
\'95	Model QA:\
o	PdM: AUC \uc0\u8805  0.75 @ 6-month window (acceptance).\
o	Yield: RMSE/MAE vs holdout; calibration plots monthly.\
o	Anomaly: precision@k & alert fatigue metrics.\
\'95	Drift & Health: population drift monitors on feature logs; alarm on metric degradation; safe auto-rollback to shadow.\
\
9) Acceptance Criteria (MVP)\
1.	Recommendations & Auto-apply Policy\
o	ET\uc0\u8320 /Kc recommendations are produced; auto-apply only when confidence \u8805  site threshold and interlocks/ABAC pass. \
2.	PdM Quality & Outcome\
o	PdM models achieve AUC \uc0\u8805  0.75 after \u8805  6 months of data; pilot reports show downtime reduction with work-order follow-through. \
3.	Feedback Loop\
o	Explicit Accept/Edit/Reject and implicit edits are recorded; subsequent suggestions reflect learned preferences (site-scoped confidence curves). \
4.	Governance & Audit\
o	All applied suggestions, overrides, and promotions are recorded in the audit hash chain; two-person flows honored where configured. \
\
10) Testing Strategy\
\'95	Unit: anomaly detectors (dwell/hysteresis), ET\uc0\u8320 /Kc scaling math, yield feature assembly, PdM risk aggregation, confidence gating.\
\'95	Contract: prediction fetch/apply; feedback writes; promotion state machine; ABAC + interlocks enforced on apply.\
\'95	Integration/E2E: telemetry \uc0\u8594  anomaly \u8594  task; batch plan \u8594  yield forecast \u8594  harvest compare; irrigation program \u8594  ET\u8320  rec \u8594  (draft/apply) \u8594  dryback check; PdM \u8594  work order \u8594  completion \u8594  downtime KPI.\
\'95	Model QA: offline cross-validation; rolling backtests; drift alarms; shadow \uc0\u8594  A/B \u8594  enable gates with SLOs on scoring & events. \
\
11) Dependencies & Integration Points\
\'95	FRP-05 Environment: signals, targets, alerts, rollups (features). \
\'95	FRP-06 Irrigation: schedules/steps/interlocks; recommendation apply path (outbox + acks). \
\'95	FRP-02 Spatial/Equipment: usage counters & faults; valve/pump identity. \
\'95	FRP-04 Tasks/Messaging: anomaly tasks, PdM work orders, Slack notifications. \
\'95	FRP-08 Processing: yield labels & downstream effects. \
\'95	FRP-15 Notifications: Slack for all; SMS Critical per site policy. \
\
12) Migration & Rollout\
\'95	Enable data capture & feature logs; backfill usage counters from equipment events.\
\'95	Ship Anomaly and Yield in shadow for 2-4 weeks; tune thresholds.\
\'95	Roll ET\uc0\u8320  as recommendations; later allow auto-apply on selected zones at sites that meet confidence & policy gates.\
\'95	Start PdM training; publish first risk scores after sufficient history; pilot work-order flow with Facilities.\
\
13) Risks & Mitigations\
\'95	Over-automation risk: strict confidence gates, ABAC + two-person signoff, and shadow\uc0\u8594 A/B\u8594 enablepromotion flow. \
\'95	Alert fatigue: anomaly precision tuning, dwell/hysteresis, and feedback-driven threshold updates (with audit).\
\'95	Data drift / sensor faults: quality flags from ingest (FRP-05), automatic feature masking, and drift monitors. \
\'95	Model trust: explainability (top factors) + side-by-side counterfactual previews before apply.\
\
14) Open Design Decisions (proposed defaults)\
\'95	ET\uc0\u8320  cadence: compute hourly; summarize daily for planning; allow site override of Kc by genetics\'d7phase.\
\'95	Auto-apply defaults: off by default; enable per zone/group only after 14-day shadow with \uc0\u8805 N accepted actions and zero guardrail breaches.\
\'95	PdM work-order binding: create Tasks (type=maintenance) by default; keep maintenance_work_orders as thin view for reporting.\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
FRP-12 \'97 Sustainability & ESG (WUE/NUE, Energy & CO\uc0\u8322  Intensity, Runoff/Recirculation) \'97 MVP\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.11 Sustainability & ESG \'97 Must: WUE, NUE, runoff ratio, recirculation rate, kWh/gram, CO\uc0\u8322  intensity (gCO\u8322 e/gram); support energy meters and regional emission factors; deliver sustainability reports. Acceptance: Weekly WUE/NUE/kWh/gram report with \'b12% reconciliation vs meters/inventory. Data entities: energy_meters, energy_readings, emissions_factors, sustainability_reports; enrich irrigation_* with delivered/runoff. Storage: Timescale hypertables + continuous aggregates.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Hardware context: energy/water meters integrate via RS-485/Modbus, 4-20 mA, pulse\'97all native to HSES12 EdgeSense; runoff/flow/level sensed via HSEA24/EdgeSense channels. (RS-485 & pulse/analog I/O shown in EVT specs.) \
\
1) Purpose & Scope\
Establish a production-grade ESG layer that calculates, reconciles, and reports sustainability KPIs:\
\'95	Inputs: irrigation delivery & drain volumes, nutrient consumption, energy submetering, site mains meters, and regional emission factors.\
\'95	Outputs: WUE, NUE, Runoff ratio, Recirculation rate, kWh/gram, CO\uc0\u8322  intensity per batch / room / site / period with roll-ups; weekly ESG reports with reconciliation against physical meters & inventory. \
\
2) Personas & Primary Use Cases\
\'95	Head of Cultivation: track WUE/NUE by genetics/room; verify irrigation strategy effects. \
\'95	Facilities/Ops: configure meters, ensure data freshness, investigate variance vs mains. \
\'95	Executives/ESG Managers: receive weekly/periodic reports; benchmark kWh/gram and CO\uc0\u8322  intensity across sites. \
\
3) Functional Requirements\
3.1 Metrics & Formulas (authoritative)\
\'95	WUE (Water-Use Efficiency):\
WUE=dry biomass (g)net water consumed (L)WUE=net water consumed (L)dry biomass (g)\uc0\u8203 \
where dry biomass comes from harvest/processing outputs; net water consumed = delivered (irrigation step volumes) \uc0\u8722  recirculated reuse (measured) \'b1 other uses allocations. (Report all components; reconciliation to mains in \'a73.4.) \
\'95	NUE (Nutrient-Use Efficiency):\
NUE=dry biomass (g)nutrients applied (g)NUE=nutrients applied (g)dry biomass (g)\uc0\u8203 \
Nutrients applied computed from recipe vN (ml/L or g/L \'d7 delivered L) with density factors and lot consumption from FRP-06. \
\'95	Runoff ratio = drain volumedelivered volumedelivered volumedrain volume\uc0\u8203 ; Recirculation rate = recaptured volume actually reuseddrain volumedrain volumerecaptured volume actually reused\u8203 . (Both reported per zone/group/room/site.) \
\'95	kWh/gram = energy (kWh)dry biomass (g)dry biomass (g)energy (kWh)\uc0\u8203  using submetered lighting/HVAC/pumps (sum if partial) or mains allocation. \
\'95	CO\uc0\u8322  intensity (gCO\u8322 e/gram):\
\uc0\u8721 energyEnergyi\'d7EFidry biomass (kg)\'d71000dry biomass (kg)energy\u8721 \u8203 Energyi\u8203 \'d7EFi\u8203 \u8203 \'d71000\
where EF comes from emissions_factors (kgCO\uc0\u8322 e/kWh or per fuel), with location-based factor by site region (market-based optional later). \
3.2 Data Sources & Enrichment\
\'95	Irrigation delivery/drain: from irrigation_step_runs (delivered volumes) and drain meters (pulse/analog) bound to zones/groups. \
\'95	Nutrients: FRP-06 recipe usage + stock deductions \uc0\u8594  per-component grams. \
\'95	Energy: energy_meters (type, scope), energy_readings (kWh); allow submeter (panel/room) or mains with allocation rules. \
\'95	Emission factors: emissions_factors keyed by region + effective date (location-based grid factor). \
3.3 Meter Integration (Edge)\
\'95	HSES12 accepts RS-485/Modbus, 4-20 mA, and pulse for common energy/water meters; map streams to rooms/zones/panels; persist via sensor_readings. \
\'95	HSEA24 supplies flow pulses, pressure, tank level, and interlocks used to validate irrigation volumes & runoff measurements. \
3.4 Reconciliation (\'b12% Acceptance)\
\'95	Water reconciliation: For each site-week, compute Mains Water (site meter) vs Operational Water (\uc0\u931  irrigation delivered \u8722  recirculated + other measured uses). Flag variance and require note if \u8739 \u916 \u8739 >2%\u8739 \u916 \u8739 >2%. \
\'95	Energy reconciliation: If using submeters, sum against mains; if partial submetering, allocate remainder by room area or connected load and show basis. \
3.5 Reporting & Schedules\
\'95	Weekly ESG report (site TZ): WUE, NUE, runoff, recirculation, kWh/gram, CO\uc0\u8322  intensity \'97 by room and site, with reconciliation section and method notes; auto-emailed; artifacts stored per retention. \
\'95	Period/quarter summaries included in Analytics (FRP-13); exports CSV/XLSX/PDF. \
3.6 Governance & Transparency\
\'95	Every metric shows inputs and assumptions (density factors, allocations, emission factor version); changes are audited with diffs. \
\
4) Data Model (key tables)\
Site-scoped with RLS; Timescale hypertables for high-rate series; leverages existing telemetry/irrigation series. \
energy_meters\
\'95	id, site_id, code, name, type (electricity|gas|other), scope (site|room|panel|equipment), panel_id?, protocol(modbus|pulse|analog), unit (kWh|Wh|m\'b3|therm), install_date, active\
energy_readings (Timescale)\
\'95	meter_id, ts, value, unit, quality (ok/range_violation/stale), meta (ct_ratio, scaling), ingest_latency_ms\
emissions_factors (org-scoped library + site override)\
\'95	id, region_code, energy_type (electricity|gas), factor_kgco2e_per_unit (per kWh or therm), source, effective_at, notes\
sustainability_overrides\
\'95	id, site_id, key (density|allocation|ef_region), value_json, effective_at, author_user_id\
sustainability_reports\
\'95	id, site_id, period_start, period_end, metrics_json (by site/room), reconciliation_json (mains vs operational deltas), status (draft/final), artifact_urls[], generated_at\
Enrichment: irrigation_step_runs (delivered L) and drain/flow streams are already in Timescale per PRD (\'a76). \
\
5) API Surface (REST + Realtime)\
Meters & Factors\
\'95	POST /v1/esg/energy-meters (modbus|pulse|analog config)\
\'95	POST /v1/esg/energy-readings (ingest; producers only)\
\'95	POST /v1/esg/emissions-factors (admin/library; site overrides)\
Metrics & Reports\
\'95	GET /v1/esg/metrics?site_id=\'85&range=\'85&group_by=site|room|batch\
\'95	POST /v1/esg/reports/generate (period, site_id) \uc0\u8594  creates sustainability_reports + files\
\'95	GET /v1/esg/reports/:id (artifact links, reconciliation details)\
Realtime\
\'95	WS /v1/esg/stream?site_id=\'85 (freshness, variance, running WUE/NUE) \'97 shares platform realtime SLOs.\
All mutating endpoints accept Idempotency-Key (global pattern).\
\
6) UX Flows\
1.	Meter Setup Wizard\
o	Choose protocol (Modbus/pulse/analog), map to scope (room/panel/site), set scaling & CT ratios, test live read; save & start ingest. \
2.	ESG Dashboard\
o	Tiles for WUE, NUE, runoff, recirculation, kWh/gram, CO\uc0\u8322  intensity with trend vs last period; variance chips if reconciliation >2%.\
3.	Reconciliation Panel\
o	Side-by-side: Mains vs Operational (stacked bars: irrigation, recirculated, RO reject, humidification, cleaning); delta % with note/approval.\
4.	Weekly Report (Preview \uc0\u8594  Publish)\
o	Draft shows metrics + methods + emission factor source; publish emails PDF/CSV and stores artifacts; audit trail captures diffs. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at site scope on meters/readings/reports; org-scoped EF library read.\
\'95	ABAC: changing emission factors, allocation rules, density factors, or publishing reports can require approver (Compliance/Executive) with optional two-person signoff.\
\'95	All changes & publications are hash-chained in audit logs (nightly verification). \
\
8) Observability & SLOs\
\'95	SLOs: ingest device\uc0\u8594 store p95 < 1.0 s (shared with telemetry); report generation p95 < 90 s (site-day/period reports). \
\'95	Metrics: meter_freshness_seconds, recon_variance_pct, esg_report_latency_ms, ef_version_usage\{site\}.\
\'95	Alerts: meter offline, stale data, reconciliation >2%, EF library mismatch.\
\
9) Acceptance Criteria (MVP)\
1.	Weekly ESG Report\
o	System generates weekly WUE/NUE/kWh/gram report per site with reconciliation \uc0\u8804  \'b12% vs meters/inventory (or flagged with reason when outside). (PRD acceptance)\
2.	Runoff & Recirculation\
o	Drain and recirculation metrics computed from instrumented flows; appear by room/zone and roll up to site. \
3.	CO\uc0\u8322  Intensity\
o	Reported using regional emission factors with version/date; method/assumptions displayed. \
4.	Data Freshness & Auditability\
o	Meter streams have freshness indicators; all factor/allocation edits, and report publications are audited with diffs. \
\
10) Testing Strategy\
\'95	Unit: WUE/NUE math; runoff/recirculation; kWh/gram; CO\uc0\u8322  calc w/ EF versions; allocation engines; density conversions.\
\'95	Contract: meter CRUD & ingest; metrics query; report generation; EF overrides; idempotent writes.\
\'95	Integration/E2E: irrigation deliveries/drain + recipe usage \uc0\u8594  WUE/NUE; energy meters \u8594  kWh/gram; EF selection \u8594  CO\u8322  intensity; weekly report \u8594  email + artifacts with reconciliation envelope. \
\'95	Resilience: meter offline/backfill; clock skew & scaling errors; variance >2% path (explain & approve).\
\
11) Dependencies & Integration Points\
\'95	FRP-06 Irrigation & Fertigation: delivered/drain volumes; nutrient usage from recipes & stock deductions. \
\'95	FRP-08 Processing: dry biomass (finished goods) for denominators; cost views for context. \
\'95	FRP-13 Analytics & Reporting: dashboards & scheduled exports. \
\'95	FRP-05 Environment: optional overlays (e.g., conformance vs WUE/NUE trends). \
\
12) Migration & Rollout\
\'95	Configure emission factor region for each site and seed default EF library; set density factors for common nutrients. \
\'95	Onboard mains and available submeters (lighting/HVAC/pumps); validate live reads via HSES12 RS-485/pulse. \
\'95	Enable weekly report schedule; run 2-3 cycles in draft to calibrate allocations and reconciliation.\
\
13) Risks & Mitigations\
\'95	Partial submetering \uc0\u8594  transparent allocation rules with notes; highlight unmetered fraction.\
\'95	EF drift (region updates) \uc0\u8594  versioned EF library; report shows EF version/date; require approver to change. \
\'95	Noisy drain sensors \uc0\u8594  dwell/hysteresis & plausibility checks; reconcile against delivered volumes.\
\'95	Data gaps \uc0\u8594  freshness monitors, backfill jobs, and \'93estimate with confidence band\'94 flags.\
\
14) Open Design Decisions (defaults)\
\'95	Denominators: default to dry biomass (post-cure) for WUE/NUE/kWh/gram; allow wet view as supplemental.\
\'95	EF policy: start location-based (grid average by region); market-based with REC accounting is Phase-2.\
\'95	Allocation: if only mains energy present, split by connected load proportions; alternative: room area fallback, both recorded in method notes.\
\
\
\
\
\
\
\
\
\
FRP-13 \'97 Analytics & Reporting (Dashboards, Saved Reports, Schedules, OLAP Sidecar, optional Read-only GraphQL) \'97 MVP\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.12 Analytics & Reporting \'97 Must: KPIs (yield/strain/room/sf, gram/watt, irrigation KPIs, environment conformance, alert MTTR, WUE/NUE, financial summaries), saved reports, scheduled CSV/XLSX/PDF (email), materialized views/rollups, multi-site boards, optional read-only GraphQL with persisted queries & complexity limits. Acceptance: scheduled exports run on cron (site timezone); artifacts retained per policy; dashboard p95 < 2 s for common ranges. Non-functional SLOs include site-day report p95 < 90 s.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
Data architecture alignment: Hot store Postgres + Timescale (hypertables & continuous aggregates) and ClickHouse OLAP sidecar when triggers hit; S3/Parquet archive. \
\
1) Purpose & Scope\
Deliver a first-class analytics layer that makes operational and financial performance visible, explainable, and repeatable:\
\'95	Dashboards (multi-site capable) for live KPIs across cultivation, irrigation, environment, processing, compliance, ESG, and finance.\
\'95	Saved reports that can be scheduled to email CSV/XLSX/PDF artifacts, honoring site timezones and retention.\
\'95	Query engine built on Timescale continuous aggregates for hot windows and an OLAP sidecar (ClickHouse)when scale triggers fire.\
\'95	Optional read-only GraphQL for self-serve reads using persisted queries with complexity limits. \
\
2) Personas & Use Cases\
\'95	Executives: Multi-site boards (yield, gram/watt, WUE/NUE, COGS), email digests. \
\'95	Head of Cultivation: conformance (targets vs actual), irrigation KPIs (dryback hit rate, aborts), alert MTTR. \
\'95	Processing Manager: WIP yields, loss reasons, labor minutes per unit. \
\'95	Compliance Officer: COA holds, destruction logs, regulator sync health. \
\'95	Finance/Controller: Receiving\uc0\u8594 Bills match, WIP\u8594 FG & COGS summaries, variance tiles. \
\
3) Functional Requirements\
3.1 Dashboards (real-time aware, multi-site)\
\'95	Widgets: time-series, KPI tiles, tables, heatmaps; common presets for environment conformance, irrigation KPIs, alert MTTR, yield, gram/watt, sustainability KPIs, financial summaries. \
\'95	Filters: site, room, zone, genetics/phenotype, batch, time range; multi-site mode aggregates across selected sites. \
\'95	Performance target: p95 < 2 s for common ranges (e.g., last 7-14 days). \
3.2 Saved Reports & Schedules\
\'95	Create saved reports from any dashboard view or standalone query; add schedules (cron-style) to email CSV/XLSX/PDF to roles/mailing lists.\
\'95	Site timezone respected for date boundaries; artifacts stored with retention and linked from runs. Acceptance requires cron delivery in site TZ. \
3.3 Data Model Standards & Metric Registry\
\'95	A metrics registry defines canonical formulas and dimensions (e.g., WUE, NUE, gram/watt, MTTR), each with unit, time grain, and lineage.\
\'95	Explainability: every widget/report can show \'93Explain this number\'94 \uc0\u8594  sources (tables/rollups), filters, and calculation steps.\
3.4 Storage & Compute\
\'95	Timescale hypertables (e.g., sensor_readings, irrigation_step_runs) and continuous aggregates(1m/5m/1h) power day-to-day reads.\
\'95	ClickHouse sidecar enables long-horizon, multi-site analytics when any trigger fires (fleet ingest rate, 6-month query, dashboard refresh p95 > 5 s, etc.). \
3.5 Optional Read-only GraphQL (Safe Self-serve)\
\'95	Persisted queries only (no ad-hoc); each has a complexity score and must declare RLS scopes; disabled by default per org.\
\'95	Supports dashboard embedding and partner read-only access. \
3.6 Artifacts & Retention\
\'95	Report runs produce immutable artifacts (CSV/XLSX/PDF) with metadata: site TZ, parameters, data version; retained per org/site policy and anchored in audit. \
3.7 Reliability & SLOs\
\'95	Site-day report generation p95 < 90 s (platform SLO); retries/backoff; failure notifications via Notifications module (Slack/email; SMS if Critical per site policy). \
\
4) Data Model (key tables)\
Site-scoped with RLS unless noted; aligns with PRD data architecture. \
dashboards\
\'95	id, org_id, name, scope (org|site|multi_site), layout_json, default_filters, created_by, created_at\
dashboard_widgets\
\'95	id, dashboard_id, type (timeseries|tile|table|heatmap), metric_key, query_ref, position, options_json\
saved_reports\
\'95	id, site_id?, org_id, title, definition_json (metrics, filters, grains), data_source (timescale|clickhouse), owner_user_id, created_at\
report_schedules\
\'95	id, saved_report_id, cron_expr, site_timezone, recipients (roles|emails), format (csv|xlsx|pdf), retention_days, enabled\
report_runs\
\'95	id, saved_report_id, scheduled_at, started_at, ended_at, status, row_count, runtime_ms, artifact_url(s), error?\
metrics_registry\
\'95	id, key, name, unit, grain (raw|1m|5m|1h|day|week), formula_json, lineage_json, owner_team\
persisted_queries (optional GraphQL)\
\'95	id, org_id, name, gql_text, complexity_score, allowed_scopes (site ids), enabled\
cube_materializations\
\'95	id, key, ddl_sql, last_refresh_at, refresh_policy (cron|on_write), footprint_bytes, engine (timescale|clickhouse)\
data_dictionary\
\'95	id, metric_key, description, business_rules, owners, last_reviewed_at\
report_artifacts (if artifacts not stored inline in report_runs)\
\'95	id, run_id, type (csv|xlsx|pdf), url, checksum, size_bytes, expires_at\
clickhouse_status (org-scoped)\
\'95	id, org_id, enabled, trigger_reason, since_at\
\
5) API Surface (REST + Realtime)\
Dashboards & Widgets\
\'95	GET /v1/analytics/dashboards?org_id=\'85 / POST /v1/analytics/dashboards\
\'95	POST /v1/analytics/dashboards/:id/widgets (bulk upsert)\
\'95	GET /v1/analytics/metrics-registry (catalog)\
Saved Reports & Schedules\
\'95	POST /v1/reports (definition_json, data_source)\
\'95	POST /v1/reports/:id/schedules (cron, TZ, recipients, format, retention_days)\
\'95	POST /v1/reports/:id/run (adhoc) / GET /v1/report-runs?report_id=\'85\
Artifacts\
\'95	GET /v1/report-runs/:run_id/artifacts (signed links)\
GraphQL (optional)\
\'95	POST /v1/ro-graphql/:persisted_query_id (variables) \'97 no ad-hoc endpoint; persisted only. \
Events (WS/SSE)\
\'95	analytics.report.run.started/completed/failed, analytics.dashboard.refresh\
All mutating endpoints accept Idempotency-Key; report execution uses an outbox pattern for email delivery & artifact publishing. \
\
6) UX Flows\
1.	Board Builder (Exec view)\
o	Start from template (Cultivation/Facilities/Processing/Finance/ESG). Add widgets; set multi-site filters; save as Org board. p95 < 2 s refresh target. \
2.	Save & Schedule a Report\
o	Pick grain/range & filters; preview data; \'93Schedule\'94 \uc0\u8594  cron + TZ + recipients + format + retention \u8594  confirm. Artifacts link back to the exact definition/version.\
3.	Explain This Number\
o	Widget action opens the lineage drawer: registry entry, formula, source tables (rollups/materializations), filters used.\
4.	Self-serve (Optional GraphQL)\
o	Org enables read-only GraphQL; admins register persisted queries with complexity score and allowed scopes; users call via signed endpoint. \
5.	Failure Handling\
o	If a scheduled run fails, Notifications module posts Slack/email (SMS if Critical), with retry & DLQ diagnostics. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at org/site scope across dashboards, saved reports, runs, and artifacts; multi-site boards require role grants.\
\'95	ABAC guards heavy exports, GraphQL enablement, and cross-site reads; optional two-person for enabling OLAP sidecar or GraphQL per org policy.\
\'95	All changes and run outcomes are hash-chained in audit logs with nightly verification/WORM anchoring. \
\
8) Observability & SLOs\
\'95	SLOs: dashboard refresh p95 < 2 s (common ranges), site-day report p95 < 90 s; alert on regressions. \
\'95	Metrics: dashboard_load_ms, report_runtime_ms, report_queue_depth, artifact_size_bytes, clickhouse_triggered_total, graphql_complexity_drops_total.\
\'95	Triggers: enable ClickHouse upon any documented trigger (e.g., >200k metrics/min 30+ min; 6-month queries >3 s p95; dashboard refresh >5 s p95). \
\
9) Acceptance Criteria (MVP)\
1.	Scheduled Exports (TZ-correct)\
o	Saved reports run on cron using site timezone; artifacts (CSV/XLSX/PDF) stored per retention policy and linked from run history. (Required)\
2.	Dashboard Performance\
o	Cultivation/Facilities/ESG boards load within p95 < 2 s for common ranges using rollups/materializations. (Required)\
3.	Site-day Report SLO\
o	Site-day report generation meets p95 < 90 s SLO in staging with production-like data. (Required)\
4.	Explainability\
o	\'93Explain this number\'94 shows metric definition, lineage, and filters for all dashboard widgets and saved reports. (Required)\
5.	GraphQL Guardrails\
o	If enabled, only persisted queries execute; complexity limits enforced; RLS scopes honored. (Required when enabled)\
6.	Sales & Fulfillment tiles: Open Orders, Fill Rate, DIFOT, Aged Backorders, Picker Exceptions\'97p95 < 2\uc0\u8201 s on common ranges.\
\
10) Testing Strategy\
\'95	Unit: metric formulas; time-zone boundary handling; registry/lineage builder; cron parser; complexity scorer.\
\'95	Contract: dashboards CRUD; saved report run/schedule; artifact generation (CSV/XLSX/PDF); RLS/ABAC checks; GraphQL persisted query execution.\
\'95	Integration/E2E: ingest \uc0\u8594  rollups \u8594  widgets; saved report \u8594  schedule \u8594  artifact \u8594  email; failure \u8594  retry \u8594  Notifications.\
\'95	Performance: dashboard p95 under load; site-day report p95; ClickHouse triggers & fallback; memory/footprint of materializations. \
\
11) Dependencies & Integration Points\
\'95	FRP-05 Environment & FRP-06 Irrigation: conformance & irrigation KPIs; dryback metrics. \
\'95	FRP-08 Processing & FRP-10 Accounting: yields, labor, WIP/FG & COGS summaries. \
\'95	FRP-12 ESG: WUE/NUE, kWh/gram, CO\uc0\u8322  intensity surfaces. \
\'95	FRP-15 Notifications: email/Slack/SMS delivery for schedules and failures. \
\
12) Migration & Rollout\
\'95	Ship starter boards (Cultivation, Facilities, Processing, ESG, Finance).\
\'95	Enable continuous aggregates and materializations for standard KPIs; tune indices.\
\'95	Run schedules in draft for 1-2 cycles; validate TZ boundaries and artifact retention; then enable org-wide.\
\'95	Monitor SLOs; flip ClickHouse when any trigger conditions are met. \
\'95	Enable Sales starter board (B2B) and default scheduled export (weekly, site TZ).\
\
13) Risks & Mitigations\
\'95	Slow queries / \'93noisy neighbor\'94 \uc0\u8594  rollups/materializations; persisted queries only; complexity limits; auto-trigger OLAP sidecar. \
\'95	Definition drift \uc0\u8594  central metrics registry + data dictionary; \'93Explain this number.\'94\
\'95	Timezone errors \uc0\u8594  explicit site TZ on runs; boundary tests for DST.\
\'95	Access leakage \uc0\u8594  strict RLS, ABAC for cross-site boards; artifact ACLs.\
\
14) Open Design Decisions (proposed defaults)\
\'95	Grains: default 1h for 90-day views; 5m for 7-day; 1m for live tiles.\
\'95	Artifact retention: 180 days (reports), 7 days (large CSV > 250 MB).\
\'95	GraphQL: off by default; when on, only persisted queries with complexity \uc0\u8804  threshold; no introspection in production. \
\
\
\
\
\
\
\
FRP-14 \'97 Autosteer MPC (joint irrigation + climate + lighting) \'97 MVP\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a76.7 Autosteer MPC \'97 jointly optimize irrigation (shot size/frequency, dryback/leachate %, EC targets), climate (VPD band via Temp/RH, CO\uc0\u8322  setpoint/range, dehum/heat hysteresis), and lighting(PPFD/DLI with ramp rates). Inputs: sensor rollups, ET\u8320 , cultivar response curves, equipment capabilities, policy guardrails, blueprint context. Planner: room/zone-level MPC with cost function (yield proxy, stress avoidance, resource costs), supports A/B blocks, emits staged setpoint deltas (preview \u8594  A/B \u8594  full), auto-rollback on guardrail trip. Acceptance: Shadow \u8594  A/B \u8594  Enable flow; plan compliance \u8805 85% over 7 days at pilot; revert \u8804 60 s on guardrail trip. Built atop closed-loop & interlocks scaffolding and the command plane SLOs.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Deliver a production-safe, policy-aware Model Predictive Control layer that:\
\'95	Generates receding-horizon setpoint plans for irrigation, climate, and lighting per room/zone.\
\'95	Respects guardrails (EC/pH bounds, min/max shot interval & daily runtime, CO\uc0\u8322  safety & exhaust locks, Temp/RH/PPFD ramp-rates, quiet hours, interlocks). \
\'95	Rolls out changes staged (Preview \uc0\u8594  A/B \u8594  Full), with Explainability and auto-rollback. \
\'95	Executes over the command plane (outbox, idempotent acks, sagas, safe aborts) within platform SLOs. \
In scope (MVP)\uc0\u8232 Planner + executor for irrigation/climate/lighting; A/B blocks; guardrails & interlocks; preview & explain; plan compliance measurement; rollbacks; UI nudge controls in Control Room; observability & SLOs. \
Out of scope (MVP)\uc0\u8232 Natural-language Copilot and \'93Ask-to-Act\'94 flows (tracked in separate FRP). \
\
2) Personas & Primary Use Cases\
\'95	Head of Cultivation: enable MPC per room; approve promotions Shadow \uc0\u8594  A/B \u8594  Enable; review compliance & yield proxy KPIs. \
\'95	Facilities/Ops: monitor setpoint plans; acknowledge rollbacks; manage interlocks and device capabilities. \
\'95	Operators/Techs: use Control Room \'93Nudge EC/Shot/PPFD/CO\uc0\u8322 /VPD band\'94 with previewed impact and guardrail checks. \
\
3) Functional Requirements\
3.1 Planner (room/zone-level MPC)\
\'95	State vector includes recent rollups (Temp, RH, VPD, CO\uc0\u8322 , PPFD, DLI, VWC, EC/pH, drain), ET\u8320  and cultivar response curves. Control vector spans: shot size/frequency, EC/pH targets, VPD band (Temp/RH setpoints), CO\u8322  setpoint, and PPFD/DLI ramps. \
\'95	Horizon & cadence: configurable (default horizon 12 h, control step 5-15 min) with receding-horizonoptimization each step.\
\'95	Cost function: weighted sum of (i) yield proxy/stress avoidance (stay inside target envelopes), (ii) resource cost (water/energy/CO\uc0\u8322 ), (iii) plan smoothness (ramp penalties), with site-configurable weights. \
\'95	Constraints: hard guardrails from site policies & interlocks (EC/pH min/max, min soak, max daily runtime, CO\uc0\u8322  safety/exhaust lock, Temp/RH/PPFD ramps), device capability limits (dimmer range, HVAC deadbands). \
3.2 Guardrails & Interlocks\
\'95	Evaluate before apply and continuously at runtime; any breach triggers auto-rollback to last safe schedule (\uc0\u8804 60 s target) and opens an alert/task. \
\'95	Guardrails sourced from environment targets/thresholds, irrigation safety policies, and site feature flags(closed-loop, ET\uc0\u8320  steering). \
3.3 Staged Rollout (Preview \uc0\u8594  A/B \u8594  Full)\
\'95	Preview: render deltas vs current plan with forecast bands & risk checks.\
\'95	A/B blocks: apply to selected manifolds/zones; collect compliance & response metrics.\
\'95	Enable: promote automatically when compliance \uc0\u8805  threshold (default 85% over 7 days) and zero guardrail breaches; otherwise stay in A/B. \
3.4 Execution & SLOs\
\'95	All device commands are sent via outbox; require acks within command SLO (enqueue\uc0\u8594 ack p95 < 800 ms). Failed steps follow saga compensations; interlocks \u8594  safe abort. \
\'95	Realtime push of plan step status meets p95 < 1.5 s to clients. \
3.5 Explainability & \'93Nudge\'94\
\'95	Every plan carries an explainability record (top factors, constraint binders, expected deltas).\
\'95	Control Room exposes one-key Nudges (e.g., \'93+50 \'b5mol PPFD for 4 h\'94, \'93tighten VPD +0.1 kPa\'94) with inline guardrail simulation and revert. \
3.6 Safety & Fallback\
\'95	Auto-rollback to last safe plan on guardrail trip, device fault, or link loss; local failsafes and interlocks continue to protect actuators; MPC pauses until acknowledged. \
\'95	Quiet hours respected for lighting & noisy HVAC changes (site policy). \
3.7 Policy & Feature Flags\
\'95	Site-level flags gate MPC enablement and closed-loop behaviors (e.g., closed_loop_ecph_enabled, et0_steering_enabled, ai_auto_apply_enabled). \
\
4) Data Model (key tables)\
New MPC tables extend Monitoring & Control entities (targets/overrides, control_loops, interlocks) defined in the PRD. \
mpc_profiles\
\'95	id, site_id, scope (room|zone), objective_weights jsonb (yield, resource, smoothness), default_horizon_minutes, step_seconds, ramp_limits, enabled\
mpc_capabilities\
\'95	id, site_id, scope, hvac_capabilities (bands, ramp/min/max), lighting_capabilities (min/max PPFD, ramp), irrigation_capabilities (max runtime, min soak, valves), co2_capabilities (min/max, exhaust lock ref)\
mpc_plans\
\'95	id, site_id, scope, generated_at, horizon_end, status (preview|ab|enabled|rolled_back), explainability_json, author (system|user)\
mpc_plan_steps (hypertable)\
\'95	plan_id, step_ts, setpoints_json (Temp/RH/CO\uc0\u8322 /PPFD/shot/EC/pH), constraints_active[], expected_bands_json, applied (bool), ack_meta\
mpc_trials\
\'95	id, plan_id, trial_type (ab|full), cohort (zones/manifolds), start_at, end_at?, compliance_pct, guardrail_breaches, promotion_candidate (bool)\
mpc_rollbacks\
\'95	id, site_id, plan_id, reason_code (guardrail|fault|link_loss|manual), triggered_at, completed_at, last_safe_ref, actor\
mpc_policies\
\'95	id, site_id, thresholds (compliance_target=0.85, revert_seconds=60), quiet_hours, approval_rules (ABAC roles)\
Reuse: control_loops, interlocks, environment_targets/overrides, alert_thresholds from Monitoring & Control. \
\
5) API Surface (REST + Events)\
Profiles & Capabilities\
\'95	POST /v1/mpc/profiles (scope, weights, horizon, step, ramps)\
\'95	POST /v1/mpc/capabilities (per scope; device constraints)\
Plan & Trial\
\'95	POST /v1/mpc/plan (scope, preview_only? true|false) \uc0\u8594  returns plan + explainability\
\'95	POST /v1/mpc/plan/:id/ab (cohort) \uc0\u8594  start A/B trial\
\'95	POST /v1/mpc/plan/:id/enable \uc0\u8594  ABAC + feature flags check\
\'95	POST /v1/mpc/plan/:id/rollback (reason) \uc0\u8594  executes safe fallback\
Nudges\
\'95	POST /v1/mpc/nudge (scope, deltas, duration) \uc0\u8594  simulate \u8594  apply if safe\
Policies & Flags\
\'95	PUT /v1/mpc/policies (thresholds, quiet hours, approvals)\
Events (WS/SSE)\
\'95	mpc.plan.created/updated, mpc.trial.started/completed, mpc.rollback.triggered/completed, mpc.guardrail.trip\
All mutators ride the outbox/ack command plane and interlock checks.\
\
6) UX Flows\
1.	Control Room (Preview \uc0\u8594  Apply)\
o	Show plan overlays on live charts with target bands; \'93Apply as A/B\'94 or \'93Apply Full\'94; guardrail checklist; expected deltas. \
2.	A/B Trial Manager\
o	Select manifolds/zones; monitor compliance %, breaches, and impact deltas; one-click Promote when thresholds pass. \
3.	Rollback & Post-mortem\
o	On trip: banner + countdown to auto-rollback; after rollback, show cause, constraint binder, and suggested fixes. \
4.	Nudge Panel\
o	Quick adjustments (EC/shot/PPFD/CO\uc0\u8322 /VPD band) with simulation; apply if safe; automatically captured as explainability. \
\
7) Security, RLS/ABAC & Audit\
\'95	RLS at site/room/zone scope for profiles, plans, steps, trials, rollbacks.\
\'95	ABAC on Enable, Rollback (manual), and policy changes (two-person optional).\
\'95	All plan applications, rollbacks, and policy edits are hash-chained in global audit with nightly verification / optional WORM anchoring. \
\
8) Observability & SLOs\
\'95	Command dispatch SLO: enqueue\uc0\u8594 ack p95 < 800 ms; Realtime push p95 < 1.5 s; site-day report p95 < 90 s. \
\'95	KPIs: mpc_plan_compliance_pct, mpc_guardrail_breaches_total\{type\}, mpc_rollbacks_total\{reason\}, ack_latency_ms, ab_trial_promotion_rate, nudge_apply_total.\
\'95	Runbooks: Closed-loop drift \uc0\u8594  auto fallback & approval to re-enable; Controller offline / link loss. \
\
9) Acceptance Criteria (MVP)\
1.	Promotion Flow\
o	Shadow \uc0\u8594  A/B \u8594  Enable works end-to-end with ABAC + feature flags; promotion blocked unless compliance \u8805  85% for 7 days and 0 guardrail breaches. \
2.	Auto-rollback Safety\
o	Guardrail trip (EC/pH bounds, min-soak, exhaust lock, ramp-rate, etc.) auto-rolls back to last safe plan within 60 s and logs the event. \
3.	Staged Execution & SLOs\
o	Plans apply via outbox with ack SLO met; realtime step status within platform realtime SLO to clients. \
4.	Explainability & Nudges\
o	Every applied plan stores explainability; \'93Nudge\'94 operations simulate constraints and either apply safely or reject with reason. \
\
10) Testing Strategy\
\'95	Unit: cost function, constraint binder, ramp-rate limits, guardrail evaluator, compliance calculator.\
\'95	Contract: plan generation schema; A/B apply/stop; rollback endpoint; nudge simulation; outbox acks & retries. \
\'95	Integration/HIL: simulated HVAC/lighting/irrigation actuators; interlock trips (CO\uc0\u8322  exhaust, min-soak, over-ramp) \u8594  rollback; link loss \u8594  safe state.\
\'95	E2E (pilot): Shadow week \uc0\u8594  A/B week \u8594  Enable; measure plan compliance, breaches, revert times; verify SLOs.\
\'95	Chaos: packet loss, controller reboot, ack delays; ensure sagas & safe aborts. \
\
11) Dependencies & Integration Points\
\'95	FRP-05 Environment: targets/thresholds, conformance metrics (constraints, cost). \
\'95	FRP-06 Irrigation: program orchestration, interlocks, dryback logic, EC/pH closed-loop scaffolding. \
\'95	FRP-11 AI (ET\uc0\u8320  & Yield): ET\u8320  inputs, cultivar response curves, confidence gating for auto-apply (shared policy). \
\'95	FRP-15 Notifications: Slack/SMS for apply, trip, rollback, and promotion approvals (mirror/notify modes). \
\
12) Migration & Rollout\
\'95	Ship Shadow mode first at selected rooms; validate plans against operator practice.\
\'95	Enable A/B on limited manifolds; collect a week of compliance & response data.\
\'95	Enable per room only after thresholds pass; keep auto-rollback always on; maintain runbooks for drift & re-enable approvals. \
\
13) Risks & Mitigations\
\'95	Over-automation / trust debt \uc0\u8594  staged rollout, explainability, strict guardrails, quick rollback. \
\'95	Device capability drift \uc0\u8594  capability registry & validation before apply; fallback to safe baselines.\
\'95	SLO breaches in command plane \uc0\u8594  adaptive backoff, DLQ alarms, and manual pause; uphold interlocks & safe aborts. \
\
14) Open Design Decisions (defaults)\
\'95	Horizon/step: 12 h horizon / 10 min step; site-tunable.\
\'95	Weights: start balanced (0.4 yield proxy / 0.4 stress avoid / 0.2 resource), review per cultivar.\
\'95	Compliance metric: fraction of plan steps applied without violation or compensations, time-weighted.\
\'95	Quiet hours: default 21:00-06:00 for lighting & loud HVAC ramp changes; site policy can override.\
\
\
\
\
\
\
FRP-15 \'97 Notifications & Escalations (Channels, Routing, Quiet Hours, Burn-Rate Controls) \'97 MVP\
Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 \'97 \'a75.15 Notifications & Escalations \'97 Must: multi-channel notifications (in-app + Slack notify-only in MVP; SMS only for Critical when site policy allows; email for scheduled/digest); routing rules(role/team/assignee/watchers), quiet hours, escalation chains, dedup/bundling, outbox/ack delivery with DLQ, idempotency, and observability SLOs. Cross-module triggers originate from Environment/Alerts, Irrigation/Interlocks, Tasks/SLA, Compliance/COA/HOLD, Inventory/Label violations, Accounting sync failures, and MPC apply/rollback. Acceptance referenced throughout prior FRPs (Slack notify-only in MVP; SMS for Critical by policy; site-day report SLOs). \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
\
1) Purpose & Scope\
Provide a resilient, configurable notifications backbone that:\
\'95	Delivers the right information to the right people via in-app, Slack (notify-only MVP), SMS (Critical only when enabled), and email.\
\'95	Supports routing rules, escalation chains, quiet hours, deduplication/bundling, and burn-rate control.\
\'95	Guarantees delivery semantics via outbox, idempotent message keys, retries/backoff, and DLQ + remediation.\
\'95	Exposes SLOs & runbooks for reliability.\
\
2) Personas & Primary Use Cases\
\'95	Head of Cultivation / Facilities: real-time alerts (environment threshold breach, irrigation abort/interlock, device offline), with escalation if not acked.\
\'95	Operators: task assignments/SLA breaches; COA/HOLD gating reasons; label rule violations (preventing prints/moves).\
\'95	Compliance: failed COA, destruction approval requests, regulator sync DLQ spikes.\
\'95	Executives/Finance: scheduled analytics exports, accounting reconciliation failures (digest or high-priority email).\
\
3) Functional Requirements\
3.1 Channels (MVP)\
\'95	In-app: toasts/banners, notification center with filters & read/ack state.\
\'95	Slack (notify-only): outbound messages to mapped channels/DMs; no two-way reply mirroring in MVP (planned Phase-2). Delivery via outbox, idempotent keys, reconcile edits/deletes.\
\'95	SMS: Critical only when site policy enables; phone verification required; rate-limited & fail-safe.\
\'95	Email: scheduled/summaries and important system events; templates with variables; DKIM/SPF guidance.\
3.2 Routing & Subscriptions\
\'95	Rule engine: when <event_type> [and conditions] then send <severity> via <channels> to <recipients>\
o	Recipients: owner, assignee, watchers, role/team (e.g., Facilities On-Call), site-wide roles.\
o	Conditions: site, room/zone, severity, equipment type, genetics/phase, threshold bands, SLA tiers.\
\'95	Implicit subscriptions: task watchers/assignees; batch/room watchers; on-call rotations (see \'a73.5).\
3.3 Quiet Hours & Overrides\
\'95	Quiet hours per site (e.g., 21:00-06:00):\
o	Info/Warn \uc0\u8594  queue & digest (or Slack as low-priority)\
o	Critical \uc0\u8594  break-glass routes (SMS + Slack + in-app) bypass quiet hours as policy allows.\
3.4 Escalation Chains\
\'95	Multi-step chains: T+0 notify owners; +5m escalate to team; +15m escalate to site leadership; per-rule timers.\
\'95	Ack semantics: first human ack stops escalation; closing/resolving event ends the incident thread and backfills a post-mortem link if applicable.\
3.5 Dedup, Bundling & Burn-rate\
\'95	Dedup keys per incident (e.g., site:zone:metric) within a suppression window; re-alerts only on severity change or recovery.\
\'95	Bundling: compress bursts into a single digest (e.g., \'9310 valves reported low flow\'94 with a table).\
\'95	Burn-rate control: adaptive throttling; per-recipient/hour caps; fall back to digest with a \'93storm mode\'94 banner.\
3.6 Event Sources (minimum set)\
\'95	Environment alerts (targets/thresholds out of band, device offline).\
\'95	Irrigation interlocks/aborts, flow/pressure deviations, dryback miss windows.\
\'95	Tasks/SLA breaches, approvals needed (two-person), blocked reasons.\
\'95	Compliance: COA fail/HOLD applied, destruction approval, regulator DLQ.\
\'95	Inventory: label validation violations; Accounting: DLQ/variance.\
\'95	MPC (FRP-14): plan applied, guardrail trip, rollback, promotion approvals.\
\'95	Sales & Fulfillment: pick exception; manifest ready; ship posted; invoice failed.\
3.7 Outbox, Idempotency, Retries & DLQ\
\'95	All outbound messages pass through message_outbox with a delivery key (idempotency), status, attempts, and backoff.\
\'95	Provider failures \uc0\u8594  retry with exponential backoff; hardened DLQ with remediation tools (replay, edit recipient, change channel).\
3.8 Templates, Localization & Links\
\'95	Template library per event type/severity/channel; variables (site, room, genetics, reason codes, deep links).\
\'95	Optional localization; preview & send test flows.\
3.9 Privacy, Opt-in & Policy Controls\
\'95	Verified contact methods; user-level opt-in/out by channel/severity (policy permitting).\
\'95	Site policies: allow SMS Critical, break-glass bypass, max escalation depth, quiet hours.\
\
4) Data Model (key tables)\
Site-scoped (RLS) unless noted. Aligns with platform outbox/audit posture.\
notification_rules\
\'95	id, site_id, name, enabled, event_types[], conditions_json (scope/severity/time), actions_json (channels, recipients, escalation steps), created_by, updated_at\
notification_templates\
\'95	id, org_id (or site_id), event_type, severity, channel (app|slack|sms|email), body_template, variables[], locale, version, active\
notification_events\
\'95	id, site_id, event_type, severity, scope (room|zone|batch|equipment|task), scope_id, payload_json, dedup_key, opened_at, closed_at?, acked_by?, acked_at?\
message_outbox\
\'95	id, event_id, channel, recipients_json, body_resolved, idempotency_key, status (queued|inflight|sent|failed|dlq), attempts, next_attempt_at, provider_meta, created_at\
delivery_logs\
\'95	id, outbox_id, provider_id, request_meta, response_meta, status, latency_ms, ts\
quiet_hours\
\'95	id, site_id, tz, window_start, window_end, break_glass_policies\
escalation_chains\
\'95	id, site_id, rule_id, steps_json (delay, channels, recipients)\
on_call_rotations (optional minimal)\
\'95	id, site_id, team_id, schedule_json (shifts), current_on_call_user_id?\
contact_methods\
\'95	id, user_id, type (sms|email|slack), address, verified (bool), verified_at, last_test_at\
burn_rate_policies\
\'95	id, site_id, per_recipient_per_hour_cap, dedup_window_s, storm_mode_threshold\
\
5) API Surface (REST + Events)\
Rules & Templates\
\'95	POST /v1/notifications/rules (create/update/enable)\
\'95	POST /v1/notifications/templates (upsert) / GET \'85/preview?template_id=\'85&event_id=\'85\
Events & Acks\
\'95	POST /v1/notifications/events (internal emit)\
\'95	POST /v1/notifications/events/:id/ack (user ack) / POST \'85/:id/close\
\'95	POST /v1/notifications/test (channel, to, template_id, variables)\
Quiet Hours & Escalations\
\'95	PUT /v1/notifications/quiet-hours (site policy)\
\'95	PUT /v1/notifications/escalations/:rule_id (steps)\
Outbox & DLQ\
\'95	GET /v1/notifications/outbox?status=\'85\
\'95	POST /v1/notifications/outbox/:id/replay / \'85/reroute / \'85/cancel\
Events (WS/SSE to clients)\
\'95	notification.event.opened/acked/closed, notification.escalated, notification.outbox.dlq\
All mutators accept Idempotency-Key; outbox implements retries/backoff and DLQ.\
\
6) UX Flows\
1.	Rule Builder\
o	Select event types & conditions \uc0\u8594  choose channels/recipients \u8594  define escalation steps \u8594  simulate with historical events \u8594  save/enable.\
2.	Notification Center (In-app)\
o	Filter by site/severity/source; bulk ack/close (ABAC guarded); drill-down shows event timeline and linked objects (batch, task, run, alert).\
3.	Quiet Hours & On-Call\
o	Set site TZ window and break-glass policies; optional on-call rotation editor (simple shifts) for Facilities/Compliance teams.\
4.	Outbox & DLQ Console\
o	Live view of queued/inflight/sent/failed; retry or reroute DLQ; provider error tooltips; burn-rate indicators and storm mode banner.\
5.	Slack/SMS/Email Previews\
o	Template preview with variables; \'93Send test\'94 to verified contact methods; show deep links back to the exact entity.\
\
7) Security, RLS/ABAC & Audit\
\'95	RLS: site-scoped access to events/rules/templates; org-scoped templates readable if shared.\
\'95	ABAC: creating rules that send SMS, changing quiet hours/burn-rate, force-closing Critical events, and DLQ reroute require elevated roles; two-person optional for break-glass policy edits.\
\'95	Audit: all rule changes, event lifecycle (open/ack/close), outbox replays/reroutes are hash-chained in audit logs with nightly verification.\
\
8) Observability, SLOs & Runbooks\
SLOs (platform-wide alignment):\
\'95	Event\uc0\u8594 Slack notify p95 \u8804  2 s (MVP), Event\u8594 in-app near-instant (\u8804 300 ms bus), Event\u8594 SMS p95 \u8804  10 s (provider-dependent), site-day report p95 \u8804  90 s remains in effect for scheduled analytics.\
Key metrics:\
\'95	notification_latency_ms\{channel\}, outbox_queue_depth, delivery_fail_rate\{provider\}, dlq_size, ack_time_seconds (MTTA), escalation_count, burn_rate_drops_total.\
Alerts & Runbooks:\
\'95	Storm mode (alert flood) \uc0\u8594  enable bundling & increase dedup window; investigate root cause (Environment/Irrigation/Controller).\
\'95	Provider outage (Slack/SMS/email) \uc0\u8594  reroute to remaining channels; post status; replay DLQ after recovery.\
\'95	High MTTA/MTTR \uc0\u8594  inspect escalation chain timing; adjust quiet hours or break-glass policies.\
\
9) Acceptance Criteria (MVP)\
1.	Slack Notify-only\
o	Events mirror to Slack within \uc0\u8804  2 s p95 via outbox; edits/deletes reconcile; no two-way thread sync in MVP. (Required; used by FRP-04/05/06/14)\
2.	SMS for Critical (Policy-gated)\
o	When site policy enables, Critical events dispatch SMS (phone verified, rate-limited); quiet hours bypass allowed per break-glass rules. (Required)\
3.	Quiet Hours & Escalations\
o	Info/Warn respect quiet hours with digesting; Critical can bypass; escalation halts on first ack. (Required)\
4.	Dedup & Burn-rate Control\
o	Dedup keys suppress repeats within the configured window; storm mode bundles events and enforces per-recipient caps. (Required)\
5.	Reliability\
o	Outbox idempotency prevents duplicate sends; retries/backoff; DLQ visible with replay/reroute tools. (Required)\
\
10) Testing Strategy\
\'95	Unit: rule evaluation; dedup/bundling; escalation timers; ack/close effects; burn-rate capping.\
\'95	Contract: channel senders (Slack/SMS/email) with provider stubs; idempotent outbox; template rendering & preview.\
\'95	Integration/E2E: trigger events from Environment/Irrigation/Tasks/Compliance \uc0\u8594  routing/quiet hours/escalation \u8594  Slack/SMS/email delivery \u8594  ack stops escalation \u8594  DLQ replay.\
\'95	Resilience/Chaos: provider outages; burst floods; clock skew across sites; quiet-hours boundary cases (DST).\
\
11) Dependencies & Integration Points\
\'95	FRP-05 Environment & Alerts, FRP-06 Irrigation, FRP-04 Tasks, FRP-09 Compliance, FRP-10 Accounting, FRP-14 MPC: emit events into the Notification bus.\
\'95	FRP-13 Analytics & Reporting: scheduled report delivery via email and status notifications.\
\'95	FRP-01 Identity/ABAC: permissions for policy edits, SMS enablement, and force-close.\
\
12) Migration & Rollout\
\'95	Seed baseline rules for Critical events (device offline, interlock, irrigation abort, COA fail, MPC rollback) and quiet hours per site.\
\'95	Connect Slack workspace (notify-only) and validate mapped channels; verify contact methods for SMS/email.\
\'95	Run in monitor mode for 3-5 days (deliver in-app only) to tune dedup/burn-rate; then enable Slack/SMS per policy.\
\
13) Risks & Mitigations\
\'95	Alert fatigue \uc0\u8594  dedup/bundling, burn-rate caps, severity tuning, and digests by default for non-critical during quiet hours.\
\'95	Provider outages \uc0\u8594  multi-channel fallbacks, DLQ with replay, status banner.\
\'95	Misrouted notifications \uc0\u8594  simulation & \'93send test\'94 flows; ABAC-guarded changes; audit on rule edits.\
\'95	PII concerns \uc0\u8594  verified contact methods, minimal data in SMS, links to secure app views.\
\
14) Open Design Decisions (defaults)\
\'95	Default quiet hours: 21:00-06:00 site TZ; Critical may bypass per site policy.\
\'95	Escalation default: 0/5/15 minutes (owner/team/leadership).\
\'95	Dedup window: 10 minutes (environment/irrigation), 30 minutes (compliance/accounting).\
\'95	Per-recipient cap: 20 msgs/hour outside storm mode; 5 msgs/hour in storm.\
\'95	Email digest cadence: hourly during quiet hours; daily rollup option.\
\
FRP-16 \'97 Sales & Fulfillment (B2B Wholesale; no POS)\
Purpose & Scope. Wholesale order mgmt: Sales Orders \uc0\u8594  Pick/Pack \u8594  Transfer Manifest \u8594  Ship \u8594  QBO Invoice \u8594  Returns (HOLD child lot). Out of scope: consumer POS/e-commerce.\
In scope (MVP). Partners, SO approvals, FEFO allocation, pick/pack, labels & manifests, shipments, QBO invoices, returns\uc0\u8594 HOLD child lot. LeafLink integration (availability sync + order ingest) ships behind feature flag leaflink_enabled and is not a launch blocker for core Sales/Fulfillment.\
SLOs & Acceptance\
\'95 Sales order \uc0\u8594  manifest \u8594  ship cycle p95 \u8804  30 minutes for standard orders in staging validation; exceptions logged with remediation plan.\
\'95 Invoice posts to QuickBooks within 5 minutes of shipment confirmation; DLQ remains <0.1% over trailing 7 days.\
\'95 Returns generate HOLD child lots with traceable lineage and audit hash-chain entry; compliance holds block shipment until cleared.\
\'95 LeafLink integration runs contract + E2E suites (create/update/cancel) prior to enabling the leaflink_enabled flag; production pilot requires release captain sign-off.\
\uc0\u8232 Source alignment: CanopyLogic PRD \'96 Enterprise Edition v1.0 (Sales & Fulfillment (B2B), Inventory/Labels, Compliance/Manifests, Accounting/QBO, Notifications/Analytics.) \'97 see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md\
1) Purpose & Scope\uc0\u8232 Provide wholesale order management for cultivation businesses selling to licensed dispensaries only: Sales Orders \u8594  Pick/Pack \u8594  Transfer Manifest \u8594  Ship \u8594  QBO Invoice \u8594  Returns. Out of scope (MVP): retail POS/e-commerce, consumer checkout/discount engines, cash management.\
In scope (MVP)\uc0\u8232 \'95 Partners (customers/vendors/labs/carriers), price lists (simple), Sales Orders with approvals, FEFO allocation, pick/pack, compliant labels & manifests, shipments, invoices (QBO), returns\u8594 HOLD child lot, LeafLink integration (availability sync + order ingest).\
2) Personas & Primary Use Cases\uc0\u8232 \'95 Sales Ops / Account Manager: enter/review SOs, manage allocations.\u8232 \'95 Warehouse Lead / Operators: pick by FEFO, pack, print labels/manifest, ship, process returns.\u8232 \'95 Compliance Officer: manifest rules, holds, COA checks.\u8232 \'95 Accounting/AP/AR: invoice & payment via QBO; reconcile.\
3) Functional Requirements\uc0\u8232 3.1 Partners\u8232 \'95 Catalog of partners at org scope with role \u8712  \{customer,vendor,lab,carrier\}; contacts, licenses, terms, jurisdiction.\
3.2 Sales Orders (SO)\uc0\u8232 \'95 States: draft \u8594  approved \u8594  picking \u8594  packed \u8594  shipped \u8594  invoiced \u8594  closed|canceled.\u8232 \'95 Lines: item (SKU), UoM, qty, unit price/discount, tax code; notes/attachments.\u8232 \'95 Approvals: ABAC policy (credit/terms/limits).\u8232 \'95 Allocation: FEFO pick suggestions by site/bin; hold qty when approved.\
3.3 Pick & Pack\uc0\u8232 \'95 Picklists generated by FEFO with bin sequence; scan-to-confirm; exceptions require reason (audit).\u8232 \'95 Pack: build packages/cases; print labels (ZPL/PDF) via Inventory module; seal counts.\
3.4 Transfer Manifest & Ship\uc0\u8232 \'95 Create Compliance Transfer from shipment; validate regulator rules; block ship on HOLD/violations; print manifest and shipping labels; carrier & tracking recorded; status mirrored back to marketplace (if any).\
3.5 Invoice & Payments (QBO)\uc0\u8232 \'95 Post Invoice to QBO on ship/confirm; payments synced from QBO webhooks; idempotent Request-ID usage and DLQ per Accounting FRP.\
3.6 Returns (RMA)\uc0\u8232 \'95 Customer return creates child HOLD lot linked to origin (\'a7FRP-07); reason required; credit memo (optional) via QBO.\
3.7 Integrations \'97 LeafLink (MVP)\uc0\u8232 \'95 Inventory sync: publish availability deltas by item/site (p95 < 60 s from change).\u8232 \'95 Order ingest: webhook creates SO; idempotent on retries; FEFO reserve.\u8232 \'95 Shipment status: push manifest number & ship status.\
Rollout: Ship behind site flag leaflink_enabled; pilot one site; not a launch blocker for core Sales/Fulfillment.\
4) Data Model (key tables)\uc0\u8232 partners (org-scoped)\u8232 \'95 id, org_id, role (customer|vendor|lab|carrier), legal_name, dba?, license_no?, jurisdiction?, terms?, contacts_json, active, created_at\u8232 sales_orders\u8232 \'95 id, site_id, partner_id (customer), status, currency, requested_ship_at?, approved_by?, created_at\u8232 sales_order_lines\u8232 \'95 id, so_id, item_id, uom_id, qty, unit_price, discount_pct?, tax_code?, reserved_qty\u8232 pick_lists (optional)\u8232 \'95 id, so_id, generated_at, picker_user_id?, status, notes\u8232 shipments\u8232 \'95 id, site_id, so_id, status (staged/manifested/shipped/delivered), carrier?, tracking?, shipped_at\u8232 shipment_lines\u8232 \'95 id, shipment_id, lot_id, item_id, uom_id, qty, bin_from, label_job_id?\u8232 transfer_manifests\u8232 \'95 id, site_id, shipment_id, regulator_ref, status (draft/validated/printed/voided), artifact_url\u8232 invoices\u8232 \'95 id, so_id, qbo_company_id, qbo_doc_id?, status (queued/sent/paid/voided), posted_at\u8232 rmas (returns)\u8232 \'95 id, site_id, so_id?, shipment_id?, reason_code, hold_child_lot_id, created_at\
5) API Surface (REST + Events)\uc0\u8232 Partners \'97 GET/POST/PATCH /v1/partners\u8232 Sales Orders \'97 POST /v1/sales-orders | GET \'85?status=\'85 | POST /v1/sales-orders/:id/approve\u8232 Allocation & Picking \'97 POST /v1/pick-lists (from SO) | POST /v1/picks/confirm (scan)\u8232 Ship & Manifest \'97 POST /v1/shipments | POST /v1/shipments/:id/manifest (calls Compliance API) | POST /v1/shipments/:id/ship\u8232 Invoice \'97 POST /v1/invoices (SO/Shipment) | GET /v1/invoices?status=\'85\u8232 Returns \'97 POST /v1/returns (creates HOLD child lot)\u8232 LeafLink Webhooks \'97 POST /integrations/leaflink/webhook (HMAC)\u8232 Events (WS/SSE) \'97 sales.so.created/approved, sales.pick.exception, sales.shipment.manifested/shipped, sales.invoice.posted/failed\
6) UX Flows\
1.	Marketplace \uc0\u8594  SO (auto): LeafLink order \u8594  SO (idempotent); FEFO reserve.\
2.	Pick & Pack: generate picklist \uc0\u8594  scan picks \u8594  pack & print labels \u8594  stage shipment.\
3.	Manifest & Ship: create transfer manifest \uc0\u8594  validate/print \u8594  ship \u8594  QBO invoice posted.\
4.	Return: RMA \uc0\u8594  child HOLD lot \u8594  optional credit memo.\
7) Security, RLS/ABAC & Audit\uc0\u8232 \'95 Site-scoped RLS; ABAC for approvals, price overrides, manifests/voids; hash-chained audit logs.\
8) Observability & SLOs\uc0\u8232 \'95 Pick confirm p95 < 750\u8201 ms; inventory reserve/update p95 < 250\u8201 ms; marketplace inventory delta publish p95 < 60\u8201 s.\
9) Acceptance Criteria (MVP)\
1.	End-to-end: SO \uc0\u8594  pick/pack \u8594  manifest \u8594  ship \u8594  QBO invoice succeeds; FEFO honored.\
2.	Compliance: Ship blocked on HOLD/violations; manifest printed; regulator ref stored.\
3.	Returns: Return creates HOLD child lot linked to origin; downstream moves blocked until QA release.\
10) Testing Strategy\uc0\u8232 \'95 Contract: SO/Ship/Invoice/Return endpoints; idempotent marketplace webhooks.\u8232 \'95 Integration/E2E: LeafLink order\u8594 SO\u8594 pick/pack\u8594 manifest\u8594 ship\u8594 QBO invoice; return\u8594 HOLD.\u8232 \'95 Load: 1k lines/day across sites; SLOs hold.\
11) Dependencies & Integration Points\uc0\u8232 \'95 FRP-07 Inventory (lots/labels/FEFO/returns), FRP-09 Compliance (manifests/holds/COA), FRP-10 Accounting (QBO), FRP-15 Notifications, FRP-13 Analytics, Inventory/Compliance/QBO.\
FRP-16 Sales/Ship for order-to-invoice; FRP-10 QBO for reconciliation.\
12) Migration & Rollout\uc0\u8232 \'95 Seed partners; map QBO Items/Customers; connect LeafLink sandbox; pilot with one site; enable dashboards & notifications.\
13) Risks & Mitigations\uc0\u8232 \'95 Mapping drift (items/customers) \u8594  QBO webhook drift detection; reconciliation tools.\u8232 \'95 Non-compliant labels/manifests \u8594  pre-print validation hooks (Compliance FRP).\
14) Open Design Decisions (defaults)\uc0\u8232 \'95 Invoice timing: default on ship (site policy can defer).\u8232 \'95 Backorders: SO remains open until fully shipped or canceled lines.\
\
\
\
\
\
\
\
\
FRP-CL-103 Illinois Cutover Wizard\
ID/Title\uc0\u8232 FRP-CL-103 \'97 Illinois Cutover Wizard (BioTrack \u8594  Metrc)\
Summary\uc0\u8232 Provide a guided migration for Illinois licensees moving from BioTrack to Metrc: compose External Transfers, receive & re-tag inventory, reconcile COAs and on-hand balances, and generate a signed Cutover Report. Aligns with CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.9 (Compliance) and \'a79 (Integrations); ships in Phase 2 per \'a713 (see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md). \
Goals\
\'95	Import BioTrack inventory/manifests (from FRP-CL-102 export).\
\'95	Map items/UoM/categories to Metrc enumerations.\
\'95	Auto-compose External Transfers + manifests; accept and re-tag to new Metrc labels.\
\'95	Preserve lineage and attach existing COAs; produce Cutover Report PDF.\
Non-Goals\
\'95	General POS migration, financials, or label redesign.\
User Stories\
\'95	As a Compliance Officer, I can select legacy packages and preview their Metrc item/category/UoM mapping before execution.\
\'95	As Inventory, I can print the new Metrc package tags and scan to confirm acceptance.\
\'95	As Compliance, I can download a signed Cutover Report showing zero net deltas by item.\
Acceptance Criteria\
\'95	Balances reconcile: post-cutover on-hand deltas \'b10 by item/UoM.\
\'95	Lineage preserved: each Metrc package references its source package/manifest in notes/attachments.\
\'95	COA attached: prior COA PDFs attached to the new package; gating policies intact per site. (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.9 Data; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
\'95	Report: PDF with package-level before/after, mapping table, exceptions, operator signoffs; stored under batch_coa_attachments. (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.9 Data; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
APIs & Integrations\
\'95	BioTrack: read inventory & manifests (FRP-CL-102).\
\'95	Metrc v2: /packages, /items, /unitsofmeasure, /transfers (create External Transfers; accept; relabel). (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a79; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
Data Model Changes\
\'95	None new; depends on jurisdiction_enums (FRP-CL-106) for categories/UoM and existing batch_coa_attachments. (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a75.9 Data; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
UI/UX\uc0\u8232 Four-step wizard: Select \u8594  Map \u8594  Preview \u8594  Execute & Reconcile.\
\'95	Blocking rules: cannot execute if mapping unresolved or jurisdiction_enums stale.\
Observability & SLOs\
\'95	Emit migration metrics: items mapped %, exceptions count, execution time; error logs with correlation IDs.\
\'95	Alarm if exception rate >2% or any post-cutover delta \uc0\u8800  0.\
Security & Compliance\
\'95	Credentials per site; audit hash chain records each step; export retained per retention policy. (CanopyLogic PRD \'96 Enterprise Edition v1.0 \'a77; see docs/prd/CanopyLogic_PRD_Enterprise_Edition_v1_0_Sep_17_2025.md)\
Rollout / Flags / Backout\
\'95	Feature flag: il_cutover_wizard_enabled.\
\'95	Dry-run mode creates a Preview Report only; backout = do nothing (no writes).\
Dependencies\
\'95	FRP-CL-102 (BioTrack export), FRP-CL-106 (enumerations cache), FRP-CL-101 (Metrc coverage).\
Risks & Mitigations\
\'95	Mapping gaps \uc0\u8594  pre-flight checks + one-click enum refresh.\
\'95	Throttling \uc0\u8594  adaptive concurrency; DLQ and replay.\
Test Plan\
\'95	Contract tests on Metrc endpoints used; sandbox dry-runs; \'93golden\'94 fixture with known inventory.\
\'95	Verify report and zero-delta on a seeded dataset.\
Docs & Training\
\'95	Operator playbook with screenshots; sample report included.\
Hardware/Ops Note\
\'95	No changes to floor safety; all actuations remain governed by local interlocks and E-stop independent of network status. \
Analytics Mirror: Publish the Cutover Report summary (exceptions, zero-delta validation) to Analytics & Reportingfor audit visibility; full PDF remains in Compliance. \
\
5) Ordering & gating (so FRPs land cleanly)\
1.	106 \uc0\u8594  101 \u8594  102 (enums then Metrc surface, then BioTrack export)\
2.	103 (cutover wizard)\
3.	104 & 105 (analytes + webhook efficiency)\
4.	108 & 109 (operator UX polish)\
5.	107 (receipts) and 110 (MO reconciliation) per site go-live plan\uc0\u8232 Maps to PRD MVP / Phase 2 / Phase 3 milestones. \
\
\
\
\
\
\
Appendix A \'97 Idempotency & Outbox Patterns\
A1) Purpose\
Guarantee exactly-once effects for external side-effects (controllers, Slack/SMS/email, QBO, label printers) and client-retried API writes.\
A2) Client Idempotency\
\'95	Mutating HTTP endpoints accept header Idempotency-Key (UUID v4, \uc0\u8804 64 chars).\
\'95	Server records (tenant, endpoint, idempotency_key) in idempotency_keys with the first response body & status; subsequent repeats return the stored result.\
Table: idempotency_keys\
\'95	id, org_id, site_id, endpoint, key, request_hash, response_body, status_code, created_at, ttl_expires_at\
A3) Outbox (Transactional)\
\'95	Within the same DB transaction as the business write, enqueue outbox rows; a background dispatcher commits to providers (MQTT/SMTP/Slack/QBO/Printer).\
\'95	Each outbox record has a deterministic delivery_key (e.g., site:channel:provider:external_ref), enabling downstream de-duplication.\
State machine: queued \uc0\u8594  inflight \u8594  sent | failed \u8594  (retry/backoff) \u8594  dlq.\u8232 Backoff: exp. 1\'d7, 2\'d7, 4\'d7 \'85 (cap 30 min) with jitter.\u8232 Poison detection: \u8805 N attempts or provider hard-fail \u8658  DLQ with human remediation (replay/reroute/cancel).\
Core table: message_outbox (already referenced in FRP-15)\
\'95	id, event_id?, channel, provider, delivery_key, payload, attempts, status, next_attempt_at, last_error, created_at\
Provider-specific de-dupe\
\'95	Slack: message thread_ts keyed;\
\'95	Email: Message-ID and RFC-822 References;\
\'95	Label printers: print job checksum.\
\
Appendix B \'97 RBAC/ABAC Policy DSL\
B1) Overview\
\'95	RBAC supplies baseline permissions via roles.\
\'95	ABAC overlays policy rules that consider user, object, and context attributes for high-risk actions (e.g., destruction, interlock suppression, closed-loop enable, label overrides).\
B2) Policy Model\
Policy = \{match, when, decision, obligations\}\
\'95	match: objects & actions the policy applies to.\
\'95	when: boolean expression (CEL-like) over attributes.\
\'95	decision: allow | deny | require_two_person.\
\'95	obligations: side-effects (e.g., \'93log with reason\'94, \'93notify Compliance\'94).\
Attribute namespaces\
\'95	user.* (role_names[], certifications[], site_membership[])\
\'95	object.* (entity_type, site_id, qa_status, risk_score)\
\'95	context.* (local_time, quiet_hours, device_session, feature_flags)\
\'95	env.* (build, region)\
B3) DSL (JSON, CEL-style expressions)\
\{\
  "name": "Destruction Two-Person",\
  "match": \{"action": "destruction.approve", "object.entity_type": ["package","lot"]\},\
  "when": "user.hasRole('Compliance') && context.local_time.isWithin('06:00','21:00')",\
  "decision": "require_two_person",\
  "obligations": ["audit.reason_required", "notify.slack('compliance-approvals')"]\
\}\
\{\
  "name": "Closed-loop Enable Guard",\
  "match": \{"action": "control.closed_loop.enable"\},\
  "when": "site.flags.closed_loop_ecph_enabled == true && user.hasRole('HeadOfCultivation') && context.ai_confidence >= site.policies.min_confidence",\
  "decision": "allow",\
  "obligations": ["audit.hash_chain", "two_person.when(site.policies.require_two_person)"]\
\}\
B3) Navigation Controls (RBAC/ABAC \uc0\u8594  Left-Rail)\u8232 Roles map to visible sections; ABAC may further hide/show dangerous actions. On sign-in, users land on the highest-priority section dashboard for their role (e.g., Control Room for Cultivation; Inventory Dashboard for Inventory/Sales; Compliance Console for Compliance), with section switching preserved when multi-role. The selection is audited. B4) \
Evaluation\
1.	Gather RBAC decision (must be permit to continue).\
2.	Collect attributes (user/object/context), bind to CEL.\
3.	Evaluate all matching policies \uc0\u8594  choose most specific; conflict resolution favors deny > two_person > allow.\
4.	Emit policy_decisions + obligations (audit, notifications).\
\
Appendix C \'97 Data Retention & Cost Guardrails\
C1) Tiers & Defaults\
\'95	Operational DB (Postgres + Timescale)\
o	Raw telemetry (per-second to per-minute): 14-30 days\
o	1m/5m/1h rollups: 90/365/\uc0\u8734  days, respectively\
o	Operational entities (batches/tasks/inventory): active + 7 years (auditable)\
\'95	Archive (S3/Parquet)\
o	Raw + rollups beyond operational windows, object-locked if WORM enabled.\
\'95	ClickHouse OLAP (optional)\
o	Long-horizon analytics windows (e.g., multi-year), partitioned by month/site.\
C2) Guardrails\
\'95	Budgets per org: max storage footprint; warn at 80%, auto-age raw series first.\
\'95	Per-metric sampling policies for chatty sensors.\
\'95	Per-site retention profiles (small/standard/enterprise).\
C3) PII/Data Subject Requests\
\'95	PII minimization (identity/contact only).\
\'95	Erase/anonymize jobs target PII in non-audit domains; audit retains hash-chained facts without personal content.\
\
Appendix D \'97 RLS & Tenant Scoping (PostgreSQL)\
D1) Approach\
\'95	All site-scoped tables enforce Row-Level Security.\
\'95	App sets SET LOCAL app.site_ids = '\{\'85\}' and app.org_id on each request.\
D2) Policies (pattern)\
ALTER TABLE tasks ENABLE ROW LEVEL SECURITY;\
\
CREATE POLICY site_read ON tasks\
  FOR SELECT USING (site_id = ANY (current_setting('app.site_ids', true)::uuid[]));\
\
CREATE POLICY site_write ON tasks\
  FOR INSERT WITH CHECK (site_id = ANY (current_setting('app.site_ids', true)::uuid[]))\
  FOR UPDATE USING (site_id = ANY (current_setting('app.site_ids', true)::uuid[]));\
\'95	Org-scoped catalogs (roles, policies) use current_setting('app.org_id').\
\'95	Use SECURITY DEFINER helper functions for narrow exceptions (e.g., cross-site audits) and never expose them broadly.\
D3) Tests\
\'95	Fuzz tests generate random site_ids and assert 403/empty responses.\
\'95	Explain plans to ensure RLS predicate pushdown via partial indexes.\
\
Appendix E \'97 Audit Hash Chain\
E1) Row format\
\'95	id, site_id, actor_user_id, action, entity, entity_id, payload_json, ts, prev_hash, row_hash, verified_at\
Canonical hash\
row_hash = SHA256(\
  concat_ws('|', id, site_id, actor_user_id, action, entity, entity_id, ts, stable_json(payload_json), prev_hash)\
)\
\'95	stable_json = deterministically key-sorted, whitespace-stripped JSON.\
E2) Verification\
\'95	Nightly job recomputes chain per site; marks verified_at; emits discrepancy alarms.\
\'95	Optional anchoring: write top-of-day hash to WORM store.\
\
Appendix F \'97 Observability & SLO Playbook\
F1) Golden Signals\
\'95	Latency: API p95/p99; command enqueue\uc0\u8594 ack p95; realtime bus p95.\
\'95	Traffic: ingest rate, queue depth.\
\'95	Errors: HTTP 5xx, DLQ size, controller acks timeouts.\
\'95	Saturation: DB CPU/iowait, broker partitions, outbox throughput.\
F2) Standard SLOs (from FRPs)\
\'95	Auth/Login p95 \uc0\u8804  1.5 s\
\'95	Task/messaging round-trip p95 \uc0\u8804  300 ms\
\'95	Telemetry device\uc0\u8594 store p95 \u8804  1.0 s; store\u8594 client p95 \u8804  1.5 s\
\'95	Command enqueue\uc0\u8594 ack p95 \u8804  800 ms\
\'95	Site-day report p95 \uc0\u8804  90 s\
\'95	Slack notify p95 \uc0\u8804  2 s; SMS Critical p95 \u8804  10 s\
F3) Runbooks\
\'95	Alert storms \uc0\u8594  enable bundling, widen hysteresis; check upstream regressions.\
\'95	Broker loss \uc0\u8594  fail to local safety; staggered reconnect; replay outbox.\
\'95	Rollups stale \uc0\u8594  backfill readers; verify continuous aggregate job health.\
\'95	DLQ growth \uc0\u8594  inspect provider status; reroute; replay windows.\
\
Appendix G \'97 API Versioning & Compatibility\
G1) Strategy\
\'95	URI-versioned (/v1/\'85) + semantic versions in OpenAPI.\
\'95	Additive changes are backward-compatible; breaking changes ship as /v2.\
G2) Deprecation Policy\
\'95	Mark endpoints as deprecated in OpenAPI; 180-day deprecation window (configurable per contract).\
\'95	Emit deprecation warnings via Deprecation header with end-of-life date.\
G3) Problem Details (RFC 7807)\
Standard error body across services:\
\{\
  "type": "https://errors.harvestry.app/invalid-entity",\
  "title": "Validation Failed",\
  "status": 422,\
  "detail": "2 fields invalid",\
  "instance": "/v1/tasks/...",\
  "errors": [\
    \{"field": "due_at", "code": "must_be_future"\},\
    \{"field": "owner_user_id", "code": "not_in_site"\}\
  ],\
  "correlation_id": "c-6d0e..."\
\}\
\'95	Correlation-ID echoed end-to-end (HTTP header + traces).\
\
Appendix H \'97 Time, Timezones & Scheduling\
H1) Principles\
\'95	Store UTC, render in site TZ.\
\'95	All schedules (cron/dayparts) evaluate in site timezone with DST-aware library.\
\'95	Anchor weekday & snap policy (from FRP-03) consistently applied in planners.\
H2) Day boundaries\
\'95	Scheduled exports & ESG reports close at 23:59:59.999 site TZ.\
\'95	For DST gaps, skip duplicate hour or disambiguate with IANA rules.\
\
Appendix I \'97 CSV/XLSX Import & Export\
I1) Import pipeline\
1.	Upload \uc0\u8594  parse (schema-aware) \u8594  Preview with validation \u8594  Commit (single txn) with Idempotency-Key.\
2.	Row-level feedback (accepted/rejected with reason).\
3.	Dry-run option for large files.\
I2) Conventions\
\'95	Header row required; UTF-8; comma or tab; quoted fields allowed.\
\'95	Dates in ISO-8601 with timezone if applicable.\
\'95	IDs: UUIDv4 or external codes (validated).\
\'95	Enumerations validated against reference data; unmapped values flagged.\
\
Appendix J \'97 Security Hardening (Baseline)\
J1) Posture\
\'95	OWASP ASVS L2 controls as baseline; TLS 1.2+; HSTS; CSP; CSRF protections.\
\'95	Secrets in KMS/Vault; rotation playbooks; envelope encryption for sensitive blobs.\
\'95	Key material for Edge uses device certs; mTLS to broker/API.\
\'95	Dependency security: SBOM, SCA (daily), SAST in CI, container image signing, provenance attestation.\
\'95	Prod access via SSO + MFA + Just-in-Time with short-lived creds.\
J2) Data\
\'95	At rest encryption (DB, S3).\
\'95	In transit TLS everywhere, MQTT over TLS.\
\'95	PII minimal; logs redacted; access logged & audited.\
\
Appendix K \'97 Disaster Recovery (DR) & Business Continuity (BCP)\
\'95	RPO \uc0\u8804  5 min (streaming replicas + WAL shipping).\
\'95	RTO \uc0\u8804  30 min (automated failover & DNS cutover).\
\'95	Regular game days; runbooks stored and versioned.\
\'95	Backup verification (logical & physical) weekly; restore drills quarterly.\
\
Appendix L \'97 Edge Provisioning, OTA & Local Safety\
L1) Provisioning\
\'95	Each Edge node (HSES12/HSEA24) has a device certificate; enrollment issues a site-scoped cert and registers serial/MAC.\
\'95	Zero-touch option using pre-burned bootstrap certs; first connect pins org/site.\
L2) OTA\
\'95	A/B partitions; signed images; secure boot; rollback on boot failure.\
\'95	Rate-limited staged rollouts; health telemetry after update.\
L3) Local Safety\
\'95	Failsafe OFF on ESTOP/door/broker loss; watchdog timers; interlock evaluation at the edge independent of cloud control.\
\
Appendix M \'97 Printing & PDF Pipeline\
M1) Label Printing\
\'95	Templates: ZPL (thermal) and PDF.\
\'95	Printer outbox mirrors message outbox semantics with job checksum and reprint policy.\
\'95	Preview artifacts stored for audit.\
\'95	Network printers via LPR/IPP; USB via gateway.\
M2) PDF\
\'95	Server-side renderer (headless) with deterministic fonts; artifacts stored with checksum and retention metadata.\
\
Appendix N \'97 ClickHouse Triggers & Data Movement\
\'95	Enable OLAP sidecar when any trigger fires:\
o	Query p95 for targeted dashboards > 5 s\
o	Ingest rate > 200k points/min sustained 30+ min\
o	Cross-site queries span > 6 months frequently\
\'95	Data flows: Postgres\uc0\u8594 S3/Parquet\u8594 ClickHouse (external table or COPY).\
\'95	Refresh policies per cube (cube_materializations).\
\
Appendix O \'97 Read-only GraphQL (Persisted Queries)\
\'95	Disabled by default; Opt-in per org.\
\'95	Only persisted queries (no ad-hoc); complexity scoring and RLS scopes required.\
\'95	No introspection in prod; allow list of variables with type guards; rate limits per key.\
Persisted query metadata\
\'95	id, org_id, gql_text, complexity_score, allowed_scopes[], owner_team, change_log\
\
Appendix P \'97 Eventing & Integrations\
P1) Event Bus\
\'95	App events over WebSocket/SSE: task/alert/irrigation/mpc/compliance/accounting.\
\'95	Fan-out p95 \uc0\u8804  1.5 s; backpressure via bounded queues.\
P2) Slack & SMS specifics\
\'95	Slack (MVP): notify-only with reconciliation for edits/deletes; retries/backoff; DLQ & reroute.\
\'95	SMS: Critical only; verified numbers; template minification; privacy redactions.\
\
Appendix Q \'97 Testing & Release Gates\
Q1) Testing Stages\
\'95	Unit/Contract/Integration/E2E per FRP; HIL for hardware flows; Chaos for resilience.\
\'95	Security: RLS fuzzing, policy evaluation fuzzing, token rotation simulations.\
Q2) Release Gates\
\'95	Feature flags: monitor-only \uc0\u8594  soft-block \u8594  enforce rollout (site by site).\
\'95	SLO canaries and rollback; DLQ \uc0\u8804  threshold; error budgets documented.\
\
Appendix R \'97 Naming, Schema & API Conventions\
\'95	snake_case DB columns; camelCase JSON fields.\
\'95	UUIDs for primary keys; code fields for human-readable identifiers.\
\'95	created_at/updated_at everywhere; status enums with explicit lifecycle diagrams in FRPs.\
\'95	Pagination: cursor-based for read-heavy endpoints; limit defaults; stable ordering.\
\
Appendix S \'97 Privacy & Data Map (Snapshot)\
\'95	Identity: users (email, display_name, phone?)\
\'95	Operations: tasks, audit logs, inventory movements.\
\'95	Telemetry: environment, irrigation, energy.\
\'95	No health data, no payment card data in scope.\
\'95	Data Sharing: only with configured integrations (QBO, regulator systems), governed by mappings and audit.\
\
Appendix T \'97 Fixture Library & Synthetic Data\
\'95	Tools to generate synthetic telemetry (Temp/RH/VPD, VWC/EC/pH) with controllable drift; seed inventoriesand batches for demo and test.\
\'95	Fixtures tagged by FRP to enable repeatable E2E runs and performance tests.\
\
}